Search.setIndex({"alltitles": {"1. Correction": [[1, "correction"]], "2. Warning": [[1, "warning"]], "2020-09-04 (7dd2ab7)": [[0, "dd2ab7"]], "2020-09-19 (31a37e0)": [[0, "a37e0"]], "2020-09-19 (acb7664)": [[0, "acb7664"]], "2020-10-05 (9a4576b)": [[0, "a4576b"]], "2020-10-06 (b48ba0e)": [[0, "b48ba0e"]], "2020-10-07 (5582582)": [[0, "section-1"]], "2020-10-08 (6ee60ae)": [[0, "ee60ae"]], "2020-10-08 (cc3947d)": [[0, "cc3947d"]], "2020-10-09 (b737fb0)": [[0, "b737fb0"]], "2020-10-10 (1d51a61)": [[0, "d51a61"]], "2020-10-10 (4a5f84f)": [[0, "a5f84f"]], "2020-10-10 (cb8b53f)": [[0, "cb8b53f"]], "2020-10-22 (51f4903)": [[0, "f4903"]], "2020-10-22 (9be6c0f)": [[0, "be6c0f"]], "2020-11-06 (4553509)": [[0, "id37"]], "2020-11-20 (93143ad)": [[0, "ad"]], "2021-01-09 (deee6d0)": [[0, "deee6d0-1"]], "2021-01-12 (deee6d0)": [[0, "deee6d0"]], "2021-02-01 (a395175)": [[0, "a395175"]], "2021-02-01 (b510253)": [[0, "b510253"]], "2021-02-11 (9c7493)": [[0, "c7493"]], "2021-04-21 (c8a6d5)": [[0, "c8a6d5"]], "2021-04-29 (293d0ad)": [[0, "d0ad"]], "2021-05-03 (664d65f)": [[0, "d65f"]], "2021-05-03 (9b4ebfc)": [[0, "b4ebfc"]], "2021-05-04 (59ec167)": [[0, "ec167"]], "2021-05-06 (24056cc)": [[0, "cc"]], "2021-05-06 (81d65f3)": [[0, "d65f3"]], "2021-05-11 (5c34dcd)": [[0, "c34dcd"]], "2021-05-18 (245b13b)": [[0, "b13b"]], "2021-06-18 (aa59aeb)": [[0, "aa59aeb"]], "2021-07-05 (4d16954)": [[0, "d16954"]], "2021-07-05 (b3808e1)": [[0, "b3808e1"]], "2021-07-08 (86ae4e5)": [[0, "ae4e5"]], "2021-07-15 (7301b42)": [[0, "b42"]], "2021-07-17 (a20f7a2)": [[0, "a20f7a2"]], "2021-07-22 (e24c76d)": [[0, "e24c76d"]], "2021-07-26 (1479aae)": [[0, "aae"]], "2021-08-21 (acf2a80)": [[0, "acf2a80"]], "2021-09-05 (9e2cc2a)": [[0, "e2cc2a-1"]], "2021-10-05 (9e2cc2a)": [[0, "e2cc2a"]], "3. Temporary Ban": [[1, "temporary-ban"]], "4. Permanent Ban": [[1, "permanent-ban"]], "AABB": [[5, "aabb"], [19, "aabb"]], "Adaptive Barrier Stiffness": [[4, "adaptive-barrier-stiffness"], [18, "adaptive-barrier-stiffness"], [32, "adaptive-barrier-stiffness"]], "Added": [[0, "added"], [0, "added-1"], [0, "added-2"], [0, "added-3"], [0, "added-4"], [0, "added-5"], [0, "added-6"], [0, "added-7"], [0, "added-8"], [0, "added-9"], [0, "added-10"], [0, "added-11"], [0, "added-12"], [0, "added-13"], [0, "added-14"], [0, "added-15"], [0, "added-16"], [0, "added-17"]], "Additive CCD": [[7, "additive-ccd"], [21, "additive-ccd"]], "Attribution": [[1, "attribution"]], "BVH": [[5, "bvh"], [19, "bvh"]], "Barrier": [[4, null], [18, null]], "Barrier Class": [[4, "barrier-class"], [18, "barrier-class"]], "Barrier Potential": [[13, "barrier-potential"], [27, "barrier-potential"], [32, "barrier-potential"]], "Barrier Potential Derivatives": [[32, "barrier-potential-derivatives"]], "Broad Phase": [[5, null], [5, "id1"], [19, null], [19, "id1"]], "Broad-Phase": [[32, "broad-phase"]], "Brute Force": [[5, "brute-force"], [19, "brute-force"]], "Build": [[3, "build"], [15, "build"], [17, "build"]], "C++": [[3, null]], "CMake Build": [[17, "cmake-build"]], "Candidates": [[6, null], [6, "id1"], [20, null], [20, "id1"]], "Changed": [[0, "changed"], [0, "changed-1"], [0, "changed-2"], [0, "changed-3"], [0, "changed-4"], [0, "changed-5"], [0, "changed-6"], [0, "changed-7"], [0, "changed-8"], [0, "changed-9"], [0, "changed-10"], [0, "changed-11"], [0, "changed-12"], [0, "changed-13"], [0, "changed-14"], [0, "changed-15"], [0, "changed-16"], [0, "changed-17"], [0, "changed-18"], [0, "changed-19"]], "Changelog": [[0, null]], "Citation": [[15, "citation"]], "Clamped Log Barrier": [[4, "clamped-log-barrier"], [18, "clamped-log-barrier"]], "Code Formatting": [[29, "code-formatting"]], "Codimensional Vertices": [[36, "codimensional-vertices"]], "Collision": [[9, "collision"], [23, "collision"]], "Collision Mesh": [[8, null], [22, null], [32, "collision-mesh"]], "Collision Stencil": [[6, "collision-stencil"], [20, "collision-stencil"]], "Collisions": [[9, null], [9, "id1"], [23, null], [23, "id1"], [32, "collisions"]], "Computing a Conservative Envelope": [[34, "computing-a-conservative-envelope"]], "Continuous Collision Candidate": [[6, "continuous-collision-candidate"], [20, "continuous-collision-candidate"]], "Continuous Collision Detection": [[7, null], [21, null], [32, "continuous-collision-detection"]], "Contributing": [[2, null], [15, "contributing"]], "Contributor Covenant Code of Conduct": [[1, null]], "Convergent Formulation": [[30, null]], "Defining the Trajectory": [[34, "defining-the-trajectory"]], "Dependencies": [[3, "dependencies"], [3, "dependencies"], [15, "dependencies"], [15, "id1"]], "Derivatives": [[32, "derivatives"]], "Description": [[15, "description"]], "Details": [[0, "details"], [0, "details-3"], [0, "details-2"], [0, "details-1"]], "Distance": [[10, null], [24, null]], "Distance Type": [[10, "distance-type"], [24, "distance-type"]], "Distance-based Potential": [[13, "distance-based-potential"]], "Documentation": [[29, "documentation"]], "Edge-Edge": [[10, "edge-edge"], [24, "edge-edge"]], "Edge-Edge Candidate": [[6, "edge-edge-candidate"], [20, "edge-edge-candidate"]], "Edge-Edge Collision": [[9, "edge-edge-collision"], [23, "edge-edge-collision"]], "Edge-Edge Friction Collision": [[11, "edge-edge-friction-collision"], [25, "edge-edge-friction-collision"]], "Edge-Edge Mollifier": [[10, "edge-edge-mollifier"], [24, "edge-edge-mollifier"]], "Edge-Face Candidate": [[6, "edge-face-candidate"], [20, "edge-face-candidate"]], "Edge-Vertex Candidate": [[6, "edge-vertex-candidate"], [20, "edge-vertex-candidate"]], "Edge-Vertex Collision": [[9, "edge-vertex-collision"], [23, "edge-vertex-collision"]], "Edge-Vertex Friction Collision": [[11, "edge-vertex-friction-collision"], [25, "edge-vertex-friction-collision"]], "Enforcement": [[1, "enforcement"]], "Enforcement Guidelines": [[1, "enforcement-guidelines"]], "Enforcement Responsibilities": [[1, "enforcement-responsibilities"]], "Error": [[20, null]], "Face-Vertex Candidate": [[6, "face-vertex-candidate"], [20, "face-vertex-candidate"]], "Face-Vertex Collision": [[9, "face-vertex-collision"], [23, "face-vertex-collision"]], "Features": [[15, "features"]], "Fix Bugs": [[2, "fix-bugs"]], "Fixed": [[0, "fixed"], [0, "fixed-1"], [0, "fixed-2"], [0, "fixed-3"], [0, "fixed-4"], [0, "fixed-5"], [0, "fixed-6"], [0, "fixed-7"], [0, "fixed-8"], [0, "fixed-9"], [0, "fixed-10"], [0, "fixed-11"]], "Frequently Asked Questions": [[31, null]], "Friction": [[11, null], [25, null], [30, "friction"], [32, "friction"]], "Friction Collision": [[11, "friction-collision"], [25, "friction-collision"]], "Friction Collisions": [[11, "friction-collisions"], [25, "friction-collisions"]], "Friction Dissipative Potential": [[32, "friction-dissipative-potential"]], "Friction Potential": [[13, "friction-potential"], [27, "friction-potential"]], "General": [[29, "general"]], "Generic Interface": [[7, "generic-interface"], [7, "id1"], [7, "id2"], [21, "generic-interface"], [21, "id1"], [21, "id2"]], "Generic Potential": [[13, "generic-potential"]], "Getting Started": [[32, null]], "Hash Grid": [[5, "hash-grid"], [19, "hash-grid"]], "Help/Documentation": [[17, "help-documentation"]], "Home": [[15, null]], "How do I build the edge matrix from the face matrix?": [[31, "how-do-i-build-the-edge-matrix-from-the-face-matrix"]], "How do I determine which edges intersect?": [[31, "how-do-i-determine-which-edges-intersect"]], "How do I include IPC Toolkit in my project?": [[31, "how-do-i-include-ipc-toolkit-in-my-project"]], "Implement Features": [[2, "implement-features"]], "Important": [[30, null], [32, null]], "Individual CCD Functions": [[7, "individual-ccd-functions"], [21, "individual-ccd-functions"]], "Installation": [[17, "installation"]], "Intersections": [[12, null], [26, null]], "License": [[15, "license"], [16, null]], "Limitations": [[15, "limitations"]], "Line-Line": [[10, "line-line"], [24, "line-line"]], "Logger": [[14, "logger"], [28, "logger"], [33, "logger"]], "Minimum Separation": [[32, "minimum-separation"]], "Miscellaneous": [[33, null]], "Modeling Thickness": [[32, "modeling-thickness"]], "Multi-Threading": [[28, "multi-threading"]], "Multi-threading": [[33, "multi-threading"]], "My question is not answered here. What should I do?": [[31, "my-question-is-not-answered-here-what-should-i-do"]], "Naming conventions": [[29, "naming-conventions"]], "Narrow-Phase": [[32, "narrow-phase"]], "Nonlinear Bases and Curved Meshes": [[36, "nonlinear-bases-and-curved-meshes"]], "Nonlinear CCD": [[7, "nonlinear-ccd"], [21, "nonlinear-ccd"], [34, null]], "Normal Force Magnitude": [[11, "normal-force-magnitude"], [25, "normal-force-magnitude"]], "Note": [[20, null], [20, null], [21, null], [21, null], [21, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [30, null], [30, null], [30, null], [30, null], [32, null], [32, null], [32, null], [32, null], [34, null]], "Optional": [[3, "optional"], [15, "optional"]], "Our Pledge": [[1, "our-pledge"]], "Our Standards": [[1, "our-standards"]], "Performing Nonlinear CCD": [[34, "performing-nonlinear-ccd"]], "Physical Barrier": [[30, "physical-barrier"]], "Physical Simulation": [[36, null]], "Plane-Vertex Collision": [[9, "plane-vertex-collision"], [23, "plane-vertex-collision"]], "Point-Edge": [[10, "point-edge"], [24, "point-edge"]], "Point-Line": [[10, "point-line"], [24, "point-line"]], "Point-Plane": [[10, "point-plane"], [24, "point-plane"]], "Point-Point": [[10, "point-point"], [24, "point-point"]], "Point-Triangle": [[10, "point-triangle"], [24, "point-triangle"]], "Positive Semi-Definite Projection": [[14, "positive-semi-definite-projection"], [28, "positive-semi-definite-projection"], [36, "positive-semi-definite-projection"]], "Potentials": [[13, null], [27, null]], "Pre-v1.0.0": [[0, "pre-v1-0-0"]], "Python": [[17, null]], "Python Bindings": [[15, "python-bindings"]], "References": [[35, null]], "Relative Velocity": [[11, "relative-velocity"], [25, "relative-velocity"]], "Relative Velocity Matrix Jacobians": [[11, "relative-velocity-matrix-jacobians"], [25, "relative-velocity-matrix-jacobians"]], "Relative Velocity as Multiplier Matricies": [[11, "relative-velocity-as-multiplier-matricies"], [25, "relative-velocity-as-multiplier-matricies"]], "Removed": [[0, "removed"]], "Report Bugs": [[2, "report-bugs"]], "Scope": [[1, "scope"]], "Smooth Mollifier": [[11, "smooth-mollifier"], [25, "smooth-mollifier"]], "Spatial Hash": [[5, "spatial-hash"], [19, "spatial-hash"]], "Specific": [[29, "specific"]], "Static Intersection Checks": [[33, "static-intersection-checks"]], "Style Guide": [[29, null]], "Submit Feedback": [[2, "submit-feedback"]], "Sweep and Prune": [[5, "sweep-and-prune"], [19, "sweep-and-prune"]], "Sweep and Tiniest Queue": [[5, "sweep-and-tiniest-queue"], [19, "sweep-and-tiniest-queue"]], "Tangent Basis": [[11, "tangent-basis"], [25, "tangent-basis"]], "Tangent Basis Jacobians": [[11, "tangent-basis-jacobians"], [25, "tangent-basis-jacobians"]], "Technical Details": [[30, "technical-details"]], "Tight Inclusion CCD": [[21, "tight-inclusion-ccd"]], "Tip": [[3, null]], "Triangle-Vertex Friction Collision": [[11, "triangle-vertex-friction-collision"], [25, "triangle-vertex-friction-collision"]], "Types of Contributions": [[2, "types-of-contributions"]], "Unit Tests": [[3, "unit-tests"], [15, "unit-tests"]], "Usage": [[3, "usage"], [15, "usage"]], "Utils": [[14, null], [28, null]], "Vertex-Vertex Candidate": [[6, "vertex-vertex-candidate"], [20, "vertex-vertex-candidate"]], "Vertex-Vertex Collision": [[9, "vertex-vertex-collision"], [23, "vertex-vertex-collision"]], "Vertex-Vertex Friction Collision": [[11, "vertex-vertex-friction-collision"], [25, "vertex-vertex-friction-collision"]], "Volumetric Meshes": [[36, "volumetric-meshes"]], "Warning": [[3, null], [24, null], [24, null], [24, null], [36, null]], "Write Documentation": [[2, "write-documentation"]], "v1.0.0 (Feb 21, 2023)": [[0, "v1-0-0-feb-21-2023"]], "v1.1.0 (Jul 25, 2023)": [[0, "v1-1-0-jul-25-2023"]], "v1.1.1 (Aug 18, 2023)": [[0, "v1-1-1-aug-18-2023"]], "v1.2.0 (Dec 11, 2023)": [[0, "v1-2-0-dec-11-2023"]], "v1.2.1 (Jul 12, 2024)": [[0, "v1-2-1-jul-12-2024"]], "v1.3.0 (Aug 03, 2024)": [[0, "v1-3-0-aug-03-2024"]], "v1.3.1 (Nov 08, 2024)": [[0, "v1-3-1-nov-08-2024"]]}, "docurls": ["changelog.html", "code_of_conduct.html", "contributing.html", "cpp.html", "cpp-api/barrier.html", "cpp-api/broad_phase.html", "cpp-api/candidates.html", "cpp-api/ccd.html", "cpp-api/collision_mesh.html", "cpp-api/collisions.html", "cpp-api/distance.html", "cpp-api/friction.html", "cpp-api/intersections.html", "cpp-api/potentials.html", "cpp-api/utils.html", "index.html", "license.html", "python.html", "python-api/barrier.html", "python-api/broad_phase.html", "python-api/candidates.html", "python-api/ccd.html", "python-api/collision_mesh.html", "python-api/collisions.html", "python-api/distance.html", "python-api/friction.html", "python-api/intersections.html", "python-api/potentials.html", "python-api/utils.html", "style_guide.html", "tutorial/convergent.html", "tutorial/faq.html", "tutorial/getting_started.html", "tutorial/misc.html", "tutorial/nonlinear_ccd.html", "tutorial/references.html", "tutorial/simulation.html"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "sphinxcontrib.bibtex": 9}, "indexentries": {"__annotations__ (ipctk.aabb attribute)": [[19, "ipctk.AABB.__annotations__", false]], "__annotations__ (ipctk.barrierpotential attribute)": [[27, "ipctk.BarrierPotential.__annotations__", false]], "__annotations__ (ipctk.broadphase attribute)": [[19, "ipctk.BroadPhase.__annotations__", false]], "__annotations__ (ipctk.broadphasemethod attribute)": [[19, "ipctk.BroadPhaseMethod.__annotations__", false]], "__annotations__ (ipctk.bruteforce attribute)": [[19, "ipctk.BruteForce.__annotations__", false]], "__annotations__ (ipctk.bvh attribute)": [[19, "ipctk.BVH.__annotations__", false]], "__annotations__ (ipctk.candidates attribute)": [[20, "ipctk.Candidates.__annotations__", false]], "__annotations__ (ipctk.clampedlogbarrier attribute)": [[18, "ipctk.ClampedLogBarrier.__annotations__", false]], "__annotations__ (ipctk.collision attribute)": [[23, "ipctk.Collision.__annotations__", false]], "__annotations__ (ipctk.collisionmesh attribute)": [[22, "ipctk.CollisionMesh.__annotations__", false]], "__annotations__ (ipctk.collisions attribute)": [[23, "ipctk.Collisions.__annotations__", false]], "__annotations__ (ipctk.continuouscollisioncandidate attribute)": [[20, "ipctk.ContinuousCollisionCandidate.__annotations__", false]], "__annotations__ (ipctk.edgeedgecandidate attribute)": [[20, "ipctk.EdgeEdgeCandidate.__annotations__", false]], "__annotations__ (ipctk.edgeedgecollision attribute)": [[23, "ipctk.EdgeEdgeCollision.__annotations__", false]], "__annotations__ (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.__annotations__", false]], "__annotations__ (ipctk.edgeedgefrictioncollision attribute)": [[25, "ipctk.EdgeEdgeFrictionCollision.__annotations__", false]], "__annotations__ (ipctk.edgefacecandidate attribute)": [[20, "ipctk.EdgeFaceCandidate.__annotations__", false]], "__annotations__ (ipctk.edgevertexcandidate attribute)": [[20, "ipctk.EdgeVertexCandidate.__annotations__", false]], "__annotations__ (ipctk.edgevertexcollision attribute)": [[23, "ipctk.EdgeVertexCollision.__annotations__", false]], "__annotations__ (ipctk.edgevertexfrictioncollision attribute)": [[25, "ipctk.EdgeVertexFrictionCollision.__annotations__", false]], "__annotations__ (ipctk.facevertexcandidate attribute)": [[20, "ipctk.FaceVertexCandidate.__annotations__", false]], "__annotations__ (ipctk.facevertexcollision attribute)": [[23, "ipctk.FaceVertexCollision.__annotations__", false]], "__annotations__ (ipctk.facevertexfrictioncollision attribute)": [[25, "ipctk.FaceVertexFrictionCollision.__annotations__", false]], "__annotations__ (ipctk.frictioncollision attribute)": [[25, "ipctk.FrictionCollision.__annotations__", false]], "__annotations__ (ipctk.frictioncollisions attribute)": [[25, "ipctk.FrictionCollisions.__annotations__", false]], "__annotations__ (ipctk.frictionpotential attribute)": [[27, "ipctk.FrictionPotential.__annotations__", false]], "__annotations__ (ipctk.frictionpotential.diffwrt attribute)": [[27, "ipctk.FrictionPotential.DiffWRT.__annotations__", false]], "__annotations__ (ipctk.hashgrid attribute)": [[19, "ipctk.HashGrid.__annotations__", false]], "__annotations__ (ipctk.intervalnonlineartrajectory attribute)": [[21, "ipctk.IntervalNonlinearTrajectory.__annotations__", false]], "__annotations__ (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.__annotations__", false]], "__annotations__ (ipctk.nonlineartrajectory attribute)": [[21, "ipctk.NonlinearTrajectory.__annotations__", false]], "__annotations__ (ipctk.planevertexcollision attribute)": [[23, "ipctk.PlaneVertexCollision.__annotations__", false]], "__annotations__ (ipctk.pointedgedistancetype attribute)": [[24, "ipctk.PointEdgeDistanceType.__annotations__", false]], "__annotations__ (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.__annotations__", false]], "__annotations__ (ipctk.psdprojectionmethod attribute)": [[28, "ipctk.PSDProjectionMethod.__annotations__", false]], "__annotations__ (ipctk.spatialhash attribute)": [[19, "ipctk.SpatialHash.__annotations__", false]], "__annotations__ (ipctk.sweepandprune attribute)": [[19, "ipctk.SweepAndPrune.__annotations__", false]], "__annotations__ (ipctk.vertexvertexcandidate attribute)": [[20, "ipctk.VertexVertexCandidate.__annotations__", false]], "__annotations__ (ipctk.vertexvertexcollision attribute)": [[23, "ipctk.VertexVertexCollision.__annotations__", false]], "__annotations__ (ipctk.vertexvertexfrictioncollision attribute)": [[25, "ipctk.VertexVertexFrictionCollision.__annotations__", false]], "__call__() (ipctk.barrier method)": [[18, "ipctk.Barrier.__call__", false]], "__call__() (ipctk.barrierpotential method)": [[27, "ipctk.BarrierPotential.__call__", false]], "__call__() (ipctk.frictionpotential method)": [[27, "ipctk.FrictionPotential.__call__", false]], "__call__() (ipctk.intervalnonlineartrajectory method)": [[21, "ipctk.IntervalNonlinearTrajectory.__call__", false]], "__call__() (ipctk.nonlineartrajectory method)": [[21, "ipctk.NonlinearTrajectory.__call__", false]], "__eq__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__eq__", false]], "__eq__() (ipctk.edgeedgecandidate method)": [[20, "ipctk.EdgeEdgeCandidate.__eq__", false]], "__eq__() (ipctk.edgeedgecollision method)": [[23, "ipctk.EdgeEdgeCollision.__eq__", false]], "__eq__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__eq__", false]], "__eq__() (ipctk.edgefacecandidate method)": [[20, "ipctk.EdgeFaceCandidate.__eq__", false]], "__eq__() (ipctk.edgevertexcandidate method)": [[20, "ipctk.EdgeVertexCandidate.__eq__", false]], "__eq__() (ipctk.facevertexcandidate method)": [[20, "ipctk.FaceVertexCandidate.__eq__", false]], "__eq__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__eq__", false]], "__eq__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__eq__", false]], "__eq__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__eq__", false]], "__eq__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__eq__", false]], "__eq__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__eq__", false]], "__eq__() (ipctk.vertexvertexcandidate method)": [[20, "ipctk.VertexVertexCandidate.__eq__", false]], "__getitem__() (ipctk.candidates method)": [[20, "ipctk.Candidates.__getitem__", false]], "__getitem__() (ipctk.collisions method)": [[23, "ipctk.Collisions.__getitem__", false]], "__getitem__() (ipctk.frictioncollisions method)": [[25, "ipctk.FrictionCollisions.__getitem__", false]], "__getstate__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__getstate__", false]], "__getstate__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__getstate__", false]], "__getstate__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__getstate__", false]], "__getstate__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__getstate__", false]], "__getstate__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__getstate__", false]], "__getstate__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__getstate__", false]], "__getstate__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__getstate__", false]], "__hash__ (ipctk.edgeedgecandidate attribute)": [[20, "ipctk.EdgeEdgeCandidate.__hash__", false]], "__hash__ (ipctk.edgeedgecollision attribute)": [[23, "ipctk.EdgeEdgeCollision.__hash__", false]], "__hash__ (ipctk.edgefacecandidate attribute)": [[20, "ipctk.EdgeFaceCandidate.__hash__", false]], "__hash__ (ipctk.edgevertexcandidate attribute)": [[20, "ipctk.EdgeVertexCandidate.__hash__", false]], "__hash__ (ipctk.facevertexcandidate attribute)": [[20, "ipctk.FaceVertexCandidate.__hash__", false]], "__hash__ (ipctk.vertexvertexcandidate attribute)": [[20, "ipctk.VertexVertexCandidate.__hash__", false]], "__hash__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__hash__", false]], "__hash__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__hash__", false]], "__hash__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__hash__", false]], "__hash__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__hash__", false]], "__hash__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__hash__", false]], "__hash__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__hash__", false]], "__hash__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__hash__", false]], "__index__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__index__", false]], "__index__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__index__", false]], "__index__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__index__", false]], "__index__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__index__", false]], "__index__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__index__", false]], "__index__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__index__", false]], "__index__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__index__", false]], "__init__() (ipctk.aabb method)": [[19, "ipctk.AABB.__init__", false]], "__init__() (ipctk.barrier method)": [[18, "ipctk.Barrier.__init__", false]], "__init__() (ipctk.barrierpotential method)": [[27, "ipctk.BarrierPotential.__init__", false]], "__init__() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.__init__", false]], "__init__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__init__", false]], "__init__() (ipctk.bruteforce method)": [[19, "ipctk.BruteForce.__init__", false]], "__init__() (ipctk.bvh method)": [[19, "ipctk.BVH.__init__", false]], "__init__() (ipctk.candidates method)": [[20, "ipctk.Candidates.__init__", false]], "__init__() (ipctk.clampedlogbarrier method)": [[18, "ipctk.ClampedLogBarrier.__init__", false]], "__init__() (ipctk.collision method)": [[23, "ipctk.Collision.__init__", false]], "__init__() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.__init__", false]], "__init__() (ipctk.collisions method)": [[23, "ipctk.Collisions.__init__", false]], "__init__() (ipctk.continuouscollisioncandidate method)": [[20, "ipctk.ContinuousCollisionCandidate.__init__", false]], "__init__() (ipctk.edgeedgecandidate method)": [[20, "ipctk.EdgeEdgeCandidate.__init__", false]], "__init__() (ipctk.edgeedgecollision method)": [[23, "ipctk.EdgeEdgeCollision.__init__", false]], "__init__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__init__", false]], "__init__() (ipctk.edgeedgefrictioncollision method)": [[25, "ipctk.EdgeEdgeFrictionCollision.__init__", false]], "__init__() (ipctk.edgefacecandidate method)": [[20, "ipctk.EdgeFaceCandidate.__init__", false]], "__init__() (ipctk.edgevertexcandidate method)": [[20, "ipctk.EdgeVertexCandidate.__init__", false]], "__init__() (ipctk.edgevertexcollision method)": [[23, "ipctk.EdgeVertexCollision.__init__", false]], "__init__() (ipctk.edgevertexfrictioncollision method)": [[25, "ipctk.EdgeVertexFrictionCollision.__init__", false]], "__init__() (ipctk.facevertexcandidate method)": [[20, "ipctk.FaceVertexCandidate.__init__", false]], "__init__() (ipctk.facevertexcollision method)": [[23, "ipctk.FaceVertexCollision.__init__", false]], "__init__() (ipctk.facevertexfrictioncollision method)": [[25, "ipctk.FaceVertexFrictionCollision.__init__", false]], "__init__() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.__init__", false]], "__init__() (ipctk.frictioncollisions method)": [[25, "ipctk.FrictionCollisions.__init__", false]], "__init__() (ipctk.frictionpotential method)": [[27, "ipctk.FrictionPotential.__init__", false]], "__init__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__init__", false]], "__init__() (ipctk.hashgrid method)": [[19, "ipctk.HashGrid.__init__", false]], "__init__() (ipctk.intervalnonlineartrajectory method)": [[21, "ipctk.IntervalNonlinearTrajectory.__init__", false]], "__init__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__init__", false]], "__init__() (ipctk.nonlineartrajectory method)": [[21, "ipctk.NonlinearTrajectory.__init__", false]], "__init__() (ipctk.planevertexcollision method)": [[23, "ipctk.PlaneVertexCollision.__init__", false]], "__init__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__init__", false]], "__init__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__init__", false]], "__init__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__init__", false]], "__init__() (ipctk.spatialhash method)": [[19, "ipctk.SpatialHash.__init__", false]], "__init__() (ipctk.sweepandprune method)": [[19, "ipctk.SweepAndPrune.__init__", false]], "__init__() (ipctk.vertexvertexcandidate method)": [[20, "ipctk.VertexVertexCandidate.__init__", false]], "__init__() (ipctk.vertexvertexcollision method)": [[23, "ipctk.VertexVertexCollision.__init__", false]], "__init__() (ipctk.vertexvertexfrictioncollision method)": [[25, "ipctk.VertexVertexFrictionCollision.__init__", false]], "__int__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__int__", false]], "__int__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__int__", false]], "__int__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__int__", false]], "__int__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__int__", false]], "__int__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__int__", false]], "__int__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__int__", false]], "__int__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__int__", false]], "__len__() (ipctk.candidates method)": [[20, "ipctk.Candidates.__len__", false]], "__len__() (ipctk.collisions method)": [[23, "ipctk.Collisions.__len__", false]], "__len__() (ipctk.frictioncollisions method)": [[25, "ipctk.FrictionCollisions.__len__", false]], "__lt__() (ipctk.edgeedgecandidate method)": [[20, "ipctk.EdgeEdgeCandidate.__lt__", false]], "__lt__() (ipctk.edgeedgecollision method)": [[23, "ipctk.EdgeEdgeCollision.__lt__", false]], "__lt__() (ipctk.edgefacecandidate method)": [[20, "ipctk.EdgeFaceCandidate.__lt__", false]], "__lt__() (ipctk.edgevertexcandidate method)": [[20, "ipctk.EdgeVertexCandidate.__lt__", false]], "__lt__() (ipctk.facevertexcandidate method)": [[20, "ipctk.FaceVertexCandidate.__lt__", false]], "__lt__() (ipctk.vertexvertexcandidate method)": [[20, "ipctk.VertexVertexCandidate.__lt__", false]], "__members__ (ipctk.broadphasemethod attribute)": [[19, "ipctk.BroadPhaseMethod.__members__", false]], "__members__ (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.__members__", false]], "__members__ (ipctk.frictionpotential.diffwrt attribute)": [[27, "ipctk.FrictionPotential.DiffWRT.__members__", false]], "__members__ (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.__members__", false]], "__members__ (ipctk.pointedgedistancetype attribute)": [[24, "ipctk.PointEdgeDistanceType.__members__", false]], "__members__ (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.__members__", false]], "__members__ (ipctk.psdprojectionmethod attribute)": [[28, "ipctk.PSDProjectionMethod.__members__", false]], "__module__ (ipctk.aabb attribute)": [[19, "ipctk.AABB.__module__", false]], "__module__ (ipctk.barrier attribute)": [[18, "ipctk.Barrier.__module__", false]], "__module__ (ipctk.barrierpotential attribute)": [[27, "ipctk.BarrierPotential.__module__", false]], "__module__ (ipctk.broadphase attribute)": [[19, "ipctk.BroadPhase.__module__", false]], "__module__ (ipctk.broadphasemethod attribute)": [[19, "ipctk.BroadPhaseMethod.__module__", false]], "__module__ (ipctk.bruteforce attribute)": [[19, "ipctk.BruteForce.__module__", false]], "__module__ (ipctk.bvh attribute)": [[19, "ipctk.BVH.__module__", false]], "__module__ (ipctk.candidates attribute)": [[20, "ipctk.Candidates.__module__", false]], "__module__ (ipctk.clampedlogbarrier attribute)": [[18, "ipctk.ClampedLogBarrier.__module__", false]], "__module__ (ipctk.collision attribute)": [[23, "ipctk.Collision.__module__", false]], "__module__ (ipctk.collisionmesh attribute)": [[22, "ipctk.CollisionMesh.__module__", false]], "__module__ (ipctk.collisions attribute)": [[23, "ipctk.Collisions.__module__", false]], "__module__ (ipctk.continuouscollisioncandidate attribute)": [[20, "ipctk.ContinuousCollisionCandidate.__module__", false]], "__module__ (ipctk.edgeedgecandidate attribute)": [[20, "ipctk.EdgeEdgeCandidate.__module__", false]], "__module__ (ipctk.edgeedgecollision attribute)": [[23, "ipctk.EdgeEdgeCollision.__module__", false]], "__module__ (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.__module__", false]], "__module__ (ipctk.edgeedgefrictioncollision attribute)": [[25, "ipctk.EdgeEdgeFrictionCollision.__module__", false]], "__module__ (ipctk.edgefacecandidate attribute)": [[20, "ipctk.EdgeFaceCandidate.__module__", false]], "__module__ (ipctk.edgevertexcandidate attribute)": [[20, "ipctk.EdgeVertexCandidate.__module__", false]], "__module__ (ipctk.edgevertexcollision attribute)": [[23, "ipctk.EdgeVertexCollision.__module__", false]], "__module__ (ipctk.edgevertexfrictioncollision attribute)": [[25, "ipctk.EdgeVertexFrictionCollision.__module__", false]], "__module__ (ipctk.facevertexcandidate attribute)": [[20, "ipctk.FaceVertexCandidate.__module__", false]], "__module__ (ipctk.facevertexcollision attribute)": [[23, "ipctk.FaceVertexCollision.__module__", false]], "__module__ (ipctk.facevertexfrictioncollision attribute)": [[25, "ipctk.FaceVertexFrictionCollision.__module__", false]], "__module__ (ipctk.frictioncollision attribute)": [[25, "ipctk.FrictionCollision.__module__", false]], "__module__ (ipctk.frictioncollisions attribute)": [[25, "ipctk.FrictionCollisions.__module__", false]], "__module__ (ipctk.frictionpotential attribute)": [[27, "ipctk.FrictionPotential.__module__", false]], "__module__ (ipctk.frictionpotential.diffwrt attribute)": [[27, "ipctk.FrictionPotential.DiffWRT.__module__", false]], "__module__ (ipctk.hashgrid attribute)": [[19, "ipctk.HashGrid.__module__", false]], "__module__ (ipctk.intervalnonlineartrajectory attribute)": [[21, "ipctk.IntervalNonlinearTrajectory.__module__", false]], "__module__ (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.__module__", false]], "__module__ (ipctk.nonlineartrajectory attribute)": [[21, "ipctk.NonlinearTrajectory.__module__", false]], "__module__ (ipctk.planevertexcollision attribute)": [[23, "ipctk.PlaneVertexCollision.__module__", false]], "__module__ (ipctk.pointedgedistancetype attribute)": [[24, "ipctk.PointEdgeDistanceType.__module__", false]], "__module__ (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.__module__", false]], "__module__ (ipctk.psdprojectionmethod attribute)": [[28, "ipctk.PSDProjectionMethod.__module__", false]], "__module__ (ipctk.spatialhash attribute)": [[19, "ipctk.SpatialHash.__module__", false]], "__module__ (ipctk.sweepandprune attribute)": [[19, "ipctk.SweepAndPrune.__module__", false]], "__module__ (ipctk.vertexvertexcandidate attribute)": [[20, "ipctk.VertexVertexCandidate.__module__", false]], "__module__ (ipctk.vertexvertexcollision attribute)": [[23, "ipctk.VertexVertexCollision.__module__", false]], "__module__ (ipctk.vertexvertexfrictioncollision attribute)": [[25, "ipctk.VertexVertexFrictionCollision.__module__", false]], "__ne__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__ne__", false]], "__ne__() (ipctk.edgeedgecandidate method)": [[20, "ipctk.EdgeEdgeCandidate.__ne__", false]], "__ne__() (ipctk.edgeedgecollision method)": [[23, "ipctk.EdgeEdgeCollision.__ne__", false]], "__ne__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__ne__", false]], "__ne__() (ipctk.edgefacecandidate method)": [[20, "ipctk.EdgeFaceCandidate.__ne__", false]], "__ne__() (ipctk.edgevertexcandidate method)": [[20, "ipctk.EdgeVertexCandidate.__ne__", false]], "__ne__() (ipctk.facevertexcandidate method)": [[20, "ipctk.FaceVertexCandidate.__ne__", false]], "__ne__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__ne__", false]], "__ne__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__ne__", false]], "__ne__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__ne__", false]], "__ne__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__ne__", false]], "__ne__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__ne__", false]], "__ne__() (ipctk.vertexvertexcandidate method)": [[20, "ipctk.VertexVertexCandidate.__ne__", false]], "__repr__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__repr__", false]], "__repr__() (ipctk.edgeedgecandidate method)": [[20, "ipctk.EdgeEdgeCandidate.__repr__", false]], "__repr__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__repr__", false]], "__repr__() (ipctk.edgefacecandidate method)": [[20, "ipctk.EdgeFaceCandidate.__repr__", false]], "__repr__() (ipctk.edgevertexcandidate method)": [[20, "ipctk.EdgeVertexCandidate.__repr__", false]], "__repr__() (ipctk.facevertexcandidate method)": [[20, "ipctk.FaceVertexCandidate.__repr__", false]], "__repr__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__repr__", false]], "__repr__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__repr__", false]], "__repr__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__repr__", false]], "__repr__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__repr__", false]], "__repr__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__repr__", false]], "__repr__() (ipctk.vertexvertexcandidate method)": [[20, "ipctk.VertexVertexCandidate.__repr__", false]], "__setstate__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__setstate__", false]], "__setstate__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__setstate__", false]], "__setstate__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__setstate__", false]], "__setstate__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__setstate__", false]], "__setstate__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__setstate__", false]], "__setstate__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__setstate__", false]], "__setstate__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__setstate__", false]], "__str__() (ipctk.broadphasemethod method)": [[19, "ipctk.BroadPhaseMethod.__str__", false]], "__str__() (ipctk.edgeedgecandidate method)": [[20, "ipctk.EdgeEdgeCandidate.__str__", false]], "__str__() (ipctk.edgeedgedistancetype method)": [[24, "ipctk.EdgeEdgeDistanceType.__str__", false]], "__str__() (ipctk.edgefacecandidate method)": [[20, "ipctk.EdgeFaceCandidate.__str__", false]], "__str__() (ipctk.edgevertexcandidate method)": [[20, "ipctk.EdgeVertexCandidate.__str__", false]], "__str__() (ipctk.facevertexcandidate method)": [[20, "ipctk.FaceVertexCandidate.__str__", false]], "__str__() (ipctk.frictionpotential.diffwrt method)": [[27, "ipctk.FrictionPotential.DiffWRT.__str__", false]], "__str__() (ipctk.loggerlevel method)": [[28, "ipctk.LoggerLevel.__str__", false]], "__str__() (ipctk.pointedgedistancetype method)": [[24, "ipctk.PointEdgeDistanceType.__str__", false]], "__str__() (ipctk.pointtriangledistancetype method)": [[24, "ipctk.PointTriangleDistanceType.__str__", false]], "__str__() (ipctk.psdprojectionmethod method)": [[28, "ipctk.PSDProjectionMethod.__str__", false]], "__str__() (ipctk.vertexvertexcandidate method)": [[20, "ipctk.VertexVertexCandidate.__str__", false]], "aabb (class in ipctk)": [[19, "ipctk.AABB", false]], "abs (ipctk.psdprojectionmethod attribute)": [[28, "ipctk.PSDProjectionMethod.ABS", false]], "are_adjacencies_initialized() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.are_adjacencies_initialized", false]], "are_area_jacobians_initialized() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.are_area_jacobians_initialized", false]], "auto (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.AUTO", false]], "auto (ipctk.pointedgedistancetype attribute)": [[24, "ipctk.PointEdgeDistanceType.AUTO", false]], "auto (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.AUTO", false]], "barrier (class in ipctk)": [[18, "ipctk.Barrier", false]], "barrier (ipctk.barrierpotential property)": [[27, "ipctk.BarrierPotential.barrier", false]], "barrier() (in module ipctk)": [[18, "ipctk.barrier", false]], "barrier_first_derivative() (in module ipctk)": [[18, "ipctk.barrier_first_derivative", false]], "barrier_second_derivative() (in module ipctk)": [[18, "ipctk.barrier_second_derivative", false]], "barrierpotential (class in ipctk)": [[27, "ipctk.BarrierPotential", false]], "bounding_volume_hierarchy (ipctk.broadphasemethod attribute)": [[19, "ipctk.BroadPhaseMethod.BOUNDING_VOLUME_HIERARCHY", false]], "broadphase (class in ipctk)": [[19, "ipctk.BroadPhase", false]], "broadphasemethod (class in ipctk)": [[19, "ipctk.BroadPhaseMethod", false]], "brute_force (ipctk.broadphasemethod attribute)": [[19, "ipctk.BroadPhaseMethod.BRUTE_FORCE", false]], "bruteforce (class in ipctk)": [[19, "ipctk.BruteForce", false]], "build() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.build", false]], "build() (ipctk.candidates method)": [[20, "ipctk.Candidates.build", false]], "build() (ipctk.collisions method)": [[23, "ipctk.Collisions.build", false]], "build() (ipctk.frictioncollisions method)": [[25, "ipctk.FrictionCollisions.build", false]], "build() (ipctk.spatialhash method)": [[19, "ipctk.SpatialHash.build", false]], "build_from_full_mesh() (ipctk.collisionmesh static method)": [[22, "ipctk.CollisionMesh.build_from_full_mesh", false]], "bvh (class in ipctk)": [[19, "ipctk.BVH", false]], "can_collide (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.can_collide", false]], "can_vertices_collide (ipctk.broadphase property)": [[19, "ipctk.BroadPhase.can_vertices_collide", false]], "candidates (class in ipctk)": [[20, "ipctk.Candidates", false]], "ccd() (ipctk.continuouscollisioncandidate method)": [[20, "ipctk.ContinuousCollisionCandidate.ccd", false]], "cell_size (ipctk.hashgrid property)": [[19, "ipctk.HashGrid.cell_size", false]], "clamp (ipctk.psdprojectionmethod attribute)": [[28, "ipctk.PSDProjectionMethod.CLAMP", false]], "clampedlogbarrier (class in ipctk)": [[18, "ipctk.ClampedLogBarrier", false]], "clear() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.clear", false]], "clear() (ipctk.candidates method)": [[20, "ipctk.Candidates.clear", false]], "clear() (ipctk.collisions method)": [[23, "ipctk.Collisions.clear", false]], "clear() (ipctk.frictioncollisions method)": [[25, "ipctk.FrictionCollisions.clear", false]], "clear() (ipctk.spatialhash method)": [[19, "ipctk.SpatialHash.clear", false]], "closest_point (ipctk.frictioncollision property)": [[25, "ipctk.FrictionCollision.closest_point", false]], "codim_edges (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.codim_edges", false]], "codim_vertices (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.codim_vertices", false]], "collision (class in ipctk)": [[23, "ipctk.Collision", false]], "collisionmesh (class in ipctk)": [[22, "ipctk.CollisionMesh", false]], "collisions (class in ipctk)": [[23, "ipctk.Collisions", false]], "compute_ccd_filters() (in module ipctk.tight_inclusion)": [[21, "ipctk.tight_inclusion.compute_ccd_filters", false]], "compute_cfl_stepsize() (ipctk.candidates method)": [[20, "ipctk.Candidates.compute_cfl_stepsize", false]], "compute_closest_point() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.compute_closest_point", false]], "compute_closest_point_jacobian() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.compute_closest_point_jacobian", false]], "compute_collision_free_stepsize() (in module ipctk)": [[21, "ipctk.compute_collision_free_stepsize", false]], "compute_collision_free_stepsize() (ipctk.candidates method)": [[20, "ipctk.Candidates.compute_collision_free_stepsize", false]], "compute_minimum_distance() (ipctk.collisions method)": [[23, "ipctk.Collisions.compute_minimum_distance", false]], "compute_noncandidate_conservative_stepsize() (ipctk.candidates method)": [[20, "ipctk.Candidates.compute_noncandidate_conservative_stepsize", false]], "compute_normal_force_magnitude() (in module ipctk)": [[25, "ipctk.compute_normal_force_magnitude", false]], "compute_normal_force_magnitude() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.compute_normal_force_magnitude", false]], "compute_normal_force_magnitude_gradient() (in module ipctk)": [[25, "ipctk.compute_normal_force_magnitude_gradient", false]], "compute_normal_force_magnitude_gradient() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.compute_normal_force_magnitude_gradient", false]], "compute_tangent_basis() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.compute_tangent_basis", false]], "compute_tangent_basis_jacobian() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.compute_tangent_basis_jacobian", false]], "conservative_inflation() (ipctk.aabb static method)": [[19, "ipctk.AABB.conservative_inflation", false]], "conservative_piecewise_linear_ccd() (in module ipctk)": [[21, "ipctk.conservative_piecewise_linear_ccd", false]], "construct_faces_to_edges() (ipctk.collisionmesh static method)": [[22, "ipctk.CollisionMesh.construct_faces_to_edges", false]], "construct_is_on_surface() (ipctk.collisionmesh static method)": [[22, "ipctk.CollisionMesh.construct_is_on_surface", false]], "continuouscollisioncandidate (class in ipctk)": [[20, "ipctk.ContinuousCollisionCandidate", false]], "critical (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.critical", false]], "debug (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.debug", false]], "default_blend_mu() (ipctk.frictioncollisions static method)": [[25, "ipctk.FrictionCollisions.default_blend_mu", false]], "detect_collision_candidates() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.detect_collision_candidates", false]], "detect_edge_edge_candidates() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.detect_edge_edge_candidates", false]], "detect_edge_face_candidates() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.detect_edge_face_candidates", false]], "detect_edge_vertex_candidates() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.detect_edge_vertex_candidates", false]], "detect_face_face_candidates() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.detect_face_face_candidates", false]], "detect_face_vertex_candidates() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.detect_face_vertex_candidates", false]], "detect_vertex_vertex_candidates() (ipctk.broadphase method)": [[19, "ipctk.BroadPhase.detect_vertex_vertex_candidates", false]], "df1_x_minus_f1_over_x3() (in module ipctk)": [[25, "ipctk.df1_x_minus_f1_over_x3", false]], "dhat (ipctk.barrierpotential property)": [[27, "ipctk.BarrierPotential.dhat", false]], "dim (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.dim", false]], "dim() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.dim", false]], "displace_vertices() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.displace_vertices", false]], "dmin (ipctk.collision property)": [[23, "ipctk.Collision.dmin", false]], "domain_max (ipctk.hashgrid property)": [[19, "ipctk.HashGrid.domain_max", false]], "domain_min (ipctk.hashgrid property)": [[19, "ipctk.HashGrid.domain_min", false]], "dtype (ipctk.edgeedgecollision property)": [[23, "ipctk.EdgeEdgeCollision.dtype", false]], "ea0_eb (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.EA0_EB", false]], "ea0_eb0 (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.EA0_EB0", false]], "ea0_eb1 (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.EA0_EB1", false]], "ea1_eb (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.EA1_EB", false]], "ea1_eb0 (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.EA1_EB0", false]], "ea1_eb1 (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.EA1_EB1", false]], "ea_eb (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.EA_EB", false]], "ea_eb0 (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.EA_EB0", false]], "ea_eb1 (ipctk.edgeedgedistancetype attribute)": [[24, "ipctk.EdgeEdgeDistanceType.EA_EB1", false]], "edge0_id (ipctk.edgeedgecandidate property)": [[20, "ipctk.EdgeEdgeCandidate.edge0_id", false]], "edge1_id (ipctk.edgeedgecandidate property)": [[20, "ipctk.EdgeEdgeCandidate.edge1_id", false]], "edge_area() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.edge_area", false]], "edge_area_gradient() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.edge_area_gradient", false]], "edge_areas() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.edge_areas", false]], "edge_edge_ccd() (in module ipctk.tight_inclusion)": [[21, "ipctk.tight_inclusion.edge_edge_ccd", false]], "edge_edge_cross_squarednorm() (in module ipctk)": [[24, "ipctk.edge_edge_cross_squarednorm", false]], "edge_edge_cross_squarednorm_gradient() (in module ipctk)": [[24, "ipctk.edge_edge_cross_squarednorm_gradient", false]], "edge_edge_cross_squarednorm_hessian() (in module ipctk)": [[24, "ipctk.edge_edge_cross_squarednorm_hessian", false]], "edge_edge_distance() (in module ipctk)": [[24, "ipctk.edge_edge_distance", false]], "edge_edge_distance_gradient() (in module ipctk)": [[24, "ipctk.edge_edge_distance_gradient", false]], "edge_edge_distance_hessian() (in module ipctk)": [[24, "ipctk.edge_edge_distance_hessian", false]], "edge_edge_distance_type() (in module ipctk)": [[24, "ipctk.edge_edge_distance_type", false]], "edge_edge_mollifier() (in module ipctk)": [[24, "ipctk.edge_edge_mollifier", false]], "edge_edge_mollifier_gradient() (in module ipctk)": [[24, "ipctk.edge_edge_mollifier_gradient", false]], "edge_edge_mollifier_hessian() (in module ipctk)": [[24, "ipctk.edge_edge_mollifier_hessian", false]], "edge_edge_mollifier_threshold() (in module ipctk)": [[24, "ipctk.edge_edge_mollifier_threshold", false]], "edge_edge_nonlinear_ccd() (in module ipctk)": [[21, "ipctk.edge_edge_nonlinear_ccd", false]], "edge_edge_relative_velocity() (in module ipctk)": [[25, "ipctk.edge_edge_relative_velocity", false]], "edge_edge_relative_velocity_matrix() (in module ipctk)": [[25, "ipctk.edge_edge_relative_velocity_matrix", false]], "edge_edge_relative_velocity_matrix_jacobian() (in module ipctk)": [[25, "ipctk.edge_edge_relative_velocity_matrix_jacobian", false]], "edge_edge_tangent_basis() (in module ipctk)": [[25, "ipctk.edge_edge_tangent_basis", false]], "edge_edge_tangent_basis_jacobian() (in module ipctk)": [[25, "ipctk.edge_edge_tangent_basis_jacobian", false]], "edge_id (ipctk.edgefacecandidate property)": [[20, "ipctk.EdgeFaceCandidate.edge_id", false]], "edge_id (ipctk.edgevertexcandidate property)": [[20, "ipctk.EdgeVertexCandidate.edge_id", false]], "edge_start_ind (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.edge_start_ind", false]], "edge_to_voxels (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.edge_to_voxels", false]], "edge_vertex_adjacencies (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.edge_vertex_adjacencies", false]], "edgeedgecandidate (class in ipctk)": [[20, "ipctk.EdgeEdgeCandidate", false]], "edgeedgecollision (class in ipctk)": [[23, "ipctk.EdgeEdgeCollision", false]], "edgeedgedistancetype (class in ipctk)": [[24, "ipctk.EdgeEdgeDistanceType", false]], "edgeedgefrictioncollision (class in ipctk)": [[25, "ipctk.EdgeEdgeFrictionCollision", false]], "edgefacecandidate (class in ipctk)": [[20, "ipctk.EdgeFaceCandidate", false]], "edges (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.edges", false]], "edgevertexcandidate (class in ipctk)": [[20, "ipctk.EdgeVertexCandidate", false]], "edgevertexcollision (class in ipctk)": [[23, "ipctk.EdgeVertexCollision", false]], "edgevertexfrictioncollision (class in ipctk)": [[25, "ipctk.EdgeVertexFrictionCollision", false]], "ee_candidates (ipctk.candidates property)": [[20, "ipctk.Candidates.ee_candidates", false]], "ee_collisions (ipctk.collisions property)": [[23, "ipctk.Collisions.ee_collisions", false]], "ee_collisions (ipctk.frictioncollisions property)": [[25, "ipctk.FrictionCollisions.ee_collisions", false]], "empty() (ipctk.candidates method)": [[20, "ipctk.Candidates.empty", false]], "empty() (ipctk.collisions method)": [[23, "ipctk.Collisions.empty", false]], "empty() (ipctk.frictioncollisions method)": [[25, "ipctk.FrictionCollisions.empty", false]], "enable_shape_derivatives (ipctk.collisions property)": [[23, "ipctk.Collisions.enable_shape_derivatives", false]], "eps_x (ipctk.edgeedgecollision property)": [[23, "ipctk.EdgeEdgeCollision.eps_x", false]], "epsv (ipctk.frictionpotential property)": [[27, "ipctk.FrictionPotential.epsv", false]], "error (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.error", false]], "ev_candidates (ipctk.candidates property)": [[20, "ipctk.Candidates.ev_candidates", false]], "ev_collisions (ipctk.collisions property)": [[23, "ipctk.Collisions.ev_collisions", false]], "ev_collisions (ipctk.frictioncollisions property)": [[25, "ipctk.FrictionCollisions.ev_collisions", false]], "f0_sf() (in module ipctk)": [[25, "ipctk.f0_SF", false]], "f1_sf_over_x() (in module ipctk)": [[25, "ipctk.f1_SF_over_x", false]], "face_id (ipctk.edgefacecandidate property)": [[20, "ipctk.EdgeFaceCandidate.face_id", false]], "face_id (ipctk.facevertexcandidate property)": [[20, "ipctk.FaceVertexCandidate.face_id", false]], "face_to_voxels (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.face_to_voxels", false]], "faces (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.faces", false]], "faces_to_edges (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.faces_to_edges", false]], "facevertexcandidate (class in ipctk)": [[20, "ipctk.FaceVertexCandidate", false]], "facevertexcollision (class in ipctk)": [[23, "ipctk.FaceVertexCollision", false]], "facevertexfrictioncollision (class in ipctk)": [[25, "ipctk.FaceVertexFrictionCollision", false]], "first_derivative() (ipctk.barrier method)": [[18, "ipctk.Barrier.first_derivative", false]], "force() (ipctk.frictionpotential method)": [[27, "ipctk.FrictionPotential.force", false]], "force_jacobian() (ipctk.frictionpotential method)": [[27, "ipctk.FrictionPotential.force_jacobian", false]], "frictioncollision (class in ipctk)": [[25, "ipctk.FrictionCollision", false]], "frictioncollisions (class in ipctk)": [[25, "ipctk.FrictionCollisions", false]], "frictionpotential (class in ipctk)": [[27, "ipctk.FrictionPotential", false]], "frictionpotential.diffwrt (class in ipctk)": [[27, "ipctk.FrictionPotential.DiffWRT", false]], "from_point() (ipctk.aabb static method)": [[19, "ipctk.AABB.from_point", false]], "full_ndof (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.full_ndof", false]], "full_num_vertices (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.full_num_vertices", false]], "fv_candidates (ipctk.candidates property)": [[20, "ipctk.Candidates.fv_candidates", false]], "fv_collisions (ipctk.collisions property)": [[23, "ipctk.Collisions.fv_collisions", false]], "fv_collisions (ipctk.frictioncollisions property)": [[25, "ipctk.FrictionCollisions.fv_collisions", false]], "get_num_threads() (in module ipctk)": [[28, "ipctk.get_num_threads", false]], "gradient() (ipctk.barrierpotential method)": [[27, "ipctk.BarrierPotential.gradient", false]], "gradient() (ipctk.frictionpotential method)": [[27, "ipctk.FrictionPotential.gradient", false]], "grid_size (ipctk.hashgrid property)": [[19, "ipctk.HashGrid.grid_size", false]], "has_intersections() (in module ipctk)": [[26, "ipctk.has_intersections", false]], "hash_grid (ipctk.broadphasemethod attribute)": [[19, "ipctk.BroadPhaseMethod.HASH_GRID", false]], "hashgrid (class in ipctk)": [[19, "ipctk.HashGrid", false]], "hessian() (ipctk.barrierpotential method)": [[27, "ipctk.BarrierPotential.hessian", false]], "hessian() (ipctk.frictionpotential method)": [[27, "ipctk.FrictionPotential.hessian", false]], "info (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.info", false]], "init_adjacencies() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.init_adjacencies", false]], "init_area_jacobians() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.init_area_jacobians", false]], "initial_barrier_stiffness() (in module ipctk)": [[18, "ipctk.initial_barrier_stiffness", false]], "intersects() (ipctk.aabb method)": [[19, "ipctk.AABB.intersects", false]], "intervalnonlineartrajectory (class in ipctk)": [[21, "ipctk.IntervalNonlinearTrajectory", false]], "ipc::aabb (c++ class)": [[5, "_CPPv4N3ipc4AABBE", false]], "ipc::aabb::aabb (c++ function)": [[5, "_CPPv4N3ipc4AABB4AABBERK10ArrayMax3dRK10ArrayMax3d", false], [5, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABB", false], [5, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB", false], [5, "_CPPv4N3ipc4AABB4AABBEv", false]], "ipc::aabb::conservative_inflation (c++ function)": [[5, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd", false]], "ipc::aabb::from_point (c++ function)": [[5, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd", false], [5, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd", false]], "ipc::aabb::intersects (c++ function)": [[5, "_CPPv4NK3ipc4AABB10intersectsERK4AABB", false]], "ipc::aabb::max (c++ member)": [[5, "_CPPv4N3ipc4AABB3maxE", false]], "ipc::aabb::min (c++ member)": [[5, "_CPPv4N3ipc4AABB3minE", false]], "ipc::aabb::vertex_ids (c++ member)": [[5, "_CPPv4N3ipc4AABB10vertex_idsE", false]], "ipc::barrier (c++ class)": [[4, "_CPPv4N3ipc7BarrierE", false]], "ipc::barrier (c++ function)": [[4, "_CPPv4N3ipc7barrierEKdKd", false]], "ipc::barrier::barrier (c++ function)": [[4, "_CPPv4N3ipc7Barrier7BarrierEv", false]], "ipc::barrier::first_derivative (c++ function)": [[4, "_CPPv4NK3ipc7Barrier16first_derivativeEKdKd", false]], "ipc::barrier::operator() (c++ function)": [[4, "_CPPv4NK3ipc7BarrierclEKdKd", false]], "ipc::barrier::second_derivative (c++ function)": [[4, "_CPPv4NK3ipc7Barrier17second_derivativeEKdKd", false]], "ipc::barrier::units (c++ function)": [[4, "_CPPv4NK3ipc7Barrier5unitsEKd", false]], "ipc::barrier::~barrier (c++ function)": [[4, "_CPPv4N3ipc7BarrierD0Ev", false]], "ipc::barrier_first_derivative (c++ function)": [[4, "_CPPv4N3ipc24barrier_first_derivativeEKdKd", false]], "ipc::barrier_second_derivative (c++ function)": [[4, "_CPPv4N3ipc25barrier_second_derivativeEKdKd", false]], "ipc::barrierpotential (c++ class)": [[13, "_CPPv4N3ipc16BarrierPotentialE", false]], "ipc::barrierpotential::barrier (c++ function)": [[13, "_CPPv4NK3ipc16BarrierPotential7barrierEv", false]], "ipc::barrierpotential::barrierpotential (c++ function)": [[13, "_CPPv4N3ipc16BarrierPotential16BarrierPotentialEKNSt10shared_ptrI7BarrierEEKdKb", false], [13, "_CPPv4N3ipc16BarrierPotential16BarrierPotentialEKdKb", false]], "ipc::barrierpotential::dhat (c++ function)": [[13, "_CPPv4NK3ipc16BarrierPotential4dhatEv", false]], "ipc::barrierpotential::distance_based_potential (c++ function)": [[13, "_CPPv4NK3ipc16BarrierPotential24distance_based_potentialEKdKd", false]], "ipc::barrierpotential::distance_based_potential_gradient (c++ function)": [[13, "_CPPv4NK3ipc16BarrierPotential33distance_based_potential_gradientEKdKd", false]], "ipc::barrierpotential::distance_based_potential_hessian (c++ function)": [[13, "_CPPv4NK3ipc16BarrierPotential32distance_based_potential_hessianEKdKd", false]], "ipc::barrierpotential::m_barrier (c++ member)": [[13, "_CPPv4N3ipc16BarrierPotential9m_barrierE", false]], "ipc::barrierpotential::m_dhat (c++ member)": [[13, "_CPPv4N3ipc16BarrierPotential6m_dhatE", false]], "ipc::barrierpotential::m_use_physical_barrier (c++ member)": [[13, "_CPPv4N3ipc16BarrierPotential22m_use_physical_barrierE", false]], "ipc::barrierpotential::set_barrier (c++ function)": [[13, "_CPPv4N3ipc16BarrierPotential11set_barrierEKNSt10shared_ptrI7BarrierEE", false]], "ipc::barrierpotential::set_dhat (c++ function)": [[13, "_CPPv4N3ipc16BarrierPotential8set_dhatEKd", false]], "ipc::barrierpotential::set_use_physical_barrier (c++ function)": [[13, "_CPPv4N3ipc16BarrierPotential24set_use_physical_barrierEb", false]], "ipc::barrierpotential::use_physical_barrier (c++ function)": [[13, "_CPPv4NK3ipc16BarrierPotential20use_physical_barrierEv", false]], "ipc::broadphase (c++ class)": [[5, "_CPPv4N3ipc10BroadPhaseE", false]], "ipc::broadphase::build (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", false], [5, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", false]], "ipc::broadphase::can_edge_face_collide (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase21can_edge_face_collideE6size_t6size_t", false]], "ipc::broadphase::can_edge_vertex_collide (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase23can_edge_vertex_collideE6size_t6size_t", false]], "ipc::broadphase::can_edges_collide (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase17can_edges_collideE6size_t6size_t", false]], "ipc::broadphase::can_face_vertex_collide (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase23can_face_vertex_collideE6size_t6size_t", false]], "ipc::broadphase::can_faces_collide (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase17can_faces_collideE6size_t6size_t", false]], "ipc::broadphase::can_vertices_collide (c++ member)": [[5, "_CPPv4N3ipc10BroadPhase20can_vertices_collideE", false]], "ipc::broadphase::clear (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase5clearEv", false]], "ipc::broadphase::default_can_vertices_collide (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase28default_can_vertices_collideE6size_t6size_t", false]], "ipc::broadphase::detect_collision_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates", false]], "ipc::broadphase::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", false]], "ipc::broadphase::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", false]], "ipc::broadphase::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", false]], "ipc::broadphase::detect_face_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE", false]], "ipc::broadphase::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", false]], "ipc::broadphase::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", false]], "ipc::broadphase::edge_boxes (c++ member)": [[5, "_CPPv4N3ipc10BroadPhase10edge_boxesE", false]], "ipc::broadphase::face_boxes (c++ member)": [[5, "_CPPv4N3ipc10BroadPhase10face_boxesE", false]], "ipc::broadphase::make_broad_phase (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase16make_broad_phaseEK16BroadPhaseMethod", false]], "ipc::broadphase::vertex_boxes (c++ member)": [[5, "_CPPv4N3ipc10BroadPhase12vertex_boxesE", false]], "ipc::broadphase::~broadphase (c++ function)": [[5, "_CPPv4N3ipc10BroadPhaseD0Ev", false]], "ipc::broadphasemethod (c++ enum)": [[5, "_CPPv4N3ipc16BroadPhaseMethodE", false]], "ipc::broadphasemethod::brute_force (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod11BRUTE_FORCEE", false]], "ipc::broadphasemethod::bvh (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod3BVHE", false]], "ipc::broadphasemethod::hash_grid (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod9HASH_GRIDE", false]], "ipc::broadphasemethod::num_methods (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod11NUM_METHODSE", false]], "ipc::broadphasemethod::spatial_hash (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod12SPATIAL_HASHE", false]], "ipc::broadphasemethod::sweep_and_prune (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod15SWEEP_AND_PRUNEE", false]], "ipc::broadphasemethod::sweep_and_tiniest_queue (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod23SWEEP_AND_TINIEST_QUEUEE", false]], "ipc::bruteforce (c++ class)": [[5, "_CPPv4N3ipc10BruteForceE", false]], "ipc::bruteforce::bruteforce (c++ function)": [[5, "_CPPv4N3ipc10BruteForce10BruteForceEv", false]], "ipc::bruteforce::detect_candidates (c++ function)": [[5, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", false]], "ipc::bruteforce::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", false]], "ipc::bruteforce::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", false]], "ipc::bruteforce::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", false]], "ipc::bruteforce::detect_face_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE", false]], "ipc::bruteforce::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", false]], "ipc::bruteforce::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", false]], "ipc::bvh (c++ class)": [[5, "_CPPv4N3ipc3BVHE", false]], "ipc::bvh::build (c++ function)": [[5, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", false], [5, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", false]], "ipc::bvh::bvh (c++ function)": [[5, "_CPPv4N3ipc3BVH3BVHEv", false]], "ipc::bvh::clear (c++ function)": [[5, "_CPPv4N3ipc3BVH5clearEv", false]], "ipc::bvh::detect_candidates (c++ function)": [[5, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", false]], "ipc::bvh::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", false]], "ipc::bvh::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", false]], "ipc::bvh::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", false]], "ipc::bvh::detect_face_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE", false]], "ipc::bvh::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", false]], "ipc::bvh::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", false]], "ipc::bvh::edge_bvh (c++ member)": [[5, "_CPPv4N3ipc3BVH8edge_bvhE", false]], "ipc::bvh::face_bvh (c++ member)": [[5, "_CPPv4N3ipc3BVH8face_bvhE", false]], "ipc::bvh::init_bvh (c++ function)": [[5, "_CPPv4N3ipc3BVH8init_bvhERKNSt6vectorI4AABBEERN9SimpleBVH3BVHE", false]], "ipc::bvh::vertex_bvh (c++ member)": [[5, "_CPPv4N3ipc3BVH10vertex_bvhE", false]], "ipc::candidates (c++ class)": [[6, "_CPPv4N3ipc10CandidatesE", false]], "ipc::candidates::build (c++ function)": [[6, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod", false], [6, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod", false]], "ipc::candidates::candidates (c++ function)": [[6, "_CPPv4N3ipc10Candidates10CandidatesEv", false]], "ipc::candidates::clear (c++ function)": [[6, "_CPPv4N3ipc10Candidates5clearEv", false]], "ipc::candidates::compute_cfl_stepsize (c++ function)": [[6, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdRK14NarrowPhaseCCD", false]], "ipc::candidates::compute_collision_free_stepsize (c++ function)": [[6, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD", false]], "ipc::candidates::compute_noncandidate_conservative_stepsize (c++ function)": [[6, "_CPPv4NK3ipc10Candidates42compute_noncandidate_conservative_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdEKd", false]], "ipc::candidates::ee_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13ee_candidatesE", false]], "ipc::candidates::empty (c++ function)": [[6, "_CPPv4NK3ipc10Candidates5emptyEv", false]], "ipc::candidates::ev_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13ev_candidatesE", false]], "ipc::candidates::fv_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13fv_candidatesE", false]], "ipc::candidates::is_step_collision_free (c++ function)": [[6, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD", false]], "ipc::candidates::operator[] (c++ function)": [[6, "_CPPv4N3ipc10CandidatesixE6size_t", false], [6, "_CPPv4NK3ipc10CandidatesixE6size_t", false]], "ipc::candidates::save_obj (c++ function)": [[6, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::candidates::size (c++ function)": [[6, "_CPPv4NK3ipc10Candidates4sizeEv", false]], "ipc::candidates::vv_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13vv_candidatesE", false]], "ipc::clampedlogbarrier (c++ class)": [[4, "_CPPv4N3ipc17ClampedLogBarrierE", false]], "ipc::clampedlogbarrier::clampedlogbarrier (c++ function)": [[4, "_CPPv4N3ipc17ClampedLogBarrier17ClampedLogBarrierEv", false]], "ipc::clampedlogbarrier::first_derivative (c++ function)": [[4, "_CPPv4NK3ipc17ClampedLogBarrier16first_derivativeEKdKd", false]], "ipc::clampedlogbarrier::operator() (c++ function)": [[4, "_CPPv4NK3ipc17ClampedLogBarrierclEKdKd", false]], "ipc::clampedlogbarrier::second_derivative (c++ function)": [[4, "_CPPv4NK3ipc17ClampedLogBarrier17second_derivativeEKdKd", false]], "ipc::clampedlogbarrier::units (c++ function)": [[4, "_CPPv4NK3ipc17ClampedLogBarrier5unitsEKd", false]], "ipc::collision (c++ class)": [[9, "_CPPv4N3ipc9CollisionE", false]], "ipc::collision::collision (c++ function)": [[9, "_CPPv4N3ipc9Collision9CollisionEKdRKN5Eigen12SparseVectorIdEE", false], [9, "_CPPv4N3ipc9Collision9CollisionEv", false]], "ipc::collision::dmin (c++ member)": [[9, "_CPPv4N3ipc9Collision4dminE", false]], "ipc::collision::is_mollified (c++ function)": [[9, "_CPPv4NK3ipc9Collision12is_mollifiedEv", false]], "ipc::collision::mollifier (c++ function)": [[9, "_CPPv4NK3ipc9Collision9mollifierERK12VectorMax12d", false], [9, "_CPPv4NK3ipc9Collision9mollifierERK12VectorMax12dd", false]], "ipc::collision::mollifier_gradient (c++ function)": [[9, "_CPPv4NK3ipc9Collision18mollifier_gradientERK12VectorMax12d", false], [9, "_CPPv4NK3ipc9Collision18mollifier_gradientERK12VectorMax12dd", false]], "ipc::collision::mollifier_gradient_jacobian_wrt_x (c++ function)": [[9, "_CPPv4NK3ipc9Collision33mollifier_gradient_jacobian_wrt_xERK12VectorMax12dRK12VectorMax12d", false]], "ipc::collision::mollifier_gradient_wrt_x (c++ function)": [[9, "_CPPv4NK3ipc9Collision24mollifier_gradient_wrt_xERK12VectorMax12dRK12VectorMax12d", false]], "ipc::collision::mollifier_hessian (c++ function)": [[9, "_CPPv4NK3ipc9Collision17mollifier_hessianERK12VectorMax12d", false], [9, "_CPPv4NK3ipc9Collision17mollifier_hessianERK12VectorMax12dd", false]], "ipc::collision::mollifier_threshold (c++ function)": [[9, "_CPPv4NK3ipc9Collision19mollifier_thresholdERK12VectorMax12d", false]], "ipc::collision::weight (c++ member)": [[9, "_CPPv4N3ipc9Collision6weightE", false]], "ipc::collision::weight_gradient (c++ member)": [[9, "_CPPv4N3ipc9Collision15weight_gradientE", false]], "ipc::collision::~collision (c++ function)": [[9, "_CPPv4N3ipc9CollisionD0Ev", false]], "ipc::collisionmesh (c++ class)": [[8, "_CPPv4N3ipc13CollisionMeshE", false]], "ipc::collisionmesh::are_adjacencies_initialized (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh27are_adjacencies_initializedEv", false]], "ipc::collisionmesh::are_area_jacobians_initialized (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh30are_area_jacobians_initializedEv", false]], "ipc::collisionmesh::build_from_full_mesh (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::collisionmesh::can_collide (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh11can_collideE", false]], "ipc::collisionmesh::codim_edges (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh11codim_edgesEv", false]], "ipc::collisionmesh::codim_vertices (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh14codim_verticesEv", false]], "ipc::collisionmesh::collisionmesh (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE", false], [8, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE", false], [8, "_CPPv4N3ipc13CollisionMesh13CollisionMeshEv", false]], "ipc::collisionmesh::construct_faces_to_edges (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::collisionmesh::construct_is_on_surface (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKlRKN5Eigen8MatrixXiERKN5Eigen8VectorXiE", false]], "ipc::collisionmesh::default_can_collide (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh19default_can_collideE6size_t6size_t", false]], "ipc::collisionmesh::dim (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh3dimEv", false]], "ipc::collisionmesh::displace_vertices (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE", false]], "ipc::collisionmesh::edge_area (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t", false]], "ipc::collisionmesh::edge_area_gradient (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t", false]], "ipc::collisionmesh::edge_areas (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh10edge_areasEv", false]], "ipc::collisionmesh::edge_vertex_adjacencies (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh23edge_vertex_adjacenciesEv", false]], "ipc::collisionmesh::edges (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh5edgesEv", false]], "ipc::collisionmesh::faces (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh5facesEv", false]], "ipc::collisionmesh::faces_to_edges (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh14faces_to_edgesEv", false]], "ipc::collisionmesh::full_ndof (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh9full_ndofEv", false]], "ipc::collisionmesh::full_num_vertices (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh17full_num_verticesEv", false]], "ipc::collisionmesh::init_adjacencies (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh16init_adjacenciesEv", false]], "ipc::collisionmesh::init_area_jacobians (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh19init_area_jacobiansEv", false]], "ipc::collisionmesh::init_areas (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh10init_areasEv", false]], "ipc::collisionmesh::init_codim_edges (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh16init_codim_edgesEv", false]], "ipc::collisionmesh::init_codim_vertices (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh19init_codim_verticesEv", false]], "ipc::collisionmesh::init_selection_matrices (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh23init_selection_matricesEKi", false]], "ipc::collisionmesh::is_vertex_on_boundary (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi", false]], "ipc::collisionmesh::m_codim_edges (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh13m_codim_edgesE", false]], "ipc::collisionmesh::m_codim_vertices (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh16m_codim_verticesE", false]], "ipc::collisionmesh::m_displacement_dof_map (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh22m_displacement_dof_mapE", false]], "ipc::collisionmesh::m_displacement_map (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh18m_displacement_mapE", false]], "ipc::collisionmesh::m_edge_area_jacobian (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh20m_edge_area_jacobianE", false]], "ipc::collisionmesh::m_edge_areas (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh12m_edge_areasE", false]], "ipc::collisionmesh::m_edge_vertex_adjacencies (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh25m_edge_vertex_adjacenciesE", false]], "ipc::collisionmesh::m_edges (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh7m_edgesE", false]], "ipc::collisionmesh::m_faces (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh7m_facesE", false]], "ipc::collisionmesh::m_faces_to_edges (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh16m_faces_to_edgesE", false]], "ipc::collisionmesh::m_full_rest_positions (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh21m_full_rest_positionsE", false]], "ipc::collisionmesh::m_full_vertex_to_vertex (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh23m_full_vertex_to_vertexE", false]], "ipc::collisionmesh::m_is_vertex_on_boundary (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh23m_is_vertex_on_boundaryE", false]], "ipc::collisionmesh::m_rest_positions (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh16m_rest_positionsE", false]], "ipc::collisionmesh::m_select_dof (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh12m_select_dofE", false]], "ipc::collisionmesh::m_select_vertices (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh17m_select_verticesE", false]], "ipc::collisionmesh::m_vertex_area_jacobian (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh22m_vertex_area_jacobianE", false]], "ipc::collisionmesh::m_vertex_areas (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh14m_vertex_areasE", false]], "ipc::collisionmesh::m_vertex_edge_adjacencies (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh25m_vertex_edge_adjacenciesE", false]], "ipc::collisionmesh::m_vertex_to_full_vertex (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh23m_vertex_to_full_vertexE", false]], "ipc::collisionmesh::m_vertex_vertex_adjacencies (c++ member)": [[8, "_CPPv4N3ipc13CollisionMesh27m_vertex_vertex_adjacenciesE", false]], "ipc::collisionmesh::map_displacements (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE", false]], "ipc::collisionmesh::ndof (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh4ndofEv", false]], "ipc::collisionmesh::num_codim_edges (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh15num_codim_edgesEv", false]], "ipc::collisionmesh::num_codim_vertices (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh18num_codim_verticesEv", false]], "ipc::collisionmesh::num_edges (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh9num_edgesEv", false]], "ipc::collisionmesh::num_faces (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh9num_facesEv", false]], "ipc::collisionmesh::num_vertices (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh12num_verticesEv", false]], "ipc::collisionmesh::rest_positions (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh14rest_positionsEv", false]], "ipc::collisionmesh::to_full_dof (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE", false], [8, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE", false]], "ipc::collisionmesh::to_full_vertex_id (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t", false]], "ipc::collisionmesh::vertex_area (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t", false]], "ipc::collisionmesh::vertex_area_gradient (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t", false]], "ipc::collisionmesh::vertex_areas (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh12vertex_areasEv", false]], "ipc::collisionmesh::vertex_edge_adjacencies (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh23vertex_edge_adjacenciesEv", false]], "ipc::collisionmesh::vertex_matrix_to_dof_matrix (c++ function)": [[8, "_CPPv4N3ipc13CollisionMesh27vertex_matrix_to_dof_matrixERKN5Eigen12SparseMatrixIdEEi", false]], "ipc::collisionmesh::vertex_vertex_adjacencies (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh25vertex_vertex_adjacenciesEv", false]], "ipc::collisionmesh::vertices (c++ function)": [[8, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE", false]], "ipc::collisionmesh::~collisionmesh (c++ function)": [[8, "_CPPv4N3ipc13CollisionMeshD0Ev", false]], "ipc::collisions (c++ class)": [[9, "_CPPv4N3ipc10CollisionsE", false]], "ipc::collisions::build (c++ function)": [[9, "_CPPv4N3ipc10Collisions5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd", false], [9, "_CPPv4N3ipc10Collisions5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod", false]], "ipc::collisions::clear (c++ function)": [[9, "_CPPv4N3ipc10Collisions5clearEv", false]], "ipc::collisions::collisions (c++ function)": [[9, "_CPPv4N3ipc10Collisions10CollisionsEv", false]], "ipc::collisions::compute_minimum_distance (c++ function)": [[9, "_CPPv4NK3ipc10Collisions24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE", false]], "ipc::collisions::ee_collisions (c++ member)": [[9, "_CPPv4N3ipc10Collisions13ee_collisionsE", false]], "ipc::collisions::empty (c++ function)": [[9, "_CPPv4NK3ipc10Collisions5emptyEv", false]], "ipc::collisions::enable_shape_derivatives (c++ function)": [[9, "_CPPv4NK3ipc10Collisions24enable_shape_derivativesEv", false]], "ipc::collisions::ev_collisions (c++ member)": [[9, "_CPPv4N3ipc10Collisions13ev_collisionsE", false]], "ipc::collisions::fv_collisions (c++ member)": [[9, "_CPPv4N3ipc10Collisions13fv_collisionsE", false]], "ipc::collisions::is_edge_edge (c++ function)": [[9, "_CPPv4NK3ipc10Collisions12is_edge_edgeE6size_t", false]], "ipc::collisions::is_edge_vertex (c++ function)": [[9, "_CPPv4NK3ipc10Collisions14is_edge_vertexE6size_t", false]], "ipc::collisions::is_face_vertex (c++ function)": [[9, "_CPPv4NK3ipc10Collisions14is_face_vertexE6size_t", false]], "ipc::collisions::is_plane_vertex (c++ function)": [[9, "_CPPv4NK3ipc10Collisions15is_plane_vertexE6size_t", false]], "ipc::collisions::is_vertex_vertex (c++ function)": [[9, "_CPPv4NK3ipc10Collisions16is_vertex_vertexE6size_t", false]], "ipc::collisions::m_enable_shape_derivatives (c++ member)": [[9, "_CPPv4N3ipc10Collisions26m_enable_shape_derivativesE", false]], "ipc::collisions::m_use_area_weighting (c++ member)": [[9, "_CPPv4N3ipc10Collisions20m_use_area_weightingE", false]], "ipc::collisions::m_use_improved_max_approximator (c++ member)": [[9, "_CPPv4N3ipc10Collisions31m_use_improved_max_approximatorE", false]], "ipc::collisions::operator[] (c++ function)": [[9, "_CPPv4N3ipc10CollisionsixE6size_t", false], [9, "_CPPv4NK3ipc10CollisionsixE6size_t", false]], "ipc::collisions::pv_collisions (c++ member)": [[9, "_CPPv4N3ipc10Collisions13pv_collisionsE", false]], "ipc::collisions::set_enable_shape_derivatives (c++ function)": [[9, "_CPPv4N3ipc10Collisions28set_enable_shape_derivativesEKb", false]], "ipc::collisions::set_use_area_weighting (c++ function)": [[9, "_CPPv4N3ipc10Collisions22set_use_area_weightingEKb", false]], "ipc::collisions::set_use_improved_max_approximator (c++ function)": [[9, "_CPPv4N3ipc10Collisions33set_use_improved_max_approximatorEKb", false]], "ipc::collisions::size (c++ function)": [[9, "_CPPv4NK3ipc10Collisions4sizeEv", false]], "ipc::collisions::to_string (c++ function)": [[9, "_CPPv4NK3ipc10Collisions9to_stringERK13CollisionMeshRKN5Eigen8MatrixXdE", false]], "ipc::collisions::use_area_weighting (c++ function)": [[9, "_CPPv4NK3ipc10Collisions18use_area_weightingEv", false]], "ipc::collisions::use_improved_max_approximator (c++ function)": [[9, "_CPPv4NK3ipc10Collisions29use_improved_max_approximatorEv", false]], "ipc::collisions::value_type (c++ type)": [[9, "_CPPv4N3ipc10Collisions10value_typeE", false]], "ipc::collisions::vv_collisions (c++ member)": [[9, "_CPPv4N3ipc10Collisions13vv_collisionsE", false]], "ipc::collisionstencil (c++ class)": [[6, "_CPPv4N3ipc16CollisionStencilE", false]], "ipc::collisionstencil::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERK12VectorMax12d", false]], "ipc::collisionstencil::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERK12VectorMax12d", false]], "ipc::collisionstencil::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERK12VectorMax12d", false]], "ipc::collisionstencil::dim (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil3dimEKi", false]], "ipc::collisionstencil::dof (c++ function)": [[6, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::collisionstencil::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil12num_verticesEv", false]], "ipc::collisionstencil::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::collisionstencil::vertices (c++ function)": [[6, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::collisionstencil::~collisionstencil (c++ function)": [[6, "_CPPv4N3ipc16CollisionStencilD0Ev", false]], "ipc::compute_collision_free_stepsize (c++ function)": [[7, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD", false]], "ipc::compute_normal_force_magnitude (c++ function)": [[11, "_CPPv4N3ipc30compute_normal_force_magnitudeEKdRK7BarrierKdKdKd", false]], "ipc::compute_normal_force_magnitude_gradient (c++ function)": [[11, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEKdRKN5Eigen8VectorXdERK7BarrierKdKdKd", false]], "ipc::conservative_piecewise_linear_ccd (c++ function)": [[7, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd", false]], "ipc::continuouscollisioncandidate (c++ class)": [[6, "_CPPv4N3ipc28ContinuousCollisionCandidateE", false]], "ipc::continuouscollisioncandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD", false]], "ipc::continuouscollisioncandidate::write_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERK12VectorMax12dRK12VectorMax12d", false]], "ipc::continuouscollisioncandidate::~continuouscollisioncandidate (c++ function)": [[6, "_CPPv4N3ipc28ContinuousCollisionCandidateD0Ev", false]], "ipc::default_broad_phase_method (c++ member)": [[5, "_CPPv4N3ipc26DEFAULT_BROAD_PHASE_METHODE", false]], "ipc::df1_x_minus_f1_over_x3 (c++ function)": [[11, "_CPPv4N3ipc22df1_x_minus_f1_over_x3EKdKd", false]], "ipc::distancebasedpotential (c++ class)": [[13, "_CPPv4N3ipc22DistanceBasedPotentialE", false]], "ipc::distancebasedpotential::distance_based_potential (c++ function)": [[13, "_CPPv4NK3ipc22DistanceBasedPotential24distance_based_potentialEKdKd", false]], "ipc::distancebasedpotential::distance_based_potential_gradient (c++ function)": [[13, "_CPPv4NK3ipc22DistanceBasedPotential33distance_based_potential_gradientEKdKd", false]], "ipc::distancebasedpotential::distance_based_potential_hessian (c++ function)": [[13, "_CPPv4NK3ipc22DistanceBasedPotential32distance_based_potential_hessianEKdKd", false]], "ipc::distancebasedpotential::distancebasedpotential (c++ function)": [[13, "_CPPv4N3ipc22DistanceBasedPotential22DistanceBasedPotentialEv", false]], "ipc::distancebasedpotential::gradient (c++ function)": [[13, "_CPPv4NK3ipc22DistanceBasedPotential8gradientERK9CollisionRK12VectorMax12d", false]], "ipc::distancebasedpotential::hessian (c++ function)": [[13, "_CPPv4NK3ipc22DistanceBasedPotential7hessianERK9CollisionRK12VectorMax12dK19PSDProjectionMethod", false]], "ipc::distancebasedpotential::operator() (c++ function)": [[13, "_CPPv4NK3ipc22DistanceBasedPotentialclERK9CollisionRK12VectorMax12d", false]], "ipc::distancebasedpotential::shape_derivative (c++ function)": [[13, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK10CollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE", false], [13, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK9CollisionRKNSt5arrayIlXL4EEEERK12VectorMax12dRK12VectorMax12dRNSt6vectorIN5Eigen7TripletIdEEEE", false]], "ipc::distancebasedpotential::super (c++ type)": [[13, "_CPPv4N3ipc22DistanceBasedPotential5SuperE", false]], "ipc::distancebasedpotential::~distancebasedpotential (c++ function)": [[13, "_CPPv4N3ipc22DistanceBasedPotentialD0Ev", false]], "ipc::edge_edge_cross_squarednorm (c++ function)": [[10, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::edge_edge_cross_squarednorm_gradient (c++ function)": [[10, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::edge_edge_cross_squarednorm_hessian (c++ function)": [[10, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::edge_edge_distance (c++ function)": [[10, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType", false]], "ipc::edge_edge_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType", false]], "ipc::edge_edge_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType", false]], "ipc::edge_edge_distance_type (c++ function)": [[10, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::edge_edge_mollifier (c++ function)": [[10, "_CPPv4N3ipc19edge_edge_mollifierEKdKd", false], [10, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd", false]], "ipc::edge_edge_mollifier_gradient (c++ function)": [[10, "_CPPv4N3ipc28edge_edge_mollifier_gradientEKdKd", false], [10, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd", false]], "ipc::edge_edge_mollifier_hessian (c++ function)": [[10, "_CPPv4N3ipc27edge_edge_mollifier_hessianEKdKd", false], [10, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd", false]], "ipc::edge_edge_mollifier_threshold (c++ function)": [[10, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::edge_edge_nonlinear_ccd (c++ function)": [[7, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd", false]], "ipc::edge_edge_relative_velocity (c++ function)": [[11, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE", false]], "ipc::edge_edge_relative_velocity_matrix (c++ function)": [[11, "_CPPv4N3ipc34edge_edge_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", false]], "ipc::edge_edge_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4N3ipc43edge_edge_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", false]], "ipc::edge_edge_tangent_basis (c++ function)": [[11, "_CPPv4N3ipc23edge_edge_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::edge_edge_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4N3ipc32edge_edge_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::edgeedgecandidate (c++ class)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidateE", false]], "ipc::edgeedgecandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate", false]], "ipc::edgeedgecandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD", false]], "ipc::edgeedgecandidate::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate16compute_distanceERK12VectorMax12d", false]], "ipc::edgeedgecandidate::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate25compute_distance_gradientERK12VectorMax12d", false]], "ipc::edgeedgecandidate::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate24compute_distance_hessianERK12VectorMax12d", false]], "ipc::edgeedgecandidate::edge0_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidate8edge0_idE", false]], "ipc::edgeedgecandidate::edge1_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidate8edge1_idE", false]], "ipc::edgeedgecandidate::edgeedgecandidate (c++ function)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidate17EdgeEdgeCandidateEll", false]], "ipc::edgeedgecandidate::known_dtype (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate11known_dtypeEv", false]], "ipc::edgeedgecandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate12num_verticesEv", false]], "ipc::edgeedgecandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidateneERK17EdgeEdgeCandidate", false]], "ipc::edgeedgecandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidateltERK17EdgeEdgeCandidate", false]], "ipc::edgeedgecandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidateeqERK17EdgeEdgeCandidate", false]], "ipc::edgeedgecandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::edgeedgecollision (c++ class)": [[9, "_CPPv4N3ipc17EdgeEdgeCollisionE", false]], "ipc::edgeedgecollision::abslhashvalue (c++ function)": [[9, "_CPPv4I0EN3ipc17EdgeEdgeCollision13AbslHashValueE1H1HRK17EdgeEdgeCollision", false]], "ipc::edgeedgecollision::dtype (c++ member)": [[9, "_CPPv4N3ipc17EdgeEdgeCollision5dtypeE", false]], "ipc::edgeedgecollision::edgeedgecollision (c++ function)": [[9, "_CPPv4N3ipc17EdgeEdgeCollision17EdgeEdgeCollisionEKlKlKdK20EdgeEdgeDistanceType", false], [9, "_CPPv4N3ipc17EdgeEdgeCollision17EdgeEdgeCollisionEKlKlKdKdRKN5Eigen12SparseVectorIdEEK20EdgeEdgeDistanceType", false], [9, "_CPPv4N3ipc17EdgeEdgeCollision17EdgeEdgeCollisionERK17EdgeEdgeCandidateKdK20EdgeEdgeDistanceType", false]], "ipc::edgeedgecollision::eps_x (c++ member)": [[9, "_CPPv4N3ipc17EdgeEdgeCollision5eps_xE", false]], "ipc::edgeedgecollision::is_mollified (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollision12is_mollifiedEv", false]], "ipc::edgeedgecollision::known_dtype (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollision11known_dtypeEv", false]], "ipc::edgeedgecollision::mollifier (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollision9mollifierERK12VectorMax12d", false], [9, "_CPPv4NK3ipc17EdgeEdgeCollision9mollifierERK12VectorMax12dd", false]], "ipc::edgeedgecollision::mollifier_gradient (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollision18mollifier_gradientERK12VectorMax12d", false], [9, "_CPPv4NK3ipc17EdgeEdgeCollision18mollifier_gradientERK12VectorMax12dd", false]], "ipc::edgeedgecollision::mollifier_gradient_jacobian_wrt_x (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollision33mollifier_gradient_jacobian_wrt_xERK12VectorMax12dRK12VectorMax12d", false]], "ipc::edgeedgecollision::mollifier_gradient_wrt_x (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollision24mollifier_gradient_wrt_xERK12VectorMax12dRK12VectorMax12d", false]], "ipc::edgeedgecollision::mollifier_hessian (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollision17mollifier_hessianERK12VectorMax12d", false], [9, "_CPPv4NK3ipc17EdgeEdgeCollision17mollifier_hessianERK12VectorMax12dd", false]], "ipc::edgeedgecollision::mollifier_threshold (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollision19mollifier_thresholdERK12VectorMax12d", false]], "ipc::edgeedgecollision::operator!= (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollisionneERK17EdgeEdgeCollision", false]], "ipc::edgeedgecollision::operator< (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollisionltERK17EdgeEdgeCollision", false]], "ipc::edgeedgecollision::operator== (c++ function)": [[9, "_CPPv4NK3ipc17EdgeEdgeCollisioneqERK17EdgeEdgeCollision", false]], "ipc::edgeedgedistancetype (c++ enum)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceTypeE", false]], "ipc::edgeedgedistancetype::auto (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType4AUTOE", false]], "ipc::edgeedgedistancetype::ea0_eb (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA0_EBE", false]], "ipc::edgeedgedistancetype::ea0_eb0 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB0E", false]], "ipc::edgeedgedistancetype::ea0_eb1 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB1E", false]], "ipc::edgeedgedistancetype::ea1_eb (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA1_EBE", false]], "ipc::edgeedgedistancetype::ea1_eb0 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB0E", false]], "ipc::edgeedgedistancetype::ea1_eb1 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB1E", false]], "ipc::edgeedgedistancetype::ea_eb (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType5EA_EBE", false]], "ipc::edgeedgedistancetype::ea_eb0 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB0E", false]], "ipc::edgeedgedistancetype::ea_eb1 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB1E", false]], "ipc::edgeedgefrictioncollision (c++ class)": [[11, "_CPPv4N3ipc25EdgeEdgeFrictionCollisionE", false]], "ipc::edgeedgefrictioncollision::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision21compute_closest_pointERK12VectorMax12d", false]], "ipc::edgeedgefrictioncollision::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision30compute_closest_point_jacobianERK12VectorMax12d", false]], "ipc::edgeedgefrictioncollision::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision21compute_tangent_basisERK12VectorMax12d", false]], "ipc::edgeedgefrictioncollision::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d", false]], "ipc::edgeedgefrictioncollision::edgeedgecandidate (c++ function)": [[11, "_CPPv4N3ipc25EdgeEdgeFrictionCollision17EdgeEdgeCandidateEll", false]], "ipc::edgeedgefrictioncollision::edgeedgefrictioncollision (c++ function)": [[11, "_CPPv4N3ipc25EdgeEdgeFrictionCollision25EdgeEdgeFrictionCollisionERK17EdgeEdgeCollision", false], [11, "_CPPv4N3ipc25EdgeEdgeFrictionCollision25EdgeEdgeFrictionCollisionERK17EdgeEdgeCollisionRK12VectorMax12dRK16BarrierPotentialKd", false]], "ipc::edgeedgefrictioncollision::known_dtype (c++ function)": [[11, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision11known_dtypeEv", false]], "ipc::edgeedgefrictioncollision::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision17relative_velocityERK12VectorMax12d", false]], "ipc::edgeedgefrictioncollision::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision24relative_velocity_matrixERK11VectorMax2d", false], [11, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision24relative_velocity_matrixEv", false]], "ipc::edgeedgefrictioncollision::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d", false]], "ipc::edgefacecandidate (c++ class)": [[6, "_CPPv4N3ipc17EdgeFaceCandidateE", false]], "ipc::edgefacecandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate", false]], "ipc::edgefacecandidate::edge_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeFaceCandidate7edge_idE", false]], "ipc::edgefacecandidate::edgefacecandidate (c++ function)": [[6, "_CPPv4N3ipc17EdgeFaceCandidate17EdgeFaceCandidateEll", false]], "ipc::edgefacecandidate::face_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeFaceCandidate7face_idE", false]], "ipc::edgefacecandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc17EdgeFaceCandidateneERK17EdgeFaceCandidate", false]], "ipc::edgefacecandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc17EdgeFaceCandidateltERK17EdgeFaceCandidate", false]], "ipc::edgefacecandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc17EdgeFaceCandidateeqERK17EdgeFaceCandidate", false]], "ipc::edgevertexcandidate (c++ class)": [[6, "_CPPv4N3ipc19EdgeVertexCandidateE", false]], "ipc::edgevertexcandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate", false]], "ipc::edgevertexcandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD", false]], "ipc::edgevertexcandidate::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate16compute_distanceERK12VectorMax12d", false]], "ipc::edgevertexcandidate::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate25compute_distance_gradientERK12VectorMax12d", false]], "ipc::edgevertexcandidate::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate24compute_distance_hessianERK12VectorMax12d", false]], "ipc::edgevertexcandidate::edge_id (c++ member)": [[6, "_CPPv4N3ipc19EdgeVertexCandidate7edge_idE", false]], "ipc::edgevertexcandidate::edgevertexcandidate (c++ function)": [[6, "_CPPv4N3ipc19EdgeVertexCandidate19EdgeVertexCandidateEll", false]], "ipc::edgevertexcandidate::known_dtype (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate11known_dtypeEv", false]], "ipc::edgevertexcandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate12num_verticesEv", false]], "ipc::edgevertexcandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidateneERK19EdgeVertexCandidate", false]], "ipc::edgevertexcandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidateltERK19EdgeVertexCandidate", false]], "ipc::edgevertexcandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidateeqERK19EdgeVertexCandidate", false]], "ipc::edgevertexcandidate::vertex_id (c++ member)": [[6, "_CPPv4N3ipc19EdgeVertexCandidate9vertex_idE", false]], "ipc::edgevertexcandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::edgevertexcollision (c++ class)": [[9, "_CPPv4N3ipc19EdgeVertexCollisionE", false]], "ipc::edgevertexcollision::abslhashvalue (c++ function)": [[9, "_CPPv4I0EN3ipc19EdgeVertexCollision13AbslHashValueE1H1HRK19EdgeVertexCollision", false]], "ipc::edgevertexcollision::edgevertexcandidate (c++ function)": [[9, "_CPPv4N3ipc19EdgeVertexCollision19EdgeVertexCandidateEll", false]], "ipc::edgevertexcollision::edgevertexcollision (c++ function)": [[9, "_CPPv4N3ipc19EdgeVertexCollision19EdgeVertexCollisionEKlKlKdRKN5Eigen12SparseVectorIdEE", false], [9, "_CPPv4N3ipc19EdgeVertexCollision19EdgeVertexCollisionERK19EdgeVertexCandidate", false]], "ipc::edgevertexcollision::known_dtype (c++ function)": [[9, "_CPPv4NK3ipc19EdgeVertexCollision11known_dtypeEv", false]], "ipc::edgevertexfrictioncollision (c++ class)": [[11, "_CPPv4N3ipc27EdgeVertexFrictionCollisionE", false]], "ipc::edgevertexfrictioncollision::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc27EdgeVertexFrictionCollision21compute_closest_pointERK12VectorMax12d", false]], "ipc::edgevertexfrictioncollision::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc27EdgeVertexFrictionCollision30compute_closest_point_jacobianERK12VectorMax12d", false]], "ipc::edgevertexfrictioncollision::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc27EdgeVertexFrictionCollision21compute_tangent_basisERK12VectorMax12d", false]], "ipc::edgevertexfrictioncollision::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc27EdgeVertexFrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d", false]], "ipc::edgevertexfrictioncollision::edgevertexcandidate (c++ function)": [[11, "_CPPv4N3ipc27EdgeVertexFrictionCollision19EdgeVertexCandidateEll", false]], "ipc::edgevertexfrictioncollision::edgevertexfrictioncollision (c++ function)": [[11, "_CPPv4N3ipc27EdgeVertexFrictionCollision27EdgeVertexFrictionCollisionERK19EdgeVertexCollision", false], [11, "_CPPv4N3ipc27EdgeVertexFrictionCollision27EdgeVertexFrictionCollisionERK19EdgeVertexCollisionRK12VectorMax12dRK16BarrierPotentialKd", false]], "ipc::edgevertexfrictioncollision::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc27EdgeVertexFrictionCollision17relative_velocityERK12VectorMax12d", false]], "ipc::edgevertexfrictioncollision::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc27EdgeVertexFrictionCollision24relative_velocity_matrixERK11VectorMax2d", false], [11, "_CPPv4NK3ipc27EdgeVertexFrictionCollision24relative_velocity_matrixEv", false]], "ipc::edgevertexfrictioncollision::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc27EdgeVertexFrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d", false]], "ipc::f0_sf (c++ function)": [[11, "_CPPv4N3ipc5f0_SFEKdKd", false]], "ipc::f1_sf_over_x (c++ function)": [[11, "_CPPv4N3ipc12f1_SF_over_xEKdKd", false]], "ipc::facevertexcandidate (c++ class)": [[6, "_CPPv4N3ipc19FaceVertexCandidateE", false]], "ipc::facevertexcandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate", false]], "ipc::facevertexcandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD", false]], "ipc::facevertexcandidate::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate16compute_distanceERK12VectorMax12d", false]], "ipc::facevertexcandidate::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate25compute_distance_gradientERK12VectorMax12d", false]], "ipc::facevertexcandidate::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate24compute_distance_hessianERK12VectorMax12d", false]], "ipc::facevertexcandidate::face_id (c++ member)": [[6, "_CPPv4N3ipc19FaceVertexCandidate7face_idE", false]], "ipc::facevertexcandidate::facevertexcandidate (c++ function)": [[6, "_CPPv4N3ipc19FaceVertexCandidate19FaceVertexCandidateEll", false]], "ipc::facevertexcandidate::known_dtype (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate11known_dtypeEv", false]], "ipc::facevertexcandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate12num_verticesEv", false]], "ipc::facevertexcandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidateneERK19FaceVertexCandidate", false]], "ipc::facevertexcandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidateltERK19FaceVertexCandidate", false]], "ipc::facevertexcandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidateeqERK19FaceVertexCandidate", false]], "ipc::facevertexcandidate::vertex_id (c++ member)": [[6, "_CPPv4N3ipc19FaceVertexCandidate9vertex_idE", false]], "ipc::facevertexcandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::facevertexcollision (c++ class)": [[9, "_CPPv4N3ipc19FaceVertexCollisionE", false]], "ipc::facevertexcollision::abslhashvalue (c++ function)": [[9, "_CPPv4I0EN3ipc19FaceVertexCollision13AbslHashValueE1H1HRK19FaceVertexCollision", false]], "ipc::facevertexcollision::facevertexcandidate (c++ function)": [[9, "_CPPv4N3ipc19FaceVertexCollision19FaceVertexCandidateEll", false]], "ipc::facevertexcollision::facevertexcollision (c++ function)": [[9, "_CPPv4N3ipc19FaceVertexCollision19FaceVertexCollisionEKlKlKdRKN5Eigen12SparseVectorIdEE", false], [9, "_CPPv4N3ipc19FaceVertexCollision19FaceVertexCollisionERK19FaceVertexCandidate", false]], "ipc::facevertexcollision::known_dtype (c++ function)": [[9, "_CPPv4NK3ipc19FaceVertexCollision11known_dtypeEv", false]], "ipc::facevertexfrictioncollision (c++ class)": [[11, "_CPPv4N3ipc27FaceVertexFrictionCollisionE", false]], "ipc::facevertexfrictioncollision::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc27FaceVertexFrictionCollision21compute_closest_pointERK12VectorMax12d", false]], "ipc::facevertexfrictioncollision::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc27FaceVertexFrictionCollision30compute_closest_point_jacobianERK12VectorMax12d", false]], "ipc::facevertexfrictioncollision::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc27FaceVertexFrictionCollision21compute_tangent_basisERK12VectorMax12d", false]], "ipc::facevertexfrictioncollision::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc27FaceVertexFrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d", false]], "ipc::facevertexfrictioncollision::facevertexcandidate (c++ function)": [[11, "_CPPv4N3ipc27FaceVertexFrictionCollision19FaceVertexCandidateEll", false]], "ipc::facevertexfrictioncollision::facevertexfrictioncollision (c++ function)": [[11, "_CPPv4N3ipc27FaceVertexFrictionCollision27FaceVertexFrictionCollisionERK19FaceVertexCollision", false], [11, "_CPPv4N3ipc27FaceVertexFrictionCollision27FaceVertexFrictionCollisionERK19FaceVertexCollisionRK12VectorMax12dRK16BarrierPotentialKd", false]], "ipc::facevertexfrictioncollision::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc27FaceVertexFrictionCollision17relative_velocityERK12VectorMax12d", false]], "ipc::facevertexfrictioncollision::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc27FaceVertexFrictionCollision24relative_velocity_matrixERK11VectorMax2d", false], [11, "_CPPv4NK3ipc27FaceVertexFrictionCollision24relative_velocity_matrixEv", false]], "ipc::facevertexfrictioncollision::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc27FaceVertexFrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d", false]], "ipc::frictioncollision (c++ class)": [[11, "_CPPv4N3ipc17FrictionCollisionE", false]], "ipc::frictioncollision::closest_point (c++ member)": [[11, "_CPPv4N3ipc17FrictionCollision13closest_pointE", false]], "ipc::frictioncollision::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision21compute_closest_pointERK12VectorMax12d", false]], "ipc::frictioncollision::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision30compute_closest_point_jacobianERK12VectorMax12d", false]], "ipc::frictioncollision::compute_normal_force_magnitude (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision30compute_normal_force_magnitudeERK12VectorMax12dRK16BarrierPotentialKdKd", false]], "ipc::frictioncollision::compute_normal_force_magnitude_gradient (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision39compute_normal_force_magnitude_gradientERK12VectorMax12dRK16BarrierPotentialKdKd", false]], "ipc::frictioncollision::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision21compute_tangent_basisERK12VectorMax12d", false]], "ipc::frictioncollision::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d", false]], "ipc::frictioncollision::dim (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision3dimEv", false]], "ipc::frictioncollision::init (c++ function)": [[11, "_CPPv4N3ipc17FrictionCollision4initERK9CollisionRK12VectorMax12dRK16BarrierPotentialKd", false]], "ipc::frictioncollision::mu (c++ member)": [[11, "_CPPv4N3ipc17FrictionCollision2muE", false]], "ipc::frictioncollision::ndof (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision4ndofEv", false]], "ipc::frictioncollision::normal_force_magnitude (c++ member)": [[11, "_CPPv4N3ipc17FrictionCollision22normal_force_magnitudeE", false]], "ipc::frictioncollision::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision17relative_velocityERK12VectorMax12d", false]], "ipc::frictioncollision::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision24relative_velocity_matrixERK11VectorMax2d", false], [11, "_CPPv4NK3ipc17FrictionCollision24relative_velocity_matrixEv", false]], "ipc::frictioncollision::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc17FrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d", false]], "ipc::frictioncollision::tangent_basis (c++ member)": [[11, "_CPPv4N3ipc17FrictionCollision13tangent_basisE", false]], "ipc::frictioncollision::weight (c++ member)": [[11, "_CPPv4N3ipc17FrictionCollision6weightE", false]], "ipc::frictioncollision::weight_gradient (c++ member)": [[11, "_CPPv4N3ipc17FrictionCollision15weight_gradientE", false]], "ipc::frictioncollision::~frictioncollision (c++ function)": [[11, "_CPPv4N3ipc17FrictionCollisionD0Ev", false]], "ipc::frictioncollisions (c++ class)": [[11, "_CPPv4N3ipc18FrictionCollisionsE", false]], "ipc::frictioncollisions::build (c++ function)": [[11, "_CPPv4N3ipc18FrictionCollisions5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK10CollisionsRK16BarrierPotentialKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", false], [11, "_CPPv4N3ipc18FrictionCollisions5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK10CollisionsRK16BarrierPotentialdd", false]], "ipc::frictioncollisions::clear (c++ function)": [[11, "_CPPv4N3ipc18FrictionCollisions5clearEv", false]], "ipc::frictioncollisions::default_blend_mu (c++ function)": [[11, "_CPPv4N3ipc18FrictionCollisions16default_blend_muEdd", false]], "ipc::frictioncollisions::ee_collisions (c++ member)": [[11, "_CPPv4N3ipc18FrictionCollisions13ee_collisionsE", false]], "ipc::frictioncollisions::empty (c++ function)": [[11, "_CPPv4NK3ipc18FrictionCollisions5emptyEv", false]], "ipc::frictioncollisions::ev_collisions (c++ member)": [[11, "_CPPv4N3ipc18FrictionCollisions13ev_collisionsE", false]], "ipc::frictioncollisions::frictioncollisions (c++ function)": [[11, "_CPPv4N3ipc18FrictionCollisions18FrictionCollisionsEv", false]], "ipc::frictioncollisions::fv_collisions (c++ member)": [[11, "_CPPv4N3ipc18FrictionCollisions13fv_collisionsE", false]], "ipc::frictioncollisions::operator[] (c++ function)": [[11, "_CPPv4N3ipc18FrictionCollisionsixEK6size_t", false], [11, "_CPPv4NK3ipc18FrictionCollisionsixEK6size_t", false]], "ipc::frictioncollisions::size (c++ function)": [[11, "_CPPv4NK3ipc18FrictionCollisions4sizeEv", false]], "ipc::frictioncollisions::value_type (c++ type)": [[11, "_CPPv4N3ipc18FrictionCollisions10value_typeE", false]], "ipc::frictioncollisions::vv_collisions (c++ member)": [[11, "_CPPv4N3ipc18FrictionCollisions13vv_collisionsE", false]], "ipc::frictionpotential (c++ class)": [[13, "_CPPv4N3ipc17FrictionPotentialE", false]], "ipc::frictionpotential::diffwrt (c++ enum)": [[13, "_CPPv4N3ipc17FrictionPotential7DiffWRTE", false]], "ipc::frictionpotential::diffwrt::lagged_displacements (c++ enumerator)": [[13, "_CPPv4N3ipc17FrictionPotential7DiffWRT20LAGGED_DISPLACEMENTSE", false]], "ipc::frictionpotential::diffwrt::rest_positions (c++ enumerator)": [[13, "_CPPv4N3ipc17FrictionPotential7DiffWRT14REST_POSITIONSE", false]], "ipc::frictionpotential::diffwrt::velocities (c++ enumerator)": [[13, "_CPPv4N3ipc17FrictionPotential7DiffWRT10VELOCITIESE", false]], "ipc::frictionpotential::epsv (c++ function)": [[13, "_CPPv4NK3ipc17FrictionPotential4epsvEv", false]], "ipc::frictionpotential::force (c++ function)": [[13, "_CPPv4NK3ipc17FrictionPotential5forceERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdKdKb", false], [13, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb", false]], "ipc::frictionpotential::force_jacobian (c++ function)": [[13, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdK7DiffWRTKd", false], [13, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd", false]], "ipc::frictionpotential::frictionpotential (c++ function)": [[13, "_CPPv4N3ipc17FrictionPotential17FrictionPotentialEKd", false]], "ipc::frictionpotential::gradient (c++ function)": [[13, "_CPPv4NK3ipc17FrictionPotential8gradientERK10TCollisionRK12VectorMax12d", false], [13, "_CPPv4NK3ipc17FrictionPotential8gradientERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE", false], [13, "_CPPv4NK3ipc17FrictionPotential8gradientERK17FrictionCollisionRK12VectorMax12d", false]], "ipc::frictionpotential::hessian (c++ function)": [[13, "_CPPv4NK3ipc17FrictionPotential7hessianERK10TCollisionRK12VectorMax12dK19PSDProjectionMethod", false], [13, "_CPPv4NK3ipc17FrictionPotential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod", false], [13, "_CPPv4NK3ipc17FrictionPotential7hessianERK17FrictionCollisionRK12VectorMax12dK19PSDProjectionMethod", false]], "ipc::frictionpotential::m_epsv (c++ member)": [[13, "_CPPv4N3ipc17FrictionPotential6m_epsvE", false]], "ipc::frictionpotential::operator() (c++ function)": [[13, "_CPPv4NK3ipc17FrictionPotentialclERK17FrictionCollisionRK12VectorMax12d", false]], "ipc::frictionpotential::set_epsv (c++ function)": [[13, "_CPPv4N3ipc17FrictionPotential8set_epsvEKd", false]], "ipc::frictionpotential::super (c++ type)": [[13, "_CPPv4N3ipc17FrictionPotential5SuperE", false]], "ipc::has_intersections (c++ function)": [[12, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod", false]], "ipc::hashgrid (c++ class)": [[5, "_CPPv4N3ipc8HashGridE", false]], "ipc::hashgrid::build (c++ function)": [[5, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", false], [5, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", false]], "ipc::hashgrid::cell_size (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid9cell_sizeEv", false]], "ipc::hashgrid::clear (c++ function)": [[5, "_CPPv4N3ipc8HashGrid5clearEv", false]], "ipc::hashgrid::detect_candidates (c++ function)": [[5, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", false], [5, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", false]], "ipc::hashgrid::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", false]], "ipc::hashgrid::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", false]], "ipc::hashgrid::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", false]], "ipc::hashgrid::detect_face_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE", false]], "ipc::hashgrid::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", false]], "ipc::hashgrid::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", false]], "ipc::hashgrid::domain_max (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid10domain_maxEv", false]], "ipc::hashgrid::domain_min (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid10domain_minEv", false]], "ipc::hashgrid::edge_items (c++ member)": [[5, "_CPPv4N3ipc8HashGrid10edge_itemsE", false]], "ipc::hashgrid::face_items (c++ member)": [[5, "_CPPv4N3ipc8HashGrid10face_itemsE", false]], "ipc::hashgrid::grid_size (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid9grid_sizeEv", false]], "ipc::hashgrid::hash (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid4hashEiii", false]], "ipc::hashgrid::hashgrid (c++ function)": [[5, "_CPPv4N3ipc8HashGrid8HashGridEv", false]], "ipc::hashgrid::insert_box (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid10insert_boxERK4AABBKlRNSt6vectorI8HashItemEE", false]], "ipc::hashgrid::insert_boxes (c++ function)": [[5, "_CPPv4N3ipc8HashGrid12insert_boxesEv", false], [5, "_CPPv4NK3ipc8HashGrid12insert_boxesERKNSt6vectorI4AABBEERNSt6vectorI8HashItemEE", false]], "ipc::hashgrid::m_cell_size (c++ member)": [[5, "_CPPv4N3ipc8HashGrid11m_cell_sizeE", false]], "ipc::hashgrid::m_domain_max (c++ member)": [[5, "_CPPv4N3ipc8HashGrid12m_domain_maxE", false]], "ipc::hashgrid::m_domain_min (c++ member)": [[5, "_CPPv4N3ipc8HashGrid12m_domain_minE", false]], "ipc::hashgrid::m_grid_size (c++ member)": [[5, "_CPPv4N3ipc8HashGrid11m_grid_sizeE", false]], "ipc::hashgrid::resize (c++ function)": [[5, "_CPPv4N3ipc8HashGrid6resizeERK10ArrayMax3dRK10ArrayMax3dd", false]], "ipc::hashgrid::vertex_items (c++ member)": [[5, "_CPPv4N3ipc8HashGrid12vertex_itemsE", false]], "ipc::initial_barrier_stiffness (c++ function)": [[4, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd", false]], "ipc::intervalnonlineartrajectory (c++ class)": [[7, "_CPPv4N3ipc27IntervalNonlinearTrajectoryE", false]], "ipc::intervalnonlineartrajectory::max_distance_from_linear (c++ function)": [[7, "_CPPv4NK3ipc27IntervalNonlinearTrajectory24max_distance_from_linearEKdKd", false]], "ipc::intervalnonlineartrajectory::operator() (c++ function)": [[7, "_CPPv4NK3ipc27IntervalNonlinearTrajectoryclERKN5filib8IntervalE", false]], "ipc::intervalnonlineartrajectory::~intervalnonlineartrajectory (c++ function)": [[7, "_CPPv4N3ipc27IntervalNonlinearTrajectoryD0Ev", false]], "ipc::is_edge_intersecting_triangle (c++ function)": [[12, "_CPPv4N3ipc29is_edge_intersecting_triangleERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dE", false]], "ipc::is_step_collision_free (c++ function)": [[7, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD", false]], "ipc::line_line_distance (c++ function)": [[10, "_CPPv4N3ipc18line_line_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::line_line_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc27line_line_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::line_line_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc26line_line_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::logger (c++ function)": [[14, "_CPPv4N3ipc6loggerEv", false]], "ipc::nonlineartrajectory (c++ class)": [[7, "_CPPv4N3ipc19NonlinearTrajectoryE", false]], "ipc::nonlineartrajectory::max_distance_from_linear (c++ function)": [[7, "_CPPv4NK3ipc19NonlinearTrajectory24max_distance_from_linearEKdKd", false]], "ipc::nonlineartrajectory::operator() (c++ function)": [[7, "_CPPv4NK3ipc19NonlinearTrajectoryclEKd", false]], "ipc::nonlineartrajectory::~nonlineartrajectory (c++ function)": [[7, "_CPPv4N3ipc19NonlinearTrajectoryD0Ev", false]], "ipc::planevertexcollision (c++ class)": [[9, "_CPPv4N3ipc20PlaneVertexCollisionE", false]], "ipc::planevertexcollision::compute_distance (c++ function)": [[9, "_CPPv4NK3ipc20PlaneVertexCollision16compute_distanceERK12VectorMax12d", false]], "ipc::planevertexcollision::compute_distance_gradient (c++ function)": [[9, "_CPPv4NK3ipc20PlaneVertexCollision25compute_distance_gradientERK12VectorMax12d", false]], "ipc::planevertexcollision::compute_distance_hessian (c++ function)": [[9, "_CPPv4NK3ipc20PlaneVertexCollision24compute_distance_hessianERK12VectorMax12d", false]], "ipc::planevertexcollision::num_vertices (c++ function)": [[9, "_CPPv4NK3ipc20PlaneVertexCollision12num_verticesEv", false]], "ipc::planevertexcollision::plane_normal (c++ member)": [[9, "_CPPv4N3ipc20PlaneVertexCollision12plane_normalE", false]], "ipc::planevertexcollision::plane_origin (c++ member)": [[9, "_CPPv4N3ipc20PlaneVertexCollision12plane_originE", false]], "ipc::planevertexcollision::planevertexcollision (c++ function)": [[9, "_CPPv4N3ipc20PlaneVertexCollision20PlaneVertexCollisionERK11VectorMax3dRK11VectorMax3dKl", false]], "ipc::planevertexcollision::vertex_id (c++ member)": [[9, "_CPPv4N3ipc20PlaneVertexCollision9vertex_idE", false]], "ipc::planevertexcollision::vertex_ids (c++ function)": [[9, "_CPPv4NK3ipc20PlaneVertexCollision10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::point_edge_distance (c++ function)": [[10, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType", false]], "ipc::point_edge_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType", false]], "ipc::point_edge_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType", false]], "ipc::point_edge_distance_type (c++ function)": [[10, "_CPPv4N3ipc24point_edge_distance_typeERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_edge_nonlinear_ccd (c++ function)": [[7, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd", false]], "ipc::point_edge_relative_velocity (c++ function)": [[11, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd", false]], "ipc::point_edge_relative_velocity_matrix (c++ function)": [[11, "_CPPv4N3ipc35point_edge_relative_velocity_matrixEKiKd", false]], "ipc::point_edge_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4N3ipc44point_edge_relative_velocity_matrix_jacobianEKiKd", false]], "ipc::point_edge_tangent_basis (c++ function)": [[11, "_CPPv4N3ipc24point_edge_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_edge_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4N3ipc33point_edge_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_line_distance (c++ function)": [[10, "_CPPv4N3ipc19point_line_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_line_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc28point_line_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_line_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc27point_line_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_plane_distance (c++ function)": [[10, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false], [10, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::point_plane_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false], [10, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::point_plane_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false], [10, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::point_point_distance (c++ function)": [[10, "_CPPv4N3ipc20point_point_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_point_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc29point_point_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_point_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc28point_point_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_point_nonlinear_ccd (c++ function)": [[7, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd", false]], "ipc::point_point_relative_velocity (c++ function)": [[11, "_CPPv4N3ipc29point_point_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_point_relative_velocity_matrix (c++ function)": [[11, "_CPPv4N3ipc36point_point_relative_velocity_matrixEKi", false]], "ipc::point_point_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4N3ipc45point_point_relative_velocity_matrix_jacobianEKi", false]], "ipc::point_point_tangent_basis (c++ function)": [[11, "_CPPv4N3ipc25point_point_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_point_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4N3ipc34point_point_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", false]], "ipc::point_triangle_distance (c++ function)": [[10, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType", false]], "ipc::point_triangle_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType", false]], "ipc::point_triangle_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType", false]], "ipc::point_triangle_distance_type (c++ function)": [[10, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::point_triangle_nonlinear_ccd (c++ function)": [[7, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd", false]], "ipc::point_triangle_relative_velocity (c++ function)": [[11, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE", false]], "ipc::point_triangle_relative_velocity_matrix (c++ function)": [[11, "_CPPv4N3ipc39point_triangle_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", false]], "ipc::point_triangle_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4N3ipc48point_triangle_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", false]], "ipc::point_triangle_tangent_basis (c++ function)": [[11, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::point_triangle_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4N3ipc37point_triangle_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", false]], "ipc::pointedgedistancetype (c++ enum)": [[10, "_CPPv4N3ipc21PointEdgeDistanceTypeE", false]], "ipc::pointedgedistancetype::auto (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType4AUTOE", false]], "ipc::pointedgedistancetype::p_e (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType3P_EE", false]], "ipc::pointedgedistancetype::p_e0 (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType4P_E0E", false]], "ipc::pointedgedistancetype::p_e1 (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType4P_E1E", false]], "ipc::pointtriangledistancetype (c++ enum)": [[10, "_CPPv4N3ipc25PointTriangleDistanceTypeE", false]], "ipc::pointtriangledistancetype::auto (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4AUTOE", false]], "ipc::pointtriangledistancetype::p_e0 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_E0E", false]], "ipc::pointtriangledistancetype::p_e1 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_E1E", false]], "ipc::pointtriangledistancetype::p_e2 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_E2E", false]], "ipc::pointtriangledistancetype::p_t (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType3P_TE", false]], "ipc::pointtriangledistancetype::p_t0 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_T0E", false]], "ipc::pointtriangledistancetype::p_t1 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_T1E", false]], "ipc::pointtriangledistancetype::p_t2 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_T2E", false]], "ipc::potential (c++ class)": [[13, "_CPPv4I0EN3ipc9PotentialE", false]], "ipc::potential::gradient (c++ function)": [[13, "_CPPv4NK3ipc9Potential8gradientERK10TCollisionRK12VectorMax12d", false], [13, "_CPPv4NK3ipc9Potential8gradientERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE", false]], "ipc::potential::hessian (c++ function)": [[13, "_CPPv4NK3ipc9Potential7hessianERK10TCollisionRK12VectorMax12dK19PSDProjectionMethod", false], [13, "_CPPv4NK3ipc9Potential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod", false]], "ipc::potential::operator() (c++ function)": [[13, "_CPPv4NK3ipc9PotentialclERK10TCollisionRK12VectorMax12d", false], [13, "_CPPv4NK3ipc9PotentialclERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE", false]], "ipc::potential::potential (c++ function)": [[13, "_CPPv4N3ipc9Potential9PotentialEv", false]], "ipc::potential::tcollision (c++ type)": [[13, "_CPPv4N3ipc9Potential10TCollisionE", false]], "ipc::potential::~potential (c++ function)": [[13, "_CPPv4N3ipc9PotentialD0Ev", false]], "ipc::project_to_pd (c++ function)": [[14, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd", false]], "ipc::project_to_psd (c++ function)": [[14, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEK19PSDProjectionMethod", false]], "ipc::psdprojectionmethod (c++ enum)": [[14, "_CPPv4N3ipc19PSDProjectionMethodE", false]], "ipc::psdprojectionmethod::abs (c++ enumerator)": [[14, "_CPPv4N3ipc19PSDProjectionMethod3ABSE", false]], "ipc::psdprojectionmethod::clamp (c++ enumerator)": [[14, "_CPPv4N3ipc19PSDProjectionMethod5CLAMPE", false]], "ipc::psdprojectionmethod::none (c++ enumerator)": [[14, "_CPPv4N3ipc19PSDProjectionMethod4NONEE", false]], "ipc::set_logger (c++ function)": [[14, "_CPPv4N3ipc10set_loggerENSt10shared_ptrIN6spdlog6loggerEEE", false]], "ipc::spatialhash (c++ class)": [[5, "_CPPv4N3ipc11SpatialHashE", false]], "ipc::spatialhash::build (c++ function)": [[5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", false], [5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", false], [5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", false], [5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", false]], "ipc::spatialhash::built_in_radius (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash15built_in_radiusE", false]], "ipc::spatialhash::clear (c++ function)": [[5, "_CPPv4N3ipc11SpatialHash5clearEv", false]], "ipc::spatialhash::detect_candidates (c++ function)": [[5, "_CPPv4I0ENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE", false], [5, "_CPPv4I0_b_bENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE", false]], "ipc::spatialhash::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", false]], "ipc::spatialhash::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", false]], "ipc::spatialhash::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", false]], "ipc::spatialhash::detect_face_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE", false]], "ipc::spatialhash::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", false]], "ipc::spatialhash::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", false]], "ipc::spatialhash::dim (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash3dimE", false]], "ipc::spatialhash::edge_start_ind (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash14edge_start_indE", false]], "ipc::spatialhash::edge_to_voxels (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash14edge_to_voxelsE", false]], "ipc::spatialhash::face_to_voxels (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash14face_to_voxelsE", false]], "ipc::spatialhash::is_edge_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash13is_edge_indexEi", false]], "ipc::spatialhash::is_triangle_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash17is_triangle_indexEi", false]], "ipc::spatialhash::is_vertex_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash15is_vertex_indexEi", false]], "ipc::spatialhash::left_bottom_corner (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash18left_bottom_cornerE", false]], "ipc::spatialhash::locate_box_voxel_axis_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash27locate_box_voxel_axis_indexE10ArrayMax3d10ArrayMax3dR10ArrayMax3iR10ArrayMax3iKd", false]], "ipc::spatialhash::locate_voxel_axis_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash23locate_voxel_axis_indexERK11VectorMax3d", false]], "ipc::spatialhash::locate_voxel_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash18locate_voxel_indexERK11VectorMax3d", false]], "ipc::spatialhash::one_div_voxelsize (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash17one_div_voxelSizeE", false]], "ipc::spatialhash::point_to_voxels (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash15point_to_voxelsE", false]], "ipc::spatialhash::query_edge_for_edges (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash20query_edge_for_edgesEiR13unordered_setIiE", false]], "ipc::spatialhash::query_edge_for_triangles (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash24query_edge_for_trianglesEiR13unordered_setIiE", false]], "ipc::spatialhash::query_point_for_edges (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash21query_point_for_edgesEiR13unordered_setIiE", false]], "ipc::spatialhash::query_point_for_points (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash22query_point_for_pointsEiR13unordered_setIiE", false]], "ipc::spatialhash::query_point_for_triangles (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash25query_point_for_trianglesEiR13unordered_setIiE", false]], "ipc::spatialhash::query_triangle_for_triangles (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash28query_triangle_for_trianglesEiR13unordered_setIiE", false]], "ipc::spatialhash::right_top_corner (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash16right_top_cornerE", false]], "ipc::spatialhash::spatialhash (c++ function)": [[5, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", false], [5, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", false], [5, "_CPPv4N3ipc11SpatialHash11SpatialHashEv", false]], "ipc::spatialhash::to_edge_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash13to_edge_indexEi", false]], "ipc::spatialhash::to_triangle_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash17to_triangle_indexEi", false]], "ipc::spatialhash::tri_start_ind (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash13tri_start_indE", false]], "ipc::spatialhash::voxel_axis_index_to_voxel_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash31voxel_axis_index_to_voxel_indexERK10ArrayMax3i", false], [5, "_CPPv4NK3ipc11SpatialHash31voxel_axis_index_to_voxel_indexEiii", false]], "ipc::spatialhash::voxel_count (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash11voxel_countE", false]], "ipc::spatialhash::voxel_count_0x1 (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash15voxel_count_0x1E", false]], "ipc::spatialhash::voxel_to_primitives (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash19voxel_to_primitivesE", false]], "ipc::sweepandprune (c++ class)": [[5, "_CPPv4N3ipc13SweepAndPruneE", false]], "ipc::sweepandprune::build (c++ function)": [[5, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", false], [5, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", false]], "ipc::sweepandprune::can_edge_face_collide (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune21can_edge_face_collideE6size_t6size_t", false]], "ipc::sweepandprune::can_edge_vertex_collide (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune23can_edge_vertex_collideE6size_t6size_t", false]], "ipc::sweepandprune::can_edges_collide (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune17can_edges_collideE6size_t6size_t", false]], "ipc::sweepandprune::can_face_vertex_collide (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune23can_face_vertex_collideE6size_t6size_t", false]], "ipc::sweepandprune::can_faces_collide (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune17can_faces_collideE6size_t6size_t", false]], "ipc::sweepandprune::clear (c++ function)": [[5, "_CPPv4N3ipc13SweepAndPrune5clearEv", false]], "ipc::sweepandprune::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", false]], "ipc::sweepandprune::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", false]], "ipc::sweepandprune::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", false]], "ipc::sweepandprune::detect_face_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE", false]], "ipc::sweepandprune::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", false]], "ipc::sweepandprune::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc13SweepAndPrune31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", false]], "ipc::sweepandprune::edge_boxes (c++ member)": [[5, "_CPPv4N3ipc13SweepAndPrune10edge_boxesE", false]], "ipc::sweepandprune::ee_sort_axis (c++ member)": [[5, "_CPPv4N3ipc13SweepAndPrune12ee_sort_axisE", false]], "ipc::sweepandprune::ef_sort_axis (c++ member)": [[5, "_CPPv4N3ipc13SweepAndPrune12ef_sort_axisE", false]], "ipc::sweepandprune::ev_sort_axis (c++ member)": [[5, "_CPPv4N3ipc13SweepAndPrune12ev_sort_axisE", false]], "ipc::sweepandprune::face_boxes (c++ member)": [[5, "_CPPv4N3ipc13SweepAndPrune10face_boxesE", false]], "ipc::sweepandprune::ff_sort_axis (c++ member)": [[5, "_CPPv4N3ipc13SweepAndPrune12ff_sort_axisE", false]], "ipc::sweepandprune::fv_sort_axis (c++ member)": [[5, "_CPPv4N3ipc13SweepAndPrune12fv_sort_axisE", false]], "ipc::sweepandprune::sweepandprune (c++ function)": [[5, "_CPPv4N3ipc13SweepAndPrune13SweepAndPruneEv", false]], "ipc::sweepandprune::vertex_boxes (c++ member)": [[5, "_CPPv4N3ipc13SweepAndPrune12vertex_boxesE", false]], "ipc::sweepandprune::vv_sort_axis (c++ member)": [[5, "_CPPv4N3ipc13SweepAndPrune12vv_sort_axisE", false]], "ipc::update_barrier_stiffness (c++ function)": [[4, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd", false]], "ipc::vertexvertexcandidate (c++ class)": [[6, "_CPPv4N3ipc21VertexVertexCandidateE", false]], "ipc::vertexvertexcandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate", false]], "ipc::vertexvertexcandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD", false]], "ipc::vertexvertexcandidate::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate16compute_distanceERK12VectorMax12d", false]], "ipc::vertexvertexcandidate::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate25compute_distance_gradientERK12VectorMax12d", false]], "ipc::vertexvertexcandidate::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate24compute_distance_hessianERK12VectorMax12d", false]], "ipc::vertexvertexcandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate12num_verticesEv", false]], "ipc::vertexvertexcandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidateneERK21VertexVertexCandidate", false]], "ipc::vertexvertexcandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidateltERK21VertexVertexCandidate", false]], "ipc::vertexvertexcandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidateeqERK21VertexVertexCandidate", false]], "ipc::vertexvertexcandidate::vertex0_id (c++ member)": [[6, "_CPPv4N3ipc21VertexVertexCandidate10vertex0_idE", false]], "ipc::vertexvertexcandidate::vertex1_id (c++ member)": [[6, "_CPPv4N3ipc21VertexVertexCandidate10vertex1_idE", false]], "ipc::vertexvertexcandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", false]], "ipc::vertexvertexcandidate::vertexvertexcandidate (c++ function)": [[6, "_CPPv4N3ipc21VertexVertexCandidate21VertexVertexCandidateEll", false]], "ipc::vertexvertexcollision (c++ class)": [[9, "_CPPv4N3ipc21VertexVertexCollisionE", false]], "ipc::vertexvertexcollision::abslhashvalue (c++ function)": [[9, "_CPPv4I0EN3ipc21VertexVertexCollision13AbslHashValueE1H1HRK21VertexVertexCollision", false]], "ipc::vertexvertexcollision::vertexvertexcandidate (c++ function)": [[9, "_CPPv4N3ipc21VertexVertexCollision21VertexVertexCandidateEll", false]], "ipc::vertexvertexcollision::vertexvertexcollision (c++ function)": [[9, "_CPPv4N3ipc21VertexVertexCollision21VertexVertexCollisionEKlKlKdRKN5Eigen12SparseVectorIdEE", false], [9, "_CPPv4N3ipc21VertexVertexCollision21VertexVertexCollisionERK21VertexVertexCandidate", false]], "ipc::vertexvertexfrictioncollision (c++ class)": [[11, "_CPPv4N3ipc29VertexVertexFrictionCollisionE", false]], "ipc::vertexvertexfrictioncollision::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc29VertexVertexFrictionCollision21compute_closest_pointERK12VectorMax12d", false]], "ipc::vertexvertexfrictioncollision::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc29VertexVertexFrictionCollision30compute_closest_point_jacobianERK12VectorMax12d", false]], "ipc::vertexvertexfrictioncollision::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc29VertexVertexFrictionCollision21compute_tangent_basisERK12VectorMax12d", false]], "ipc::vertexvertexfrictioncollision::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc29VertexVertexFrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d", false]], "ipc::vertexvertexfrictioncollision::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc29VertexVertexFrictionCollision17relative_velocityERK12VectorMax12d", false]], "ipc::vertexvertexfrictioncollision::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc29VertexVertexFrictionCollision24relative_velocity_matrixERK11VectorMax2d", false], [11, "_CPPv4NK3ipc29VertexVertexFrictionCollision24relative_velocity_matrixEv", false]], "ipc::vertexvertexfrictioncollision::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc29VertexVertexFrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d", false]], "ipc::vertexvertexfrictioncollision::vertexvertexcandidate (c++ function)": [[11, "_CPPv4N3ipc29VertexVertexFrictionCollision21VertexVertexCandidateEll", false]], "ipc::vertexvertexfrictioncollision::vertexvertexfrictioncollision (c++ function)": [[11, "_CPPv4N3ipc29VertexVertexFrictionCollision29VertexVertexFrictionCollisionERK21VertexVertexCollision", false], [11, "_CPPv4N3ipc29VertexVertexFrictionCollision29VertexVertexFrictionCollisionERK21VertexVertexCollisionRK12VectorMax12dRK16BarrierPotentialKd", false]], "is_edge_edge() (ipctk.collisions method)": [[23, "ipctk.Collisions.is_edge_edge", false]], "is_edge_index() (ipctk.spatialhash method)": [[19, "ipctk.SpatialHash.is_edge_index", false]], "is_edge_intersecting_triangle() (in module ipctk)": [[26, "ipctk.is_edge_intersecting_triangle", false]], "is_edge_vertex() (ipctk.collisions method)": [[23, "ipctk.Collisions.is_edge_vertex", false]], "is_face_vertex() (ipctk.collisions method)": [[23, "ipctk.Collisions.is_face_vertex", false]], "is_mollified() (ipctk.collision method)": [[23, "ipctk.Collision.is_mollified", false]], "is_plane_vertex() (ipctk.collisions method)": [[23, "ipctk.Collisions.is_plane_vertex", false]], "is_step_collision_free() (in module ipctk)": [[21, "ipctk.is_step_collision_free", false]], "is_step_collision_free() (ipctk.candidates method)": [[20, "ipctk.Candidates.is_step_collision_free", false]], "is_triangle_index() (ipctk.spatialhash method)": [[19, "ipctk.SpatialHash.is_triangle_index", false]], "is_vertex_index() (ipctk.spatialhash method)": [[19, "ipctk.SpatialHash.is_vertex_index", false]], "is_vertex_on_boundary() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.is_vertex_on_boundary", false]], "is_vertex_vertex() (ipctk.collisions method)": [[23, "ipctk.Collisions.is_vertex_vertex", false]], "known_dtype() (ipctk.edgeedgecandidate method)": [[20, "ipctk.EdgeEdgeCandidate.known_dtype", false]], "known_dtype() (ipctk.edgevertexcandidate method)": [[20, "ipctk.EdgeVertexCandidate.known_dtype", false]], "known_dtype() (ipctk.facevertexcandidate method)": [[20, "ipctk.FaceVertexCandidate.known_dtype", false]], "lagged_displacements (ipctk.frictionpotential attribute)": [[27, "ipctk.FrictionPotential.LAGGED_DISPLACEMENTS", false]], "lagged_displacements (ipctk.frictionpotential.diffwrt attribute)": [[27, "ipctk.FrictionPotential.DiffWRT.LAGGED_DISPLACEMENTS", false]], "left_bottom_corner (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.left_bottom_corner", false]], "line_line_distance() (in module ipctk)": [[24, "ipctk.line_line_distance", false]], "line_line_distance_gradient() (in module ipctk)": [[24, "ipctk.line_line_distance_gradient", false]], "line_line_distance_hessian() (in module ipctk)": [[24, "ipctk.line_line_distance_hessian", false]], "loggerlevel (class in ipctk)": [[28, "ipctk.LoggerLevel", false]], "make_broad_phase() (ipctk.broadphase static method)": [[19, "ipctk.BroadPhase.make_broad_phase", false]], "map_displacements() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.map_displacements", false]], "max (ipctk.aabb property)": [[19, "ipctk.AABB.max", false]], "max_distance_from_linear() (ipctk.intervalnonlineartrajectory method)": [[21, "ipctk.IntervalNonlinearTrajectory.max_distance_from_linear", false]], "max_distance_from_linear() (ipctk.nonlineartrajectory method)": [[21, "ipctk.NonlinearTrajectory.max_distance_from_linear", false]], "min (ipctk.aabb property)": [[19, "ipctk.AABB.min", false]], "mollifier() (ipctk.collision method)": [[23, "ipctk.Collision.mollifier", false]], "mollifier_gradient() (ipctk.collision method)": [[23, "ipctk.Collision.mollifier_gradient", false]], "mollifier_gradient_jacobian_wrt_x() (ipctk.collision method)": [[23, "ipctk.Collision.mollifier_gradient_jacobian_wrt_x", false]], "mollifier_gradient_wrt_x() (ipctk.collision method)": [[23, "ipctk.Collision.mollifier_gradient_wrt_x", false]], "mollifier_hessian() (ipctk.collision method)": [[23, "ipctk.Collision.mollifier_hessian", false]], "mollifier_threshold() (ipctk.collision method)": [[23, "ipctk.Collision.mollifier_threshold", false]], "mu (ipctk.frictioncollision property)": [[25, "ipctk.FrictionCollision.mu", false]], "name (ipctk.broadphasemethod property)": [[19, "ipctk.BroadPhaseMethod.name", false]], "name (ipctk.edgeedgedistancetype property)": [[24, "ipctk.EdgeEdgeDistanceType.name", false]], "name (ipctk.frictionpotential.diffwrt property)": [[27, "ipctk.FrictionPotential.DiffWRT.name", false]], "name (ipctk.loggerlevel property)": [[28, "ipctk.LoggerLevel.name", false]], "name (ipctk.pointedgedistancetype property)": [[24, "ipctk.PointEdgeDistanceType.name", false]], "name (ipctk.pointtriangledistancetype property)": [[24, "ipctk.PointTriangleDistanceType.name", false]], "name (ipctk.psdprojectionmethod property)": [[28, "ipctk.PSDProjectionMethod.name", false]], "ndof (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.ndof", false]], "ndof() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.ndof", false]], "none (ipctk.psdprojectionmethod attribute)": [[28, "ipctk.PSDProjectionMethod.NONE", false]], "nonlineartrajectory (class in ipctk)": [[21, "ipctk.NonlinearTrajectory", false]], "normal_force_magnitude (ipctk.frictioncollision property)": [[25, "ipctk.FrictionCollision.normal_force_magnitude", false]], "num_codim_edges (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.num_codim_edges", false]], "num_codim_vertices (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.num_codim_vertices", false]], "num_edges (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.num_edges", false]], "num_faces (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.num_faces", false]], "num_vertices (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.num_vertices", false]], "off (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.off", false]], "one_div_voxelsize (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.one_div_voxelSize", false]], "p_e (ipctk.pointedgedistancetype attribute)": [[24, "ipctk.PointEdgeDistanceType.P_E", false]], "p_e0 (ipctk.pointedgedistancetype attribute)": [[24, "ipctk.PointEdgeDistanceType.P_E0", false]], "p_e0 (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.P_E0", false]], "p_e1 (ipctk.pointedgedistancetype attribute)": [[24, "ipctk.PointEdgeDistanceType.P_E1", false]], "p_e1 (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.P_E1", false]], "p_e2 (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.P_E2", false]], "p_t (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.P_T", false]], "p_t0 (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.P_T0", false]], "p_t1 (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.P_T1", false]], "p_t2 (ipctk.pointtriangledistancetype attribute)": [[24, "ipctk.PointTriangleDistanceType.P_T2", false]], "plane_normal (ipctk.planevertexcollision property)": [[23, "ipctk.PlaneVertexCollision.plane_normal", false]], "plane_origin (ipctk.planevertexcollision property)": [[23, "ipctk.PlaneVertexCollision.plane_origin", false]], "planevertexcollision (class in ipctk)": [[23, "ipctk.PlaneVertexCollision", false]], "point_edge_distance() (in module ipctk)": [[24, "ipctk.point_edge_distance", false]], "point_edge_distance_gradient() (in module ipctk)": [[24, "ipctk.point_edge_distance_gradient", false]], "point_edge_distance_hessian() (in module ipctk)": [[24, "ipctk.point_edge_distance_hessian", false]], "point_edge_distance_type() (in module ipctk)": [[24, "ipctk.point_edge_distance_type", false]], "point_edge_nonlinear_ccd() (in module ipctk)": [[21, "ipctk.point_edge_nonlinear_ccd", false]], "point_edge_relative_velocity() (in module ipctk)": [[25, "ipctk.point_edge_relative_velocity", false]], "point_edge_relative_velocity_matrix() (in module ipctk)": [[25, "ipctk.point_edge_relative_velocity_matrix", false]], "point_edge_relative_velocity_matrix_jacobian() (in module ipctk)": [[25, "ipctk.point_edge_relative_velocity_matrix_jacobian", false]], "point_edge_tangent_basis() (in module ipctk)": [[25, "ipctk.point_edge_tangent_basis", false]], "point_edge_tangent_basis_jacobian() (in module ipctk)": [[25, "ipctk.point_edge_tangent_basis_jacobian", false]], "point_line_distance() (in module ipctk)": [[24, "ipctk.point_line_distance", false]], "point_line_distance_gradient() (in module ipctk)": [[24, "ipctk.point_line_distance_gradient", false]], "point_line_distance_hessian() (in module ipctk)": [[24, "ipctk.point_line_distance_hessian", false]], "point_plane_distance() (in module ipctk)": [[24, "ipctk.point_plane_distance", false]], "point_plane_distance_gradient() (in module ipctk)": [[24, "ipctk.point_plane_distance_gradient", false]], "point_plane_distance_hessian() (in module ipctk)": [[24, "ipctk.point_plane_distance_hessian", false]], "point_point_distance() (in module ipctk)": [[24, "ipctk.point_point_distance", false]], "point_point_distance_gradient() (in module ipctk)": [[24, "ipctk.point_point_distance_gradient", false]], "point_point_distance_hessian() (in module ipctk)": [[24, "ipctk.point_point_distance_hessian", false]], "point_point_nonlinear_ccd() (in module ipctk)": [[21, "ipctk.point_point_nonlinear_ccd", false]], "point_point_relative_velocity() (in module ipctk)": [[25, "ipctk.point_point_relative_velocity", false]], "point_point_relative_velocity_matrix() (in module ipctk)": [[25, "ipctk.point_point_relative_velocity_matrix", false]], "point_point_relative_velocity_matrix_jacobian() (in module ipctk)": [[25, "ipctk.point_point_relative_velocity_matrix_jacobian", false]], "point_point_tangent_basis() (in module ipctk)": [[25, "ipctk.point_point_tangent_basis", false]], "point_point_tangent_basis_jacobian() (in module ipctk)": [[25, "ipctk.point_point_tangent_basis_jacobian", false]], "point_to_voxels (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.point_to_voxels", false]], "point_triangle_ccd() (in module ipctk.tight_inclusion)": [[21, "ipctk.tight_inclusion.point_triangle_ccd", false]], "point_triangle_distance() (in module ipctk)": [[24, "ipctk.point_triangle_distance", false]], "point_triangle_distance_gradient() (in module ipctk)": [[24, "ipctk.point_triangle_distance_gradient", false]], "point_triangle_distance_hessian() (in module ipctk)": [[24, "ipctk.point_triangle_distance_hessian", false]], "point_triangle_distance_type() (in module ipctk)": [[24, "ipctk.point_triangle_distance_type", false]], "point_triangle_nonlinear_ccd() (in module ipctk)": [[21, "ipctk.point_triangle_nonlinear_ccd", false]], "point_triangle_relative_velocity() (in module ipctk)": [[25, "ipctk.point_triangle_relative_velocity", false]], "point_triangle_relative_velocity_matrix() (in module ipctk)": [[25, "ipctk.point_triangle_relative_velocity_matrix", false]], "point_triangle_relative_velocity_matrix_jacobian() (in module ipctk)": [[25, "ipctk.point_triangle_relative_velocity_matrix_jacobian", false]], "point_triangle_tangent_basis() (in module ipctk)": [[25, "ipctk.point_triangle_tangent_basis", false]], "point_triangle_tangent_basis_jacobian() (in module ipctk)": [[25, "ipctk.point_triangle_tangent_basis_jacobian", false]], "pointedgedistancetype (class in ipctk)": [[24, "ipctk.PointEdgeDistanceType", false]], "pointtriangledistancetype (class in ipctk)": [[24, "ipctk.PointTriangleDistanceType", false]], "print_ccd_query() (ipctk.continuouscollisioncandidate method)": [[20, "ipctk.ContinuousCollisionCandidate.print_ccd_query", false]], "project_to_pd() (in module ipctk)": [[28, "ipctk.project_to_pd", false]], "project_to_psd() (in module ipctk)": [[28, "ipctk.project_to_psd", false]], "psdprojectionmethod (class in ipctk)": [[28, "ipctk.PSDProjectionMethod", false]], "pv_collisions (ipctk.collisions property)": [[23, "ipctk.Collisions.pv_collisions", false]], "relative_velocity() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.relative_velocity", false]], "relative_velocity_matrix() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.relative_velocity_matrix", false]], "relative_velocity_matrix_jacobian() (ipctk.frictioncollision method)": [[25, "ipctk.FrictionCollision.relative_velocity_matrix_jacobian", false]], "rest_positions (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.rest_positions", false]], "rest_positions (ipctk.frictionpotential attribute)": [[27, "ipctk.FrictionPotential.REST_POSITIONS", false]], "rest_positions (ipctk.frictionpotential.diffwrt attribute)": [[27, "ipctk.FrictionPotential.DiffWRT.REST_POSITIONS", false]], "right_top_corner (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.right_top_corner", false]], "save_obj() (ipctk.candidates method)": [[20, "ipctk.Candidates.save_obj", false]], "second_derivative() (ipctk.barrier method)": [[18, "ipctk.Barrier.second_derivative", false]], "segment_segment_intersect() (in module ipctk)": [[26, "ipctk.segment_segment_intersect", false]], "set_logger_level() (in module ipctk)": [[28, "ipctk.set_logger_level", false]], "set_num_threads() (in module ipctk)": [[28, "ipctk.set_num_threads", false]], "shape_derivative() (ipctk.barrierpotential method)": [[27, "ipctk.BarrierPotential.shape_derivative", false]], "spatial_hash (ipctk.broadphasemethod attribute)": [[19, "ipctk.BroadPhaseMethod.SPATIAL_HASH", false]], "spatialhash (class in ipctk)": [[19, "ipctk.SpatialHash", false]], "sweep_and_prune (ipctk.broadphasemethod attribute)": [[19, "ipctk.BroadPhaseMethod.SWEEP_AND_PRUNE", false]], "sweep_and_tiniest_queue (ipctk.broadphasemethod attribute)": [[19, "ipctk.BroadPhaseMethod.SWEEP_AND_TINIEST_QUEUE", false]], "sweepandprune (class in ipctk)": [[19, "ipctk.SweepAndPrune", false]], "tangent_basis (ipctk.frictioncollision property)": [[25, "ipctk.FrictionCollision.tangent_basis", false]], "to_edge_index() (ipctk.spatialhash method)": [[19, "ipctk.SpatialHash.to_edge_index", false]], "to_full_dof() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.to_full_dof", false]], "to_full_vertex_id() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.to_full_vertex_id", false]], "to_string() (ipctk.collisions method)": [[23, "ipctk.Collisions.to_string", false]], "to_triangle_index() (ipctk.spatialhash method)": [[19, "ipctk.SpatialHash.to_triangle_index", false]], "trace (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.trace", false]], "tri_start_ind (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.tri_start_ind", false]], "units() (ipctk.barrier method)": [[18, "ipctk.Barrier.units", false]], "update_barrier_stiffness() (in module ipctk)": [[18, "ipctk.update_barrier_stiffness", false]], "use_area_weighting (ipctk.collisions property)": [[23, "ipctk.Collisions.use_area_weighting", false]], "use_improved_max_approximator (ipctk.collisions property)": [[23, "ipctk.Collisions.use_improved_max_approximator", false]], "value (ipctk.broadphasemethod property)": [[19, "ipctk.BroadPhaseMethod.value", false]], "value (ipctk.edgeedgedistancetype property)": [[24, "ipctk.EdgeEdgeDistanceType.value", false]], "value (ipctk.frictionpotential.diffwrt property)": [[27, "ipctk.FrictionPotential.DiffWRT.value", false]], "value (ipctk.loggerlevel property)": [[28, "ipctk.LoggerLevel.value", false]], "value (ipctk.pointedgedistancetype property)": [[24, "ipctk.PointEdgeDistanceType.value", false]], "value (ipctk.pointtriangledistancetype property)": [[24, "ipctk.PointTriangleDistanceType.value", false]], "value (ipctk.psdprojectionmethod property)": [[28, "ipctk.PSDProjectionMethod.value", false]], "velocities (ipctk.frictionpotential attribute)": [[27, "ipctk.FrictionPotential.VELOCITIES", false]], "velocities (ipctk.frictionpotential.diffwrt attribute)": [[27, "ipctk.FrictionPotential.DiffWRT.VELOCITIES", false]], "vertex0_id (ipctk.vertexvertexcandidate property)": [[20, "ipctk.VertexVertexCandidate.vertex0_id", false]], "vertex1_id (ipctk.vertexvertexcandidate property)": [[20, "ipctk.VertexVertexCandidate.vertex1_id", false]], "vertex_area() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.vertex_area", false]], "vertex_area_gradient() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.vertex_area_gradient", false]], "vertex_areas (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.vertex_areas", false]], "vertex_edge_adjacencies (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.vertex_edge_adjacencies", false]], "vertex_id (ipctk.edgevertexcandidate property)": [[20, "ipctk.EdgeVertexCandidate.vertex_id", false]], "vertex_id (ipctk.facevertexcandidate property)": [[20, "ipctk.FaceVertexCandidate.vertex_id", false]], "vertex_id (ipctk.planevertexcollision property)": [[23, "ipctk.PlaneVertexCollision.vertex_id", false]], "vertex_ids (ipctk.aabb property)": [[19, "ipctk.AABB.vertex_ids", false]], "vertex_vertex_adjacencies (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.vertex_vertex_adjacencies", false]], "vertexvertexcandidate (class in ipctk)": [[20, "ipctk.VertexVertexCandidate", false]], "vertexvertexcollision (class in ipctk)": [[23, "ipctk.VertexVertexCollision", false]], "vertexvertexfrictioncollision (class in ipctk)": [[25, "ipctk.VertexVertexFrictionCollision", false]], "vertices() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.vertices", false]], "voxel_count (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.voxel_count", false]], "voxel_count_0x1 (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.voxel_count_0x1", false]], "voxel_to_primitives (ipctk.spatialhash property)": [[19, "ipctk.SpatialHash.voxel_to_primitives", false]], "vv_candidates (ipctk.candidates property)": [[20, "ipctk.Candidates.vv_candidates", false]], "vv_collisions (ipctk.collisions property)": [[23, "ipctk.Collisions.vv_collisions", false]], "vv_collisions (ipctk.frictioncollisions property)": [[25, "ipctk.FrictionCollisions.vv_collisions", false]], "warn (ipctk.loggerlevel attribute)": [[28, "ipctk.LoggerLevel.warn", false]], "weight (ipctk.collision property)": [[23, "ipctk.Collision.weight", false]], "weight (ipctk.frictioncollision property)": [[25, "ipctk.FrictionCollision.weight", false]], "weight_gradient (ipctk.collision property)": [[23, "ipctk.Collision.weight_gradient", false]], "weight_gradient (ipctk.frictioncollision property)": [[25, "ipctk.FrictionCollision.weight_gradient", false]]}, "objects": {"": [[5, 0, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd-p-inflation_radius", "ipc::AABB::from_point::inflation_radius", "Radius of a sphere around the point which the AABB encloses."], [5, 0, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd-p-inflation_radius", "ipc::AABB::from_point::inflation_radius", "Radius of a capsule around the temporal edge which the AABB encloses."], [5, 0, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd-p-p", "ipc::AABB::from_point::p", "The point's position."], [5, 0, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd-p-p_t0", "ipc::AABB::from_point::p_t0", "The point's position at time t=0."], [5, 0, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd-p-p_t1", "ipc::AABB::from_point::p_t1", "The point's position at time t=1."], [5, 0, 2, "_CPPv4NK3ipc4AABB10intersectsERK4AABB-p-other", "ipc::AABB::intersects::other", "The other AABB."], [5, 0, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::BVH::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::BVH::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::BVH::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::BVH::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-inflation_radius", "ipc::BVH::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-inflation_radius", "ipc::BVH::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices", "ipc::BVH::build::vertices", "Vertex positions"], [5, 0, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices_t0", "ipc::BVH::build::vertices_t0", "Starting vertices of the vertices."], [5, 0, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices_t1", "ipc::BVH::build::vertices_t1", "Ending vertices of the vertices."], [5, 1, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-Candidate", "ipc::BVH::detect_candidates::Candidate", "Type of candidate collision."], [5, 0, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-boxes", "ipc::BVH::detect_candidates::boxes", "[in] The boxes to detect collisions with."], [5, 0, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-bvh", "ipc::BVH::detect_candidates::bvh", "[in] The BVH to detect collisions with."], [5, 0, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-can_collide", "ipc::BVH::detect_candidates::can_collide", "[in] Function to determine if two primitives can collide given their ids."], [5, 0, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-candidates", "ipc::BVH::detect_candidates::candidates", "[out] The candidate collisions."], [5, 2, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-swap_order", "ipc::BVH::detect_candidates::swap_order", "Whether to swap the order of box id with the BVH id when adding to the candidates."], [5, 2, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-triangular", "ipc::BVH::detect_candidates::triangular", "Whether to consider (i, j) and (j, i) as the same."], [5, 0, 2, "_CPPv4NK3ipc3BVH27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::BVH::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisions."], [5, 0, 2, "_CPPv4NK3ipc3BVH27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::BVH::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 0, 2, "_CPPv4NK3ipc3BVH29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::BVH::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisions."], [5, 0, 2, "_CPPv4NK3ipc3BVH27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE-p-candidates", "ipc::BVH::detect_face_face_candidates::candidates", "[out] The candidate face-face collisions."], [5, 0, 2, "_CPPv4NK3ipc3BVH29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::BVH::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisions."], [5, 0, 2, "_CPPv4NK3ipc3BVH31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE-p-candidates", "ipc::BVH::detect_vertex_vertex_candidates::candidates", "[out] The candidate vertex-vertex collisions."], [5, 0, 2, "_CPPv4N3ipc3BVH8init_bvhERKNSt6vectorI4AABBEERN9SimpleBVH3BVHE-p-boxes", "ipc::BVH::init_bvh::boxes", "[in] Set of boxes to initialize the BVH with."], [5, 0, 2, "_CPPv4N3ipc3BVH8init_bvhERKNSt6vectorI4AABBEERN9SimpleBVH3BVHE-p-bvh", "ipc::BVH::init_bvh::bvh", "[out] The BVH to initialize."], [4, 0, 2, "_CPPv4NK3ipc7Barrier16first_derivativeEKdKd-p-d", "ipc::Barrier::first_derivative::d", "Distance."], [4, 0, 2, "_CPPv4NK3ipc7Barrier16first_derivativeEKdKd-p-dhat", "ipc::Barrier::first_derivative::dhat", "Activation distance of the barrier."], [4, 0, 2, "_CPPv4NK3ipc7BarrierclEKdKd-p-d", "ipc::Barrier::operator()::d", "Distance."], [4, 0, 2, "_CPPv4NK3ipc7BarrierclEKdKd-p-dhat", "ipc::Barrier::operator()::dhat", "Activation distance of the barrier."], [4, 0, 2, "_CPPv4NK3ipc7Barrier17second_derivativeEKdKd-p-d", "ipc::Barrier::second_derivative::d", "Distance."], [4, 0, 2, "_CPPv4NK3ipc7Barrier17second_derivativeEKdKd-p-dhat", "ipc::Barrier::second_derivative::dhat", "Activation distance of the barrier."], [4, 0, 2, "_CPPv4NK3ipc7Barrier5unitsEKd-p-dhat", "ipc::Barrier::units::dhat", "The activation distance of the barrier."], [13, 0, 2, "_CPPv4N3ipc16BarrierPotential16BarrierPotentialEKNSt10shared_ptrI7BarrierEEKdKb-p-dhat", "ipc::BarrierPotential::BarrierPotential::dhat", "The activation distance of the barrier."], [13, 0, 2, "_CPPv4N3ipc16BarrierPotential16BarrierPotentialEKdKb-p-dhat", "ipc::BarrierPotential::BarrierPotential::dhat", "The activation distance of the barrier."], [13, 0, 2, "_CPPv4NK3ipc16BarrierPotential24distance_based_potentialEKdKd-p-distance_sqr", "ipc::BarrierPotential::distance_based_potential::distance_sqr", "The distance (squared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc16BarrierPotential24distance_based_potentialEKdKd-p-dmin", "ipc::BarrierPotential::distance_based_potential::dmin", "The minimum distance (unsquared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc16BarrierPotential33distance_based_potential_gradientEKdKd-p-distance_sqr", "ipc::BarrierPotential::distance_based_potential_gradient::distance_sqr", "The distance (squared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc16BarrierPotential33distance_based_potential_gradientEKdKd-p-dmin", "ipc::BarrierPotential::distance_based_potential_gradient::dmin", "The minimum distance (unsquared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc16BarrierPotential32distance_based_potential_hessianEKdKd-p-distance_sqr", "ipc::BarrierPotential::distance_based_potential_hessian::distance_sqr", "The distance (squared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc16BarrierPotential32distance_based_potential_hessianEKdKd-p-dmin", "ipc::BarrierPotential::distance_based_potential_hessian::dmin", "The minimum distance (unsquared) between the two objects."], [13, 0, 2, "_CPPv4N3ipc16BarrierPotential11set_barrierEKNSt10shared_ptrI7BarrierEE-p-barrier", "ipc::BarrierPotential::set_barrier::barrier", "The barrier function used to compute the potential."], [13, 0, 2, "_CPPv4N3ipc16BarrierPotential8set_dhatEKd-p-dhat", "ipc::BarrierPotential::set_dhat::dhat", "The activation distance of the barrier."], [13, 0, 2, "_CPPv4N3ipc16BarrierPotential24set_use_physical_barrierEb-p-use_physical_barrier", "ipc::BarrierPotential::set_use_physical_barrier::use_physical_barrier", "Whether to use the physical barrier."], [5, 0, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::BroadPhase::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::BroadPhase::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::BroadPhase::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::BroadPhase::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-inflation_radius", "ipc::BroadPhase::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-inflation_radius", "ipc::BroadPhase::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices", "ipc::BroadPhase::build::vertices", "Vertex positions"], [5, 0, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices_t0", "ipc::BroadPhase::build::vertices_t0", "Starting vertices of the vertices."], [5, 0, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices_t1", "ipc::BroadPhase::build::vertices_t1", "Ending vertices of the vertices."], [5, 0, 2, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates-p-candidates", "ipc::BroadPhase::detect_collision_candidates::candidates", "The detected collision candidates."], [5, 0, 2, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates-p-dim", "ipc::BroadPhase::detect_collision_candidates::dim", "The dimension of the simulation (i.e., 2 or 3)."], [5, 0, 2, "_CPPv4NK3ipc10BroadPhase27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::BroadPhase::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisions."], [5, 0, 2, "_CPPv4NK3ipc10BroadPhase27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::BroadPhase::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 0, 2, "_CPPv4NK3ipc10BroadPhase29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::BroadPhase::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisions."], [5, 0, 2, "_CPPv4NK3ipc10BroadPhase27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE-p-candidates", "ipc::BroadPhase::detect_face_face_candidates::candidates", "[out] The candidate face-face collisions."], [5, 0, 2, "_CPPv4NK3ipc10BroadPhase29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::BroadPhase::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisions."], [5, 0, 2, "_CPPv4NK3ipc10BroadPhase31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE-p-candidates", "ipc::BroadPhase::detect_vertex_vertex_candidates::candidates", "[out] The candidate vertex-vertex collisions."], [5, 0, 2, "_CPPv4N3ipc10BroadPhase16make_broad_phaseEK16BroadPhaseMethod-p-method", "ipc::BroadPhase::make_broad_phase::method", "The broad phase method to use."], [5, 1, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-Candidate", "ipc::BruteForce::detect_candidates::Candidate", "Type of the candidate."], [5, 0, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-boxes0", "ipc::BruteForce::detect_candidates::boxes0", "[in] First set of boxes."], [5, 0, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-boxes1", "ipc::BruteForce::detect_candidates::boxes1", "[in] Second set of boxes."], [5, 0, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-can_collide", "ipc::BruteForce::detect_candidates::can_collide", "[in] Function to determine if two primitives can collide given their ids."], [5, 0, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-candidates", "ipc::BruteForce::detect_candidates::candidates", "[out] The candidate collisions."], [5, 2, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-triangular", "ipc::BruteForce::detect_candidates::triangular", "Whether to consider (i, j) and (j, i) as the same."], [5, 0, 2, "_CPPv4NK3ipc10BruteForce27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::BruteForce::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisions."], [5, 0, 2, "_CPPv4NK3ipc10BruteForce27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::BruteForce::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 0, 2, "_CPPv4NK3ipc10BruteForce29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::BruteForce::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisions."], [5, 0, 2, "_CPPv4NK3ipc10BruteForce27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE-p-candidates", "ipc::BruteForce::detect_face_face_candidates::candidates", "[out] The candidate face-face collisions."], [5, 0, 2, "_CPPv4NK3ipc10BruteForce29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::BruteForce::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisions."], [5, 0, 2, "_CPPv4NK3ipc10BruteForce31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE-p-candidates", "ipc::BruteForce::detect_vertex_vertex_candidates::candidates", "[out] The candidate vertex-vertex collisions."], [6, 0, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-broad_phase_method", "ipc::Candidates::build::broad_phase_method", "Broad phase method to use."], [6, 0, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-broad_phase_method", "ipc::Candidates::build::broad_phase_method", "Broad phase method to use."], [6, 0, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-inflation_radius", "ipc::Candidates::build::inflation_radius", "Amount to inflate the bounding boxes."], [6, 0, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-inflation_radius", "ipc::Candidates::build::inflation_radius", "Amount to inflate the bounding boxes."], [6, 0, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-mesh", "ipc::Candidates::build::mesh", "The surface of the collision mesh."], [6, 0, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-mesh", "ipc::Candidates::build::mesh", "The surface of the collision mesh."], [6, 0, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-vertices", "ipc::Candidates::build::vertices", "Surface vertex positions (rowwise)."], [6, 0, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-vertices_t0", "ipc::Candidates::build::vertices_t0", "Surface vertex starting positions (rowwise)."], [6, 0, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-vertices_t1", "ipc::Candidates::build::vertices_t1", "Surface vertex ending positions (rowwise)."], [6, 0, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdRK14NarrowPhaseCCD-p-dhat", "ipc::Candidates::compute_cfl_stepsize::dhat", "Barrier activation distance."], [6, 0, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdRK14NarrowPhaseCCD-p-mesh", "ipc::Candidates::compute_cfl_stepsize::mesh", "The collision mesh."], [6, 0, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdRK14NarrowPhaseCCD-p-min_distance", "ipc::Candidates::compute_cfl_stepsize::min_distance", "The minimum distance allowable between any two elements."], [6, 0, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::Candidates::compute_cfl_stepsize::narrow_phase_ccd", "The narrow phase CCD algorithm to use."], [6, 0, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdRK14NarrowPhaseCCD-p-vertices_t0", "ipc::Candidates::compute_cfl_stepsize::vertices_t0", "Surface vertex starting positions (rowwise)."], [6, 0, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdRK14NarrowPhaseCCD-p-vertices_t1", "ipc::Candidates::compute_cfl_stepsize::vertices_t1", "Surface vertex ending positions (rowwise)."], [6, 0, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-mesh", "ipc::Candidates::compute_collision_free_stepsize::mesh", "The collision mesh."], [6, 0, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-min_distance", "ipc::Candidates::compute_collision_free_stepsize::min_distance", "The minimum distance allowable between any two elements."], [6, 0, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::Candidates::compute_collision_free_stepsize::narrow_phase_ccd", "The narrow phase CCD algorithm to use."], [6, 0, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-vertices_t0", "ipc::Candidates::compute_collision_free_stepsize::vertices_t0", "Surface vertex starting positions (rowwise)."], [6, 0, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-vertices_t1", "ipc::Candidates::compute_collision_free_stepsize::vertices_t1", "Surface vertex ending positions (rowwise)."], [6, 0, 2, "_CPPv4NK3ipc10Candidates42compute_noncandidate_conservative_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-dhat", "ipc::Candidates::compute_noncandidate_conservative_stepsize::dhat", "Barrier activation distance."], [6, 0, 2, "_CPPv4NK3ipc10Candidates42compute_noncandidate_conservative_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-displacements", "ipc::Candidates::compute_noncandidate_conservative_stepsize::displacements", "Surface vertex displacements (rowwise)."], [6, 0, 2, "_CPPv4NK3ipc10Candidates42compute_noncandidate_conservative_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::Candidates::compute_noncandidate_conservative_stepsize::mesh", "The collision mesh."], [6, 0, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-mesh", "ipc::Candidates::is_step_collision_free::mesh", "The collision mesh."], [6, 0, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-min_distance", "ipc::Candidates::is_step_collision_free::min_distance", "The minimum distance allowable between any two elements."], [6, 0, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::Candidates::is_step_collision_free::narrow_phase_ccd", "The narrow phase CCD algorithm to use."], [6, 0, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-vertices_t0", "ipc::Candidates::is_step_collision_free::vertices_t0", "Surface vertex starting positions (rowwise)."], [6, 0, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdRK14NarrowPhaseCCD-p-vertices_t1", "ipc::Candidates::is_step_collision_free::vertices_t1", "Surface vertex ending positions (rowwise)."], [4, 0, 2, "_CPPv4NK3ipc17ClampedLogBarrier16first_derivativeEKdKd-p-d", "ipc::ClampedLogBarrier::first_derivative::d", "The distance."], [4, 0, 2, "_CPPv4NK3ipc17ClampedLogBarrier16first_derivativeEKdKd-p-dhat", "ipc::ClampedLogBarrier::first_derivative::dhat", "Activation distance of the barrier."], [4, 0, 2, "_CPPv4NK3ipc17ClampedLogBarrierclEKdKd-p-d", "ipc::ClampedLogBarrier::operator()::d", "The distance."], [4, 0, 2, "_CPPv4NK3ipc17ClampedLogBarrierclEKdKd-p-dhat", "ipc::ClampedLogBarrier::operator()::dhat", "Activation distance of the barrier."], [4, 0, 2, "_CPPv4NK3ipc17ClampedLogBarrier17second_derivativeEKdKd-p-d", "ipc::ClampedLogBarrier::second_derivative::d", "The distance."], [4, 0, 2, "_CPPv4NK3ipc17ClampedLogBarrier17second_derivativeEKdKd-p-dhat", "ipc::ClampedLogBarrier::second_derivative::dhat", "Activation distance of the barrier."], [4, 0, 2, "_CPPv4NK3ipc17ClampedLogBarrier5unitsEKd-p-dhat", "ipc::ClampedLogBarrier::units::dhat", "The activation distance of the barrier."], [9, 0, 2, "_CPPv4NK3ipc9Collision9mollifierERK12VectorMax12dd-p-eps_x", "ipc::Collision::mollifier::eps_x", "The mollifier's threshold."], [9, 0, 2, "_CPPv4NK3ipc9Collision9mollifierERK12VectorMax12d-p-positions", "ipc::Collision::mollifier::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision9mollifierERK12VectorMax12dd-p-positions", "ipc::Collision::mollifier::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision18mollifier_gradientERK12VectorMax12dd-p-eps_x", "ipc::Collision::mollifier_gradient::eps_x", "The mollifier's threshold."], [9, 0, 2, "_CPPv4NK3ipc9Collision18mollifier_gradientERK12VectorMax12d-p-positions", "ipc::Collision::mollifier_gradient::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision18mollifier_gradientERK12VectorMax12dd-p-positions", "ipc::Collision::mollifier_gradient::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision33mollifier_gradient_jacobian_wrt_xERK12VectorMax12dRK12VectorMax12d-p-positions", "ipc::Collision::mollifier_gradient_jacobian_wrt_x::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision33mollifier_gradient_jacobian_wrt_xERK12VectorMax12dRK12VectorMax12d-p-rest_positions", "ipc::Collision::mollifier_gradient_jacobian_wrt_x::rest_positions", "The stencil's rest vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision24mollifier_gradient_wrt_xERK12VectorMax12dRK12VectorMax12d-p-positions", "ipc::Collision::mollifier_gradient_wrt_x::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision24mollifier_gradient_wrt_xERK12VectorMax12dRK12VectorMax12d-p-rest_positions", "ipc::Collision::mollifier_gradient_wrt_x::rest_positions", "The stencil's rest vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision17mollifier_hessianERK12VectorMax12dd-p-eps_x", "ipc::Collision::mollifier_hessian::eps_x", "The mollifier's threshold."], [9, 0, 2, "_CPPv4NK3ipc9Collision17mollifier_hessianERK12VectorMax12d-p-positions", "ipc::Collision::mollifier_hessian::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision17mollifier_hessianERK12VectorMax12dd-p-positions", "ipc::Collision::mollifier_hessian::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc9Collision19mollifier_thresholdERK12VectorMax12d-p-rest_positions", "ipc::Collision::mollifier_threshold::rest_positions", "The stencil's rest vertex positions."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-displacement_map", "ipc::CollisionMesh::CollisionMesh::displacement_map", "The displacement mapping from displacements on the full mesh to the collision mesh."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-displacement_map", "ipc::CollisionMesh::CollisionMesh::displacement_map", "The displacement mapping from displacements on the full mesh to the collision mesh."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-edges", "ipc::CollisionMesh::CollisionMesh::edges", "The edges of the collision mesh (#E \u00d7 2)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-edges", "ipc::CollisionMesh::CollisionMesh::edges", "The edges of the collision mesh indexed into the full mesh vertices (#E \u00d7 2)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-faces", "ipc::CollisionMesh::CollisionMesh::faces", "The faces of the collision mesh (#F \u00d7 3)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-faces", "ipc::CollisionMesh::CollisionMesh::faces", "The faces of the collision mesh indexed into the full mesh vertices (#F \u00d7 3)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-full_rest_positions", "ipc::CollisionMesh::CollisionMesh::full_rest_positions", "The vertices of the full mesh at rest (#V \u00d7 dim)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-include_vertex", "ipc::CollisionMesh::CollisionMesh::include_vertex", "Vector of bools indicating whether each vertex should be included in the collision mesh."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-rest_positions", "ipc::CollisionMesh::CollisionMesh::rest_positions", "The vertices of the collision mesh at rest (#V \u00d7 dim)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::build_from_full_mesh::edges", "The edge matrix of mesh (#E \u00d7 2)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionMesh::build_from_full_mesh::faces", "The face matrix of mesh (#F \u00d7 3)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-full_rest_positions", "ipc::CollisionMesh::build_from_full_mesh::full_rest_positions", "The full vertices at rest (#FV \u00d7 dim)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::construct_faces_to_edges::edges", "The edge matrix of mesh (#E \u00d7 2)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionMesh::construct_faces_to_edges::faces", "The face matrix of mesh (#F \u00d7 3)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKlRKN5Eigen8MatrixXiERKN5Eigen8VectorXiE-p-codim_vertices", "ipc::CollisionMesh::construct_is_on_surface::codim_vertices", "The indices of codimensional vertices (#CV x 1)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKlRKN5Eigen8MatrixXiERKN5Eigen8VectorXiE-p-edges", "ipc::CollisionMesh::construct_is_on_surface::edges", "The surface edges of the mesh (#E \u00d7 2)."], [8, 0, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKlRKN5Eigen8MatrixXiERKN5Eigen8VectorXiE-p-num_vertices", "ipc::CollisionMesh::construct_is_on_surface::num_vertices", "The number of vertices in the mesh."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE-p-full_displacements", "ipc::CollisionMesh::displace_vertices::full_displacements", "The vertex displacements on the full mesh (#FV \u00d7 dim)."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t-p-ei", "ipc::CollisionMesh::edge_area::ei", "Edge ID."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t-p-ei", "ipc::CollisionMesh::edge_area_gradient::ei", "Edge ID."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi-p-vi", "ipc::CollisionMesh::is_vertex_on_boundary::vi", "Vertex ID."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE-p-full_displacements", "ipc::CollisionMesh::map_displacements::full_displacements", "The vertex displacements on the full mesh (#FV \u00d7 dim)."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE-p-X", "ipc::CollisionMesh::to_full_dof::X", "Matrix quantity on the collision mesh with size equal to ndof() \u00d7 ndof()."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE-p-x", "ipc::CollisionMesh::to_full_dof::x", "Vector quantity on the collision mesh with size equal to ndof()."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t-p-id", "ipc::CollisionMesh::to_full_vertex_id::id", "Vertex ID in the collision mesh."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t-p-vi", "ipc::CollisionMesh::vertex_area::vi", "Vertex ID."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t-p-vi", "ipc::CollisionMesh::vertex_area_gradient::vi", "Vertex ID."], [8, 0, 2, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE-p-full_positions", "ipc::CollisionMesh::vertices::full_positions", "The vertex positions of the full mesh (#FV \u00d7 dim)."], [6, 0, 2, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERK12VectorMax12d-p-positions", "ipc::CollisionStencil::compute_distance::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERK12VectorMax12d-p-positions", "ipc::CollisionStencil::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERK12VectorMax12d-p-positions", "ipc::CollisionStencil::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc16CollisionStencil3dimEKi-p-ndof", "ipc::CollisionStencil::dim::ndof", "Number of degrees of freedom in the stencil."], [6, 1, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-T", "ipc::CollisionStencil::dof::T", "Type of the DOF"], [6, 0, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-X", "ipc::CollisionStencil::dof::X", "Full matrix of DOF (rowwise)."], [6, 0, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::dof::edges", "Collision mesh edges"], [6, 0, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::dof::faces", "Collision mesh faces"], [6, 0, 2, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::vertex_ids::edges", "Collision mesh edges"], [6, 0, 2, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::vertex_ids::faces", "Collision mesh faces"], [6, 1, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-T", "ipc::CollisionStencil::vertices::T", "Type of the attributes"], [6, 0, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::vertices::edges", "Collision mesh edges"], [6, 0, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::vertices::faces", "Collision mesh faces"], [6, 0, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::CollisionStencil::vertices::vertices", "Vertex attributes"], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-broad_phase_method", "ipc::Collisions::build::broad_phase_method", "Broad-phase method to use."], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-candidates", "ipc::Collisions::build::candidates", "Distance candidates from which the collision set is built."], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-dhat", "ipc::Collisions::build::dhat", "The activation distance of the barrier."], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-dhat", "ipc::Collisions::build::dhat", "The activation distance of the barrier."], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-dmin", "ipc::Collisions::build::dmin", "Minimum distance."], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-dmin", "ipc::Collisions::build::dmin", "Minimum distance."], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-mesh", "ipc::Collisions::build::mesh", "The collision mesh."], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-mesh", "ipc::Collisions::build::mesh", "The collision mesh."], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-vertices", "ipc::Collisions::build::vertices", "Vertices of the collision mesh."], [9, 0, 2, "_CPPv4N3ipc10Collisions5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-vertices", "ipc::Collisions::build::vertices", "Vertices of the collision mesh."], [9, 0, 2, "_CPPv4NK3ipc10Collisions24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE-p-mesh", "ipc::Collisions::compute_minimum_distance::mesh", "The collision mesh."], [9, 0, 2, "_CPPv4NK3ipc10Collisions24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE-p-vertices", "ipc::Collisions::compute_minimum_distance::vertices", "Vertices of the collision mesh."], [9, 0, 2, "_CPPv4NK3ipc10Collisions12is_edge_edgeE6size_t-p-i", "ipc::Collisions::is_edge_edge::i", "The index of the collision."], [9, 0, 2, "_CPPv4NK3ipc10Collisions14is_edge_vertexE6size_t-p-i", "ipc::Collisions::is_edge_vertex::i", "The index of the collision."], [9, 0, 2, "_CPPv4NK3ipc10Collisions14is_face_vertexE6size_t-p-i", "ipc::Collisions::is_face_vertex::i", "The index of the collision."], [9, 0, 2, "_CPPv4NK3ipc10Collisions15is_plane_vertexE6size_t-p-i", "ipc::Collisions::is_plane_vertex::i", "The index of the collision."], [9, 0, 2, "_CPPv4NK3ipc10Collisions16is_vertex_vertexE6size_t-p-i", "ipc::Collisions::is_vertex_vertex::i", "The index of the collision."], [9, 0, 2, "_CPPv4N3ipc10CollisionsixE6size_t-p-i", "ipc::Collisions::operator[]::i", "The index of the collision."], [9, 0, 2, "_CPPv4NK3ipc10CollisionsixE6size_t-p-i", "ipc::Collisions::operator[]::i", "The index of the collision."], [9, 0, 2, "_CPPv4N3ipc10Collisions28set_enable_shape_derivativesEKb-p-enable_shape_derivatives", "ipc::Collisions::set_enable_shape_derivatives::enable_shape_derivatives", "If the collision set should enable shape derivative computation."], [9, 0, 2, "_CPPv4N3ipc10Collisions22set_use_area_weightingEKb-p-use_area_weighting", "ipc::Collisions::set_use_area_weighting::use_area_weighting", "If the collision set should use area weighting."], [9, 0, 2, "_CPPv4N3ipc10Collisions33set_use_improved_max_approximatorEKb-p-use_improved_max_approximator", "ipc::Collisions::set_use_improved_max_approximator::use_improved_max_approximator", "If the collision set should use the improved max approximator."], [6, 0, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-min_distance", "ipc::ContinuousCollisionCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 0, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::ContinuousCollisionCandidate::ccd::narrow_phase_ccd", "[in] The narrow phase CCD algorithm to use."], [6, 0, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-tmax", "ipc::ContinuousCollisionCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 0, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-toi", "ipc::ContinuousCollisionCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 0, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t0", "ipc::ContinuousCollisionCandidate::ccd::vertices_t0", "[in] Stencil vertices at the start of the time step."], [6, 0, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t1", "ipc::ContinuousCollisionCandidate::ccd::vertices_t1", "[in] Stencil vertices at the end of the time step."], [6, 0, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERK12VectorMax12dRK12VectorMax12d-p-out", "ipc::ContinuousCollisionCandidate::write_ccd_query::out", "Stream to write to."], [6, 0, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERK12VectorMax12dRK12VectorMax12d-p-vertices_t0", "ipc::ContinuousCollisionCandidate::write_ccd_query::vertices_t0", "Stencil vertices at the start of the time step."], [6, 0, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERK12VectorMax12dRK12VectorMax12d-p-vertices_t1", "ipc::ContinuousCollisionCandidate::write_ccd_query::vertices_t1", "Stencil vertices at the end of the time step."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential24distance_based_potentialEKdKd-p-distance_sqr", "ipc::DistanceBasedPotential::distance_based_potential::distance_sqr", "The distance (squared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential24distance_based_potentialEKdKd-p-dmin", "ipc::DistanceBasedPotential::distance_based_potential::dmin", "The minimum distance (unsquared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential33distance_based_potential_gradientEKdKd-p-distance_sqr", "ipc::DistanceBasedPotential::distance_based_potential_gradient::distance_sqr", "The distance (squared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential33distance_based_potential_gradientEKdKd-p-dmin", "ipc::DistanceBasedPotential::distance_based_potential_gradient::dmin", "The minimum distance (unsquared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential32distance_based_potential_hessianEKdKd-p-distance_sqr", "ipc::DistanceBasedPotential::distance_based_potential_hessian::distance_sqr", "The distance (squared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential32distance_based_potential_hessianEKdKd-p-dmin", "ipc::DistanceBasedPotential::distance_based_potential_hessian::dmin", "The minimum distance (unsquared) between the two objects."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential8gradientERK9CollisionRK12VectorMax12d-p-collision", "ipc::DistanceBasedPotential::gradient::collision", "The collision."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential8gradientERK9CollisionRK12VectorMax12d-p-positions", "ipc::DistanceBasedPotential::gradient::positions", "The collision stencil's positions."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential7hessianERK9CollisionRK12VectorMax12dK19PSDProjectionMethod-p-collision", "ipc::DistanceBasedPotential::hessian::collision", "The collision."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential7hessianERK9CollisionRK12VectorMax12dK19PSDProjectionMethod-p-positions", "ipc::DistanceBasedPotential::hessian::positions", "The collision stencil's positions."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotentialclERK9CollisionRK12VectorMax12d-p-collision", "ipc::DistanceBasedPotential::operator()::collision", "The collision."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotentialclERK9CollisionRK12VectorMax12d-p-positions", "ipc::DistanceBasedPotential::operator()::positions", "The collision stencil's positions."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK9CollisionRKNSt5arrayIlXL4EEEERK12VectorMax12dRK12VectorMax12dRNSt6vectorIN5Eigen7TripletIdEEEE-p-collision", "ipc::DistanceBasedPotential::shape_derivative::collision", "[in] The collision."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK10CollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-collisions", "ipc::DistanceBasedPotential::shape_derivative::collisions", "The set of collisions."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK10CollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-mesh", "ipc::DistanceBasedPotential::shape_derivative::mesh", "The collision mesh."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK9CollisionRKNSt5arrayIlXL4EEEERK12VectorMax12dRK12VectorMax12dRNSt6vectorIN5Eigen7TripletIdEEEE-p-out", "ipc::DistanceBasedPotential::shape_derivative::out", "[inout] Store the triplets of the shape derivative here."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK9CollisionRKNSt5arrayIlXL4EEEERK12VectorMax12dRK12VectorMax12dRNSt6vectorIN5Eigen7TripletIdEEEE-p-positions", "ipc::DistanceBasedPotential::shape_derivative::positions", "[in] The collision stencil's positions."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK9CollisionRKNSt5arrayIlXL4EEEERK12VectorMax12dRK12VectorMax12dRNSt6vectorIN5Eigen7TripletIdEEEE-p-rest_positions", "ipc::DistanceBasedPotential::shape_derivative::rest_positions", "[in] The collision stencil's rest positions."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK9CollisionRKNSt5arrayIlXL4EEEERK12VectorMax12dRK12VectorMax12dRNSt6vectorIN5Eigen7TripletIdEEEE-p-vertex_ids", "ipc::DistanceBasedPotential::shape_derivative::vertex_ids", "[in] The collision stencil's vertex ids."], [13, 0, 2, "_CPPv4NK3ipc22DistanceBasedPotential16shape_derivativeERK10CollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-vertices", "ipc::DistanceBasedPotential::shape_derivative::vertices", "Vertices of the collision mesh."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-min_distance", "ipc::EdgeEdgeCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::EdgeEdgeCandidate::ccd::narrow_phase_ccd", "[in] The narrow phase CCD algorithm to use."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-tmax", "ipc::EdgeEdgeCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-toi", "ipc::EdgeEdgeCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t0", "ipc::EdgeEdgeCandidate::ccd::vertices_t0", "[in] Stencil vertices at the start of the time step."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t1", "ipc::EdgeEdgeCandidate::ccd::vertices_t1", "[in] Stencil vertices at the end of the time step."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate16compute_distanceERK12VectorMax12d-p-positions", "ipc::EdgeEdgeCandidate::compute_distance::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate25compute_distance_gradientERK12VectorMax12d-p-positions", "ipc::EdgeEdgeCandidate::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate24compute_distance_hessianERK12VectorMax12d-p-positions", "ipc::EdgeEdgeCandidate::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeEdgeCandidate::vertex_ids::edges", "Collision mesh edges"], [6, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeEdgeCandidate::vertex_ids::faces", "Collision mesh faces"], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision9mollifierERK12VectorMax12dd-p-eps_x", "ipc::EdgeEdgeCollision::mollifier::eps_x", "The mollifier's tolerance."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision9mollifierERK12VectorMax12d-p-positions", "ipc::EdgeEdgeCollision::mollifier::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision9mollifierERK12VectorMax12dd-p-positions", "ipc::EdgeEdgeCollision::mollifier::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision18mollifier_gradientERK12VectorMax12dd-p-eps_x", "ipc::EdgeEdgeCollision::mollifier_gradient::eps_x", "The mollifier's tolerance."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision18mollifier_gradientERK12VectorMax12d-p-positions", "ipc::EdgeEdgeCollision::mollifier_gradient::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision18mollifier_gradientERK12VectorMax12dd-p-positions", "ipc::EdgeEdgeCollision::mollifier_gradient::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision33mollifier_gradient_jacobian_wrt_xERK12VectorMax12dRK12VectorMax12d-p-positions", "ipc::EdgeEdgeCollision::mollifier_gradient_jacobian_wrt_x::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision33mollifier_gradient_jacobian_wrt_xERK12VectorMax12dRK12VectorMax12d-p-rest_positions", "ipc::EdgeEdgeCollision::mollifier_gradient_jacobian_wrt_x::rest_positions", "The stencil's rest vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision24mollifier_gradient_wrt_xERK12VectorMax12dRK12VectorMax12d-p-positions", "ipc::EdgeEdgeCollision::mollifier_gradient_wrt_x::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision24mollifier_gradient_wrt_xERK12VectorMax12dRK12VectorMax12d-p-rest_positions", "ipc::EdgeEdgeCollision::mollifier_gradient_wrt_x::rest_positions", "The stencil's rest vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision17mollifier_hessianERK12VectorMax12dd-p-eps_x", "ipc::EdgeEdgeCollision::mollifier_hessian::eps_x", "The mollifier's tolerance."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision17mollifier_hessianERK12VectorMax12d-p-positions", "ipc::EdgeEdgeCollision::mollifier_hessian::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision17mollifier_hessianERK12VectorMax12dd-p-positions", "ipc::EdgeEdgeCollision::mollifier_hessian::positions", "The stencil's vertex positions."], [9, 0, 2, "_CPPv4NK3ipc17EdgeEdgeCollision19mollifier_thresholdERK12VectorMax12d-p-rest_positions", "ipc::EdgeEdgeCollision::mollifier_threshold::rest_positions", "The stencil's rest vertex positions."], [11, 0, 2, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::EdgeEdgeFrictionCollision::compute_closest_point::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::EdgeEdgeFrictionCollision::compute_closest_point_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::EdgeEdgeFrictionCollision::compute_tangent_basis::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::EdgeEdgeFrictionCollision::compute_tangent_basis_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision24relative_velocity_matrixERK11VectorMax2d-p-closest_point", "ipc::EdgeEdgeFrictionCollision::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 0, 2, "_CPPv4NK3ipc25EdgeEdgeFrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::EdgeEdgeFrictionCollision::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-min_distance", "ipc::EdgeVertexCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::EdgeVertexCandidate::ccd::narrow_phase_ccd", "[in] The narrow phase CCD algorithm to use."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-tmax", "ipc::EdgeVertexCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-toi", "ipc::EdgeVertexCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t0", "ipc::EdgeVertexCandidate::ccd::vertices_t0", "[in] Stencil vertices at the start of the time step."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t1", "ipc::EdgeVertexCandidate::ccd::vertices_t1", "[in] Stencil vertices at the end of the time step."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate16compute_distanceERK12VectorMax12d-p-positions", "ipc::EdgeVertexCandidate::compute_distance::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate25compute_distance_gradientERK12VectorMax12d-p-positions", "ipc::EdgeVertexCandidate::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate24compute_distance_hessianERK12VectorMax12d-p-positions", "ipc::EdgeVertexCandidate::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeVertexCandidate::vertex_ids::edges", "Collision mesh edges"], [6, 0, 2, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeVertexCandidate::vertex_ids::faces", "Collision mesh faces"], [11, 0, 2, "_CPPv4NK3ipc27EdgeVertexFrictionCollision21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::EdgeVertexFrictionCollision::compute_closest_point::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc27EdgeVertexFrictionCollision30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::EdgeVertexFrictionCollision::compute_closest_point_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc27EdgeVertexFrictionCollision21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::EdgeVertexFrictionCollision::compute_tangent_basis::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc27EdgeVertexFrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::EdgeVertexFrictionCollision::compute_tangent_basis_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc27EdgeVertexFrictionCollision24relative_velocity_matrixERK11VectorMax2d-p-closest_point", "ipc::EdgeVertexFrictionCollision::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 0, 2, "_CPPv4NK3ipc27EdgeVertexFrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::EdgeVertexFrictionCollision::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-min_distance", "ipc::FaceVertexCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::FaceVertexCandidate::ccd::narrow_phase_ccd", "[in] The narrow phase CCD algorithm to use."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-tmax", "ipc::FaceVertexCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-toi", "ipc::FaceVertexCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t0", "ipc::FaceVertexCandidate::ccd::vertices_t0", "[in] Stencil vertices at the start of the time step."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t1", "ipc::FaceVertexCandidate::ccd::vertices_t1", "[in] Stencil vertices at the end of the time step."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate16compute_distanceERK12VectorMax12d-p-positions", "ipc::FaceVertexCandidate::compute_distance::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate25compute_distance_gradientERK12VectorMax12d-p-positions", "ipc::FaceVertexCandidate::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate24compute_distance_hessianERK12VectorMax12d-p-positions", "ipc::FaceVertexCandidate::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::FaceVertexCandidate::vertex_ids::edges", "Collision mesh edges"], [6, 0, 2, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::FaceVertexCandidate::vertex_ids::faces", "Collision mesh faces"], [11, 0, 2, "_CPPv4NK3ipc27FaceVertexFrictionCollision21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::FaceVertexFrictionCollision::compute_closest_point::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc27FaceVertexFrictionCollision30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::FaceVertexFrictionCollision::compute_closest_point_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc27FaceVertexFrictionCollision21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::FaceVertexFrictionCollision::compute_tangent_basis::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc27FaceVertexFrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::FaceVertexFrictionCollision::compute_tangent_basis_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc27FaceVertexFrictionCollision24relative_velocity_matrixERK11VectorMax2d-p-closest_point", "ipc::FaceVertexFrictionCollision::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 0, 2, "_CPPv4NK3ipc27FaceVertexFrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::FaceVertexFrictionCollision::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::FrictionCollision::compute_closest_point::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::FrictionCollision::compute_closest_point_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision30compute_normal_force_magnitudeERK12VectorMax12dRK16BarrierPotentialKdKd-p-barrier_stiffness", "ipc::FrictionCollision::compute_normal_force_magnitude::barrier_stiffness", "Barrier stiffness."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision30compute_normal_force_magnitudeERK12VectorMax12dRK16BarrierPotentialKdKd-p-dmin", "ipc::FrictionCollision::compute_normal_force_magnitude::dmin", "Minimum distance."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision30compute_normal_force_magnitudeERK12VectorMax12dRK16BarrierPotentialKdKd-p-positions", "ipc::FrictionCollision::compute_normal_force_magnitude::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision39compute_normal_force_magnitude_gradientERK12VectorMax12dRK16BarrierPotentialKdKd-p-barrier_stiffness", "ipc::FrictionCollision::compute_normal_force_magnitude_gradient::barrier_stiffness", "Barrier stiffness."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision39compute_normal_force_magnitude_gradientERK12VectorMax12dRK16BarrierPotentialKdKd-p-dmin", "ipc::FrictionCollision::compute_normal_force_magnitude_gradient::dmin", "Minimum distance."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision39compute_normal_force_magnitude_gradientERK12VectorMax12dRK16BarrierPotentialKdKd-p-positions", "ipc::FrictionCollision::compute_normal_force_magnitude_gradient::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::FrictionCollision::compute_tangent_basis::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::FrictionCollision::compute_tangent_basis_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4N3ipc17FrictionCollision4initERK9CollisionRK12VectorMax12dRK16BarrierPotentialKd-p-barrier_potential", "ipc::FrictionCollision::init::barrier_potential", "Barrier potential used for normal force."], [11, 0, 2, "_CPPv4N3ipc17FrictionCollision4initERK9CollisionRK12VectorMax12dRK16BarrierPotentialKd-p-barrier_stiffness", "ipc::FrictionCollision::init::barrier_stiffness", "Barrier potential stiffness."], [11, 0, 2, "_CPPv4N3ipc17FrictionCollision4initERK9CollisionRK12VectorMax12dRK16BarrierPotentialKd-p-collision", "ipc::FrictionCollision::init::collision", "Collision stencil."], [11, 0, 2, "_CPPv4N3ipc17FrictionCollision4initERK9CollisionRK12VectorMax12dRK16BarrierPotentialKd-p-positions", "ipc::FrictionCollision::init::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision24relative_velocity_matrixERK11VectorMax2d-p-closest_point", "ipc::FrictionCollision::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 0, 2, "_CPPv4NK3ipc17FrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::FrictionCollision::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [11, 0, 2, "_CPPv4N3ipc18FrictionCollisionsixEK6size_t-p-i", "ipc::FrictionCollisions::operator[]::i", "The index of the collision."], [11, 0, 2, "_CPPv4NK3ipc18FrictionCollisionsixEK6size_t-p-i", "ipc::FrictionCollisions::operator[]::i", "The index of the collision."], [13, 0, 2, "_CPPv4N3ipc17FrictionPotential17FrictionPotentialEKd-p-epsv", "ipc::FrictionPotential::FrictionPotential::epsv", "The smooth friction mollifier parameter \\epsilon_v."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdKdKb-p-barrier_potential", "ipc::FrictionPotential::force::barrier_potential", "Barrier potential (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb-p-barrier_potential", "ipc::FrictionPotential::force::barrier_potential", "Barrier potential (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdKdKb-p-barrier_stiffness", "ipc::FrictionPotential::force::barrier_stiffness", "Barrier stiffness (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb-p-barrier_stiffness", "ipc::FrictionPotential::force::barrier_stiffness", "Barrier stiffness (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdKdKb-p-collision", "ipc::FrictionPotential::force::collision", "The collision"], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb-p-collisions", "ipc::FrictionPotential::force::collisions", "The set of collisions."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdKdKb-p-dmin", "ipc::FrictionPotential::force::dmin", "Minimum distance (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb-p-dmin", "ipc::FrictionPotential::force::dmin", "Minimum distance (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdKdKb-p-lagged_displacements", "ipc::FrictionPotential::force::lagged_displacements", "Previous displacements of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb-p-lagged_displacements", "ipc::FrictionPotential::force::lagged_displacements", "Previous displacements of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb-p-mesh", "ipc::FrictionPotential::force::mesh", "The collision mesh."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdKdKb-p-no_mu", "ipc::FrictionPotential::force::no_mu", "Whether to not multiply by mu"], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb-p-no_mu", "ipc::FrictionPotential::force::no_mu", "whether to not multiply by mu"], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdKdKb-p-rest_positions", "ipc::FrictionPotential::force::rest_positions", "Rest positions of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb-p-rest_positions", "ipc::FrictionPotential::force::rest_positions", "Rest positions of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdKdKb-p-velocities", "ipc::FrictionPotential::force::velocities", "Current displacements of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential5forceERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdKdKb-p-velocities", "ipc::FrictionPotential::force::velocities", "Current displacements of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdK7DiffWRTKd-p-barrier_potential", "ipc::FrictionPotential::force_jacobian::barrier_potential", "Barrier potential (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd-p-barrier_potential", "ipc::FrictionPotential::force_jacobian::barrier_potential", "Barrier potential (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdK7DiffWRTKd-p-barrier_stiffness", "ipc::FrictionPotential::force_jacobian::barrier_stiffness", "Barrier stiffness (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd-p-barrier_stiffness", "ipc::FrictionPotential::force_jacobian::barrier_stiffness", "Barrier stiffness (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdK7DiffWRTKd-p-collision", "ipc::FrictionPotential::force_jacobian::collision", "The collision"], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd-p-collisions", "ipc::FrictionPotential::force_jacobian::collisions", "The set of collisions."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdK7DiffWRTKd-p-dmin", "ipc::FrictionPotential::force_jacobian::dmin", "Minimum distance (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd-p-dmin", "ipc::FrictionPotential::force_jacobian::dmin", "Minimum distance (used for normal force magnitude)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdK7DiffWRTKd-p-lagged_displacements", "ipc::FrictionPotential::force_jacobian::lagged_displacements", "Previous displacements of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd-p-lagged_displacements", "ipc::FrictionPotential::force_jacobian::lagged_displacements", "Previous displacements of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd-p-mesh", "ipc::FrictionPotential::force_jacobian::mesh", "The collision mesh."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdK7DiffWRTKd-p-rest_positions", "ipc::FrictionPotential::force_jacobian::rest_positions", "Rest positions of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd-p-rest_positions", "ipc::FrictionPotential::force_jacobian::rest_positions", "Rest positions of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdK7DiffWRTKd-p-velocities", "ipc::FrictionPotential::force_jacobian::velocities", "Current displacements of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd-p-velocities", "ipc::FrictionPotential::force_jacobian::velocities", "Current displacements of the vertices (rowwise)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK17FrictionCollisionRK12VectorMax12dRK12VectorMax12dRK12VectorMax12dRK16BarrierPotentialKdK7DiffWRTKd-p-wrt", "ipc::FrictionPotential::force_jacobian::wrt", "Variable to differentiate the friction force with respect to."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential14force_jacobianERK18FrictionCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERK16BarrierPotentialKdK7DiffWRTKd-p-wrt", "ipc::FrictionPotential::force_jacobian::wrt", "The variable to take the derivative with respect to."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential8gradientERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-X", "ipc::FrictionPotential::gradient::X", "Degrees of freedom of the collision mesh (e.g., vertices or velocities)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential8gradientERK10TCollisionRK12VectorMax12d-p-collision", "ipc::FrictionPotential::gradient::collision", "The collision."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential8gradientERK17FrictionCollisionRK12VectorMax12d-p-collision", "ipc::FrictionPotential::gradient::collision", "The collision"], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential8gradientERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-collisions", "ipc::FrictionPotential::gradient::collisions", "The set of collisions."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential8gradientERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-mesh", "ipc::FrictionPotential::gradient::mesh", "The collision mesh."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential8gradientERK17FrictionCollisionRK12VectorMax12d-p-velocities", "ipc::FrictionPotential::gradient::velocities", "The collision stencil's velocities."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential8gradientERK10TCollisionRK12VectorMax12d-p-x", "ipc::FrictionPotential::gradient::x", "The collision stencil's degrees of freedom."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod-p-X", "ipc::FrictionPotential::hessian::X", "Degrees of freedom of the collision mesh (e.g., vertices or velocities)."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential7hessianERK10TCollisionRK12VectorMax12dK19PSDProjectionMethod-p-collision", "ipc::FrictionPotential::hessian::collision", "The collision."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential7hessianERK17FrictionCollisionRK12VectorMax12dK19PSDProjectionMethod-p-collision", "ipc::FrictionPotential::hessian::collision", "The collision"], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod-p-collisions", "ipc::FrictionPotential::hessian::collisions", "The set of collisions."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod-p-mesh", "ipc::FrictionPotential::hessian::mesh", "The collision mesh."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod-p-project_hessian_to_psd", "ipc::FrictionPotential::hessian::project_hessian_to_psd", "Make sure the hessian is positive semi-definite."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential7hessianERK17FrictionCollisionRK12VectorMax12dK19PSDProjectionMethod-p-velocities", "ipc::FrictionPotential::hessian::velocities", "The collision stencil's velocities."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotential7hessianERK10TCollisionRK12VectorMax12dK19PSDProjectionMethod-p-x", "ipc::FrictionPotential::hessian::x", "The collision stencil's degrees of freedom."], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotentialclERK17FrictionCollisionRK12VectorMax12d-p-collision", "ipc::FrictionPotential::operator()::collision", "The collision"], [13, 0, 2, "_CPPv4NK3ipc17FrictionPotentialclERK17FrictionCollisionRK12VectorMax12d-p-velocities", "ipc::FrictionPotential::operator()::velocities", "The collision stencil's velocities."], [13, 0, 2, "_CPPv4N3ipc17FrictionPotential8set_epsvEKd-p-epsv", "ipc::FrictionPotential::set_epsv::epsv", "The smooth friction mollifier parameter \\epsilon_v."], [5, 0, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::HashGrid::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::HashGrid::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::HashGrid::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::HashGrid::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::HashGrid::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::HashGrid::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::HashGrid::build::vertices", "Vertex positions"], [5, 0, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::HashGrid::build::vertices_t0", "Starting vertices of the vertices."], [5, 0, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::HashGrid::build::vertices_t1", "Ending vertices of the vertices."], [5, 1, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-Candidate", "ipc::HashGrid::detect_candidates::Candidate", "The type of collision candidate."], [5, 1, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-Candidate", "ipc::HashGrid::detect_candidates::Candidate", "The type of collision candidate."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-boxes", "ipc::HashGrid::detect_candidates::boxes", "[in] The items' boxes."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-boxes0", "ipc::HashGrid::detect_candidates::boxes0", "[in] First set's boxes."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-boxes1", "ipc::HashGrid::detect_candidates::boxes1", "[in] Second set's boxes."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-can_collide", "ipc::HashGrid::detect_candidates::can_collide", "[in] Function to determine if two items can collide."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-can_collide", "ipc::HashGrid::detect_candidates::can_collide", "[in] Function to determine if two items can collide."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-candidates", "ipc::HashGrid::detect_candidates::candidates", "[out] The candidate collisions."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-candidates", "ipc::HashGrid::detect_candidates::candidates", "[out] The candidate collisions."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-items", "ipc::HashGrid::detect_candidates::items", "[in] The set of items."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-items0", "ipc::HashGrid::detect_candidates::items0", "[in] First set of items."], [5, 0, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE-p-items1", "ipc::HashGrid::detect_candidates::items1", "[in] Second set of items."], [5, 0, 2, "_CPPv4NK3ipc8HashGrid27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::HashGrid::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisions."], [5, 0, 2, "_CPPv4NK3ipc8HashGrid27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::HashGrid::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 0, 2, "_CPPv4NK3ipc8HashGrid29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::HashGrid::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisions."], [5, 0, 2, "_CPPv4NK3ipc8HashGrid27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE-p-candidates", "ipc::HashGrid::detect_face_face_candidates::candidates", "[out] The candidate face-face collisions."], [5, 0, 2, "_CPPv4NK3ipc8HashGrid29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::HashGrid::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisions."], [7, 0, 2, "_CPPv4NK3ipc27IntervalNonlinearTrajectory24max_distance_from_linearEKdKd-p-t0", "ipc::IntervalNonlinearTrajectory::max_distance_from_linear::t0", "[in] Start time of the trajectory"], [7, 0, 2, "_CPPv4NK3ipc27IntervalNonlinearTrajectory24max_distance_from_linearEKdKd-p-t1", "ipc::IntervalNonlinearTrajectory::max_distance_from_linear::t1", "[in] End time of the trajectory"], [7, 0, 2, "_CPPv4NK3ipc19NonlinearTrajectory24max_distance_from_linearEKdKd-p-t0", "ipc::NonlinearTrajectory::max_distance_from_linear::t0", "[in] Start time of the trajectory"], [7, 0, 2, "_CPPv4NK3ipc19NonlinearTrajectory24max_distance_from_linearEKdKd-p-t1", "ipc::NonlinearTrajectory::max_distance_from_linear::t1", "[in] End time of the trajectory"], [9, 0, 2, "_CPPv4NK3ipc20PlaneVertexCollision16compute_distanceERK12VectorMax12d-p-point", "ipc::PlaneVertexCollision::compute_distance::point", "Point's position."], [9, 0, 2, "_CPPv4NK3ipc20PlaneVertexCollision25compute_distance_gradientERK12VectorMax12d-p-point", "ipc::PlaneVertexCollision::compute_distance_gradient::point", "Point's position."], [9, 0, 2, "_CPPv4NK3ipc20PlaneVertexCollision24compute_distance_hessianERK12VectorMax12d-p-point", "ipc::PlaneVertexCollision::compute_distance_hessian::point", "Point's position."], [9, 0, 2, "_CPPv4NK3ipc20PlaneVertexCollision10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::PlaneVertexCollision::vertex_ids::edges", "Collision mesh edges"], [9, 0, 2, "_CPPv4NK3ipc20PlaneVertexCollision10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::PlaneVertexCollision::vertex_ids::faces", "Collision mesh faces"], [13, 1, 2, "_CPPv4I0EN3ipc9PotentialE-p-TCollisions", "ipc::Potential::TCollisions", "The type of the collisions."], [13, 0, 2, "_CPPv4NK3ipc9Potential8gradientERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-X", "ipc::Potential::gradient::X", "Degrees of freedom of the collision mesh (e.g., vertices or velocities)."], [13, 0, 2, "_CPPv4NK3ipc9Potential8gradientERK10TCollisionRK12VectorMax12d-p-collision", "ipc::Potential::gradient::collision", "The collision."], [13, 0, 2, "_CPPv4NK3ipc9Potential8gradientERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-collisions", "ipc::Potential::gradient::collisions", "The set of collisions."], [13, 0, 2, "_CPPv4NK3ipc9Potential8gradientERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-mesh", "ipc::Potential::gradient::mesh", "The collision mesh."], [13, 0, 2, "_CPPv4NK3ipc9Potential8gradientERK10TCollisionRK12VectorMax12d-p-x", "ipc::Potential::gradient::x", "The collision stencil's degrees of freedom."], [13, 0, 2, "_CPPv4NK3ipc9Potential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod-p-X", "ipc::Potential::hessian::X", "Degrees of freedom of the collision mesh (e.g., vertices or velocities)."], [13, 0, 2, "_CPPv4NK3ipc9Potential7hessianERK10TCollisionRK12VectorMax12dK19PSDProjectionMethod-p-collision", "ipc::Potential::hessian::collision", "The collision."], [13, 0, 2, "_CPPv4NK3ipc9Potential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod-p-collisions", "ipc::Potential::hessian::collisions", "The set of collisions."], [13, 0, 2, "_CPPv4NK3ipc9Potential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod-p-mesh", "ipc::Potential::hessian::mesh", "The collision mesh."], [13, 0, 2, "_CPPv4NK3ipc9Potential7hessianERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdEK19PSDProjectionMethod-p-project_hessian_to_psd", "ipc::Potential::hessian::project_hessian_to_psd", "Make sure the hessian is positive semi-definite."], [13, 0, 2, "_CPPv4NK3ipc9Potential7hessianERK10TCollisionRK12VectorMax12dK19PSDProjectionMethod-p-x", "ipc::Potential::hessian::x", "The collision stencil's degrees of freedom."], [13, 0, 2, "_CPPv4NK3ipc9PotentialclERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-X", "ipc::Potential::operator()::X", "Degrees of freedom of the collision mesh (e.g., vertices or velocities)."], [13, 0, 2, "_CPPv4NK3ipc9PotentialclERK10TCollisionRK12VectorMax12d-p-collision", "ipc::Potential::operator()::collision", "The collision."], [13, 0, 2, "_CPPv4NK3ipc9PotentialclERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-collisions", "ipc::Potential::operator()::collisions", "The set of collisions."], [13, 0, 2, "_CPPv4NK3ipc9PotentialclERK11TCollisionsRK13CollisionMeshRKN5Eigen8MatrixXdE-p-mesh", "ipc::Potential::operator()::mesh", "The collision mesh."], [13, 0, 2, "_CPPv4NK3ipc9PotentialclERK10TCollisionRK12VectorMax12d-p-x", "ipc::Potential::operator()::x", "The collision stencil's degrees of freedom."], [5, 0, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SpatialHash::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SpatialHash::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SpatialHash::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SpatialHash::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SpatialHash::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SpatialHash::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::SpatialHash::build::vertices", "Vertex positions"], [5, 0, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::SpatialHash::build::vertices_t0", "Starting vertices of the vertices."], [5, 0, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::SpatialHash::build::vertices_t1", "Ending vertices of the vertices."], [5, 1, 2, "_CPPv4I0ENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-Candidate", "ipc::SpatialHash::detect_candidates::Candidate", "Type of candidate collision."], [5, 1, 2, "_CPPv4I0_b_bENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-Candidate", "ipc::SpatialHash::detect_candidates::Candidate", "Type of candidate collision."], [5, 0, 2, "_CPPv4I0ENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-boxesA", "ipc::SpatialHash::detect_candidates::boxesA", "[in] The boxes of type A to detect collisions with."], [5, 0, 2, "_CPPv4I0_b_bENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-boxesA", "ipc::SpatialHash::detect_candidates::boxesA", "[in] The boxes of type A to detect collisions with."], [5, 0, 2, "_CPPv4I0_b_bENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-boxesB", "ipc::SpatialHash::detect_candidates::boxesB", "[in] The boxes of type B to detect collisions with."], [5, 0, 2, "_CPPv4I0ENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-can_collide", "ipc::SpatialHash::detect_candidates::can_collide", "[in] Function to determine if two primitives can collide given their ids."], [5, 0, 2, "_CPPv4I0_b_bENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-can_collide", "ipc::SpatialHash::detect_candidates::can_collide", "[in] Function to determine if two primitives can collide given their ids."], [5, 0, 2, "_CPPv4I0ENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-candidates", "ipc::SpatialHash::detect_candidates::candidates", "[out] The candidate collisions."], [5, 0, 2, "_CPPv4I0_b_bENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-candidates", "ipc::SpatialHash::detect_candidates::candidates", "[out] The candidate collisions."], [5, 0, 2, "_CPPv4I0ENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-query_A_for_As", "ipc::SpatialHash::detect_candidates::query_A_for_As", "[in] Function to query boxes of type A for boxes of type A."], [5, 0, 2, "_CPPv4I0_b_bENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-query_A_for_Bs", "ipc::SpatialHash::detect_candidates::query_A_for_Bs", "[in] Function to query boxes of type B for boxes of type A."], [5, 2, 2, "_CPPv4I0_b_bENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-swap_order", "ipc::SpatialHash::detect_candidates::swap_order", "Whether to swap the order of A and B when adding to the candidates."], [5, 2, 2, "_CPPv4I0_b_bENK3ipc11SpatialHash17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFviR13unordered_setIiEEEERKNSt8functionIFbiiEEERNSt6vectorI9CandidateEE-p-triangular", "ipc::SpatialHash::detect_candidates::triangular", "Whether to consider (i, j) and (j, i) as the same."], [5, 0, 2, "_CPPv4NK3ipc11SpatialHash27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE-p-candidates", "ipc::SpatialHash::detect_face_face_candidates::candidates", "[out] The candidate face-face collisions."], [5, 0, 2, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SweepAndPrune::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SweepAndPrune::build::edges", "Collision mesh edges"], [5, 0, 2, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SweepAndPrune::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SweepAndPrune::build::faces", "Collision mesh faces"], [5, 0, 2, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SweepAndPrune::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SweepAndPrune::build::inflation_radius", "Radius of inflation around all elements."], [5, 0, 2, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::SweepAndPrune::build::vertices", "Vertex positions"], [5, 0, 2, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::SweepAndPrune::build::vertices_t0", "Starting vertex positions"], [5, 0, 2, "_CPPv4N3ipc13SweepAndPrune5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::SweepAndPrune::build::vertices_t1", "Ending vertex positions"], [5, 0, 2, "_CPPv4NK3ipc13SweepAndPrune27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::SweepAndPrune::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisions."], [5, 0, 2, "_CPPv4NK3ipc13SweepAndPrune27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::SweepAndPrune::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 0, 2, "_CPPv4NK3ipc13SweepAndPrune29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::SweepAndPrune::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisions."], [5, 0, 2, "_CPPv4NK3ipc13SweepAndPrune27detect_face_face_candidatesERNSt6vectorI17FaceFaceCandidateEE-p-candidates", "ipc::SweepAndPrune::detect_face_face_candidates::candidates", "[out] The candidate face-face collisions."], [5, 0, 2, "_CPPv4NK3ipc13SweepAndPrune29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::SweepAndPrune::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisions."], [5, 0, 2, "_CPPv4NK3ipc13SweepAndPrune31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE-p-candidates", "ipc::SweepAndPrune::detect_vertex_vertex_candidates::candidates", "[out] The candidate vertex-vertex collisions."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-min_distance", "ipc::VertexVertexCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::VertexVertexCandidate::ccd::narrow_phase_ccd", "[in] The narrow phase CCD algorithm to use."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-tmax", "ipc::VertexVertexCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-toi", "ipc::VertexVertexCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t0", "ipc::VertexVertexCandidate::ccd::vertices_t0", "[in] Stencil vertices at the start of the time step."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdRK14NarrowPhaseCCD-p-vertices_t1", "ipc::VertexVertexCandidate::ccd::vertices_t1", "[in] Stencil vertices at the end of the time step."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate16compute_distanceERK12VectorMax12d-p-positions", "ipc::VertexVertexCandidate::compute_distance::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate25compute_distance_gradientERK12VectorMax12d-p-positions", "ipc::VertexVertexCandidate::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate24compute_distance_hessianERK12VectorMax12d-p-positions", "ipc::VertexVertexCandidate::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::VertexVertexCandidate::vertex_ids::edges", "edge matrix of mesh"], [6, 0, 2, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::VertexVertexCandidate::vertex_ids::faces", "face matrix of mesh"], [11, 0, 2, "_CPPv4NK3ipc29VertexVertexFrictionCollision21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::VertexVertexFrictionCollision::compute_closest_point::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc29VertexVertexFrictionCollision30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::VertexVertexFrictionCollision::compute_closest_point_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc29VertexVertexFrictionCollision21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::VertexVertexFrictionCollision::compute_tangent_basis::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc29VertexVertexFrictionCollision30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::VertexVertexFrictionCollision::compute_tangent_basis_jacobian::positions", "Collision stencil's vertex positions."], [11, 0, 2, "_CPPv4NK3ipc29VertexVertexFrictionCollision24relative_velocity_matrixERK11VectorMax2d-p-closest_point", "ipc::VertexVertexFrictionCollision::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 0, 2, "_CPPv4NK3ipc29VertexVertexFrictionCollision33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::VertexVertexFrictionCollision::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [4, 0, 2, "_CPPv4N3ipc7barrierEKdKd-p-d", "ipc::barrier::d", "The distance."], [4, 0, 2, "_CPPv4N3ipc7barrierEKdKd-p-dhat", "ipc::barrier::dhat", "Activation distance of the barrier."], [4, 0, 2, "_CPPv4N3ipc24barrier_first_derivativeEKdKd-p-d", "ipc::barrier_first_derivative::d", "The distance."], [4, 0, 2, "_CPPv4N3ipc24barrier_first_derivativeEKdKd-p-dhat", "ipc::barrier_first_derivative::dhat", "Activation distance of the barrier."], [4, 0, 2, "_CPPv4N3ipc25barrier_second_derivativeEKdKd-p-d", "ipc::barrier_second_derivative::d", "The distance."], [4, 0, 2, "_CPPv4N3ipc25barrier_second_derivativeEKdKd-p-dhat", "ipc::barrier_second_derivative::dhat", "Activation distance of the barrier."], [7, 0, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-broad_phase_method", "ipc::compute_collision_free_stepsize::broad_phase_method", "The broad phase method to use."], [7, 0, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-mesh", "ipc::compute_collision_free_stepsize::mesh", "The collision mesh."], [7, 0, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-min_distance", "ipc::compute_collision_free_stepsize::min_distance", "The minimum distance allowable between any two elements."], [7, 0, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::compute_collision_free_stepsize::narrow_phase_ccd", "The narrow phase CCD algorithm to use."], [7, 0, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-vertices_t0", "ipc::compute_collision_free_stepsize::vertices_t0", "Vertex vertices at start as rows of a matrix."], [7, 0, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-vertices_t1", "ipc::compute_collision_free_stepsize::vertices_t1", "Surface vertex vertices at end as rows of a matrix."], [7, 0, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-conservative_rescaling", "ipc::conservative_piecewise_linear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact."], [7, 0, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-distance", "ipc::conservative_piecewise_linear_ccd::distance", "[in] Return the distance for a given time in [0, 1]."], [7, 0, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-linear_ccd", "ipc::conservative_piecewise_linear_ccd::linear_ccd", "[in] Perform linear CCD on a given time interval."], [7, 0, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-max_distance_from_linear", "ipc::conservative_piecewise_linear_ccd::max_distance_from_linear", "[in] Return the maximum distance from the linearized trajectory for a given time interval."], [7, 0, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-min_distance", "ipc::conservative_piecewise_linear_ccd::min_distance", "[in] Minimum separation distance between the objects."], [7, 0, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-tmax", "ipc::conservative_piecewise_linear_ccd::tmax", "[in] Maximum time to check for collision."], [7, 0, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-toi", "ipc::conservative_piecewise_linear_ccd::toi", "[out] Output time of impact."], [11, 0, 2, "_CPPv4N3ipc22df1_x_minus_f1_over_x3EKdKd-p-epsv", "ipc::df1_x_minus_f1_over_x3::epsv", "Mollifier parameter \\epsilon_v."], [11, 0, 2, "_CPPv4N3ipc22df1_x_minus_f1_over_x3EKdKd-p-s", "ipc::df1_x_minus_f1_over_x3::s", "The tangential relative speed."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::edge_edge_cross_squarednorm::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::edge_edge_cross_squarednorm::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0", "ipc::edge_edge_cross_squarednorm::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1", "ipc::edge_edge_cross_squarednorm::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::edge_edge_cross_squarednorm_gradient::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::edge_edge_cross_squarednorm_gradient::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0", "ipc::edge_edge_cross_squarednorm_gradient::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1", "ipc::edge_edge_cross_squarednorm_gradient::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::edge_edge_cross_squarednorm_hessian::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::edge_edge_cross_squarednorm_hessian::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0", "ipc::edge_edge_cross_squarednorm_hessian::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1", "ipc::edge_edge_cross_squarednorm_hessian::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-dtype", "ipc::edge_edge_distance::dtype", "The point edge distance type to compute."], [10, 0, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea0", "ipc::edge_edge_distance::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea1", "ipc::edge_edge_distance::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb0", "ipc::edge_edge_distance::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb1", "ipc::edge_edge_distance::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-dtype", "ipc::edge_edge_distance_gradient::dtype", "The point edge distance type to compute."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea0", "ipc::edge_edge_distance_gradient::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea1", "ipc::edge_edge_distance_gradient::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb0", "ipc::edge_edge_distance_gradient::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb1", "ipc::edge_edge_distance_gradient::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-dtype", "ipc::edge_edge_distance_hessian::dtype", "The point edge distance type to compute."], [10, 0, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea0", "ipc::edge_edge_distance_hessian::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea1", "ipc::edge_edge_distance_hessian::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb0", "ipc::edge_edge_distance_hessian::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb1", "ipc::edge_edge_distance_hessian::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::edge_edge_distance_type::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::edge_edge_distance_type::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0", "ipc::edge_edge_distance_type::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1", "ipc::edge_edge_distance_type::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea0", "ipc::edge_edge_mollifier::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea1", "ipc::edge_edge_mollifier::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb0", "ipc::edge_edge_mollifier::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb1", "ipc::edge_edge_mollifier::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc19edge_edge_mollifierEKdKd-p-eps_x", "ipc::edge_edge_mollifier::eps_x", "Mollifier activation threshold."], [10, 0, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eps_x", "ipc::edge_edge_mollifier::eps_x", "Mollifier activation threshold."], [10, 0, 2, "_CPPv4N3ipc19edge_edge_mollifierEKdKd-p-x", "ipc::edge_edge_mollifier::x", "Squared norm of the edge-edge cross product."], [10, 0, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea0", "ipc::edge_edge_mollifier_gradient::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea1", "ipc::edge_edge_mollifier_gradient::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb0", "ipc::edge_edge_mollifier_gradient::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb1", "ipc::edge_edge_mollifier_gradient::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientEKdKd-p-eps_x", "ipc::edge_edge_mollifier_gradient::eps_x", "Mollifier activation threshold."], [10, 0, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eps_x", "ipc::edge_edge_mollifier_gradient::eps_x", "Mollifier activation threshold."], [10, 0, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientEKdKd-p-x", "ipc::edge_edge_mollifier_gradient::x", "Squared norm of the edge-edge cross product."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea0", "ipc::edge_edge_mollifier_hessian::ea0", "The first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea1", "ipc::edge_edge_mollifier_hessian::ea1", "The second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb0", "ipc::edge_edge_mollifier_hessian::eb0", "The first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb1", "ipc::edge_edge_mollifier_hessian::eb1", "The second vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianEKdKd-p-eps_x", "ipc::edge_edge_mollifier_hessian::eps_x", "Mollifier activation threshold."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eps_x", "ipc::edge_edge_mollifier_hessian::eps_x", "Mollifier activation threshold."], [10, 0, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianEKdKd-p-x", "ipc::edge_edge_mollifier_hessian::x", "Squared norm of the edge-edge cross product."], [10, 0, 2, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0_rest", "ipc::edge_edge_mollifier_threshold::ea0_rest", "The rest position of the first vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1_rest", "ipc::edge_edge_mollifier_threshold::ea1_rest", "The rest position of the second vertex of the first edge."], [10, 0, 2, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0_rest", "ipc::edge_edge_mollifier_threshold::eb0_rest", "The rest position of the first vertex of the second edge."], [10, 0, 2, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1_rest", "ipc::edge_edge_mollifier_threshold::eb1_rest", "The rest position of the second vertex of the second edge."], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-conservative_rescaling", "ipc::edge_edge_nonlinear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact"], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-ea0", "ipc::edge_edge_nonlinear_ccd::ea0", "[in] First edge's first endpoint's trajectory"], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-ea1", "ipc::edge_edge_nonlinear_ccd::ea1", "[in] First edge's second endpoint's trajectory"], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-eb0", "ipc::edge_edge_nonlinear_ccd::eb0", "[in] Second edge's first endpoint's trajectory"], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-eb1", "ipc::edge_edge_nonlinear_ccd::eb1", "[in] Second edge's second endpoint's trajectory"], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-max_iterations", "ipc::edge_edge_nonlinear_ccd::max_iterations", "[in] Maximum number of iterations for the linear CCD algorithm"], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-min_distance", "ipc::edge_edge_nonlinear_ccd::min_distance", "[in] Minimum separation distance between the two edges"], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tmax", "ipc::edge_edge_nonlinear_ccd::tmax", "[in] Maximum time to check for collision"], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-toi", "ipc::edge_edge_nonlinear_ccd::toi", "[out] Output time of impact"], [7, 0, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tolerance", "ipc::edge_edge_nonlinear_ccd::tolerance", "[in] Tolerance for the linear CCD algorithm"], [11, 0, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-coords", "ipc::edge_edge_relative_velocity::coords", "Two parametric coordinates of the closest points on the edges"], [11, 0, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dea0", "ipc::edge_edge_relative_velocity::dea0", "Velocity of the first endpoint of the first edge"], [11, 0, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dea1", "ipc::edge_edge_relative_velocity::dea1", "Velocity of the second endpoint of the first edge"], [11, 0, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-deb0", "ipc::edge_edge_relative_velocity::deb0", "Velocity of the first endpoint of the second edge"], [11, 0, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-deb1", "ipc::edge_edge_relative_velocity::deb1", "Velocity of the second endpoint of the second edge"], [11, 0, 2, "_CPPv4N3ipc5f0_SFEKdKd-p-epsv", "ipc::f0_SF::epsv", "Mollifier parameter \\epsilon_v."], [11, 0, 2, "_CPPv4N3ipc5f0_SFEKdKd-p-s", "ipc::f0_SF::s", "The tangential relative speed."], [11, 0, 2, "_CPPv4N3ipc12f1_SF_over_xEKdKd-p-epsv", "ipc::f1_SF_over_x::epsv", "Mollifier parameter \\epsilon_v."], [11, 0, 2, "_CPPv4N3ipc12f1_SF_over_xEKdKd-p-s", "ipc::f1_SF_over_x::s", "The tangential relative speed."], [12, 0, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-broad_phase_method", "ipc::has_intersections::broad_phase_method", "The broad phase method to use."], [12, 0, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-mesh", "ipc::has_intersections::mesh", "The collision mesh."], [12, 0, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-vertices", "ipc::has_intersections::vertices", "Vertices of the collision mesh."], [4, 0, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-average_mass", "ipc::initial_barrier_stiffness::average_mass", "[in] Average mass of all bodies."], [4, 0, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-barrier", "ipc::initial_barrier_stiffness::barrier", "[in] Barrier function."], [4, 0, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-bbox_diagonal", "ipc::initial_barrier_stiffness::bbox_diagonal", "[in] Length of the diagonal of the bounding box of the scene."], [4, 0, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-dhat", "ipc::initial_barrier_stiffness::dhat", "[in] Activation distance of the barrier."], [4, 0, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-dmin", "ipc::initial_barrier_stiffness::dmin", "[in] Minimum distance between elements."], [4, 0, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-grad_barrier", "ipc::initial_barrier_stiffness::grad_barrier", "[in] Gradient of the barrier potential."], [4, 0, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-grad_energy", "ipc::initial_barrier_stiffness::grad_energy", "[in] Gradient of the elasticity energy function."], [4, 0, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-max_barrier_stiffness", "ipc::initial_barrier_stiffness::max_barrier_stiffness", "[out] Maximum stiffness of the barrier."], [4, 0, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdRK7BarrierKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-min_barrier_stiffness_scale", "ipc::initial_barrier_stiffness::min_barrier_stiffness_scale", "[in] Scale used to premultiply the minimum barrier stiffness."], [7, 0, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-broad_phase_method", "ipc::is_step_collision_free::broad_phase_method", "The broad phase method to use."], [7, 0, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-mesh", "ipc::is_step_collision_free::mesh", "The collision mesh."], [7, 0, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-min_distance", "ipc::is_step_collision_free::min_distance", "The minimum distance allowable between any two elements."], [7, 0, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-narrow_phase_ccd", "ipc::is_step_collision_free::narrow_phase_ccd", "The narrow phase CCD algorithm to use."], [7, 0, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-vertices_t0", "ipc::is_step_collision_free::vertices_t0", "Surface vertex vertices at start as rows of a matrix."], [7, 0, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodRK14NarrowPhaseCCD-p-vertices_t1", "ipc::is_step_collision_free::vertices_t1", "Surface vertex vertices at end as rows of a matrix."], [10, 0, 2, "_CPPv4N3ipc18line_line_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::line_line_distance::ea0", "The first vertex of the edge defining the second line."], [10, 0, 2, "_CPPv4N3ipc18line_line_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::line_line_distance::ea1", "The second vertex of the edge defining the second line."], [10, 0, 2, "_CPPv4N3ipc27line_line_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::line_line_distance_gradient::ea0", "The first vertex of the edge defining the second line."], [10, 0, 2, "_CPPv4N3ipc27line_line_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::line_line_distance_gradient::ea1", "The second vertex of the edge defining the second line."], [10, 0, 2, "_CPPv4N3ipc26line_line_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::line_line_distance_hessian::ea0", "The first vertex of the edge defining the second line."], [10, 0, 2, "_CPPv4N3ipc26line_line_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::line_line_distance_hessian::ea1", "The second vertex of the edge defining the second line."], [10, 0, 2, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-dtype", "ipc::point_edge_distance::dtype", "The point edge distance type to compute."], [10, 0, 2, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e0", "ipc::point_edge_distance::e0", "The first vertex of the edge."], [10, 0, 2, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e1", "ipc::point_edge_distance::e1", "The second vertex of the edge."], [10, 0, 2, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-p", "ipc::point_edge_distance::p", "The point."], [10, 0, 2, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-dtype", "ipc::point_edge_distance_gradient::dtype", "The point edge distance type to compute."], [10, 0, 2, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e0", "ipc::point_edge_distance_gradient::e0", "The first vertex of the edge."], [10, 0, 2, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e1", "ipc::point_edge_distance_gradient::e1", "The second vertex of the edge."], [10, 0, 2, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-p", "ipc::point_edge_distance_gradient::p", "The point."], [10, 0, 2, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-dtype", "ipc::point_edge_distance_hessian::dtype", "The point edge distance type to compute."], [10, 0, 2, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e0", "ipc::point_edge_distance_hessian::e0", "The first vertex of the edge."], [10, 0, 2, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e1", "ipc::point_edge_distance_hessian::e1", "The second vertex of the edge."], [10, 0, 2, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-p", "ipc::point_edge_distance_hessian::p", "The point."], [10, 0, 2, "_CPPv4N3ipc24point_edge_distance_typeERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e0", "ipc::point_edge_distance_type::e0", "The first vertex of the edge."], [10, 0, 2, "_CPPv4N3ipc24point_edge_distance_typeERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e1", "ipc::point_edge_distance_type::e1", "The second vertex of the edge."], [10, 0, 2, "_CPPv4N3ipc24point_edge_distance_typeERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p", "ipc::point_edge_distance_type::p", "The point."], [7, 0, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-conservative_rescaling", "ipc::point_edge_nonlinear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact"], [7, 0, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-e0", "ipc::point_edge_nonlinear_ccd::e0", "[in] Edge's first endpoint's trajectory"], [7, 0, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-e1", "ipc::point_edge_nonlinear_ccd::e1", "[in] Edge's second endpoint's trajectory"], [7, 0, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-max_iterations", "ipc::point_edge_nonlinear_ccd::max_iterations", "[in] Maximum number of iterations for the linear CCD algorithm"], [7, 0, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-min_distance", "ipc::point_edge_nonlinear_ccd::min_distance", "[in] Minimum separation distance between the point and the edge"], [7, 0, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-p", "ipc::point_edge_nonlinear_ccd::p", "[in] Point's trajectory"], [7, 0, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tmax", "ipc::point_edge_nonlinear_ccd::tmax", "[in] Maximum time to check for collision"], [7, 0, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-toi", "ipc::point_edge_nonlinear_ccd::toi", "[out] Output time of impact"], [7, 0, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tolerance", "ipc::point_edge_nonlinear_ccd::tolerance", "[in] Tolerance for the linear CCD algorithm"], [11, 0, 2, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd-p-alpha", "ipc::point_edge_relative_velocity::alpha", "Parametric coordinate of the closest point on the edge"], [11, 0, 2, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd-p-de0", "ipc::point_edge_relative_velocity::de0", "Velocity of the first endpoint of the edge"], [11, 0, 2, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd-p-de1", "ipc::point_edge_relative_velocity::de1", "Velocity of the second endpoint of the edge"], [11, 0, 2, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd-p-dp", "ipc::point_edge_relative_velocity::dp", "Velocity of the point"], [10, 0, 2, "_CPPv4N3ipc19point_line_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e0", "ipc::point_line_distance::e0", "The first vertex of the edge defining the line."], [10, 0, 2, "_CPPv4N3ipc19point_line_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e1", "ipc::point_line_distance::e1", "The second vertex of the edge defining the line."], [10, 0, 2, "_CPPv4N3ipc19point_line_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p", "ipc::point_line_distance::p", "The point."], [10, 0, 2, "_CPPv4N3ipc28point_line_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e0", "ipc::point_line_distance_gradient::e0", "The first vertex of the edge defining the line."], [10, 0, 2, "_CPPv4N3ipc28point_line_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e1", "ipc::point_line_distance_gradient::e1", "The second vertex of the edge defining the line."], [10, 0, 2, "_CPPv4N3ipc28point_line_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p", "ipc::point_line_distance_gradient::p", "The point."], [10, 0, 2, "_CPPv4N3ipc27point_line_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e0", "ipc::point_line_distance_hessian::e0", "The first vertex of the edge defining the line."], [10, 0, 2, "_CPPv4N3ipc27point_line_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e1", "ipc::point_line_distance_hessian::e1", "The second vertex of the edge defining the line."], [10, 0, 2, "_CPPv4N3ipc27point_line_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p", "ipc::point_line_distance_hessian::p", "The point."], [10, 0, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-normal", "ipc::point_plane_distance::normal", "The normal of the plane."], [10, 0, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-origin", "ipc::point_plane_distance::origin", "The origin of the plane."], [10, 0, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance::p", "The point."], [10, 0, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance::p", "The point."], [10, 0, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_plane_distance::t0", "The first vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_plane_distance::t1", "The second vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_plane_distance::t2", "The third vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-normal", "ipc::point_plane_distance_gradient::normal", "The normal of the plane."], [10, 0, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-origin", "ipc::point_plane_distance_gradient::origin", "The origin of the plane."], [10, 0, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance_gradient::p", "The point."], [10, 0, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance_gradient::p", "The point."], [10, 0, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_plane_distance_gradient::t0", "The first vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_plane_distance_gradient::t1", "The second vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_plane_distance_gradient::t2", "The third vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-normal", "ipc::point_plane_distance_hessian::normal", "The normal of the plane."], [10, 0, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-origin", "ipc::point_plane_distance_hessian::origin", "The origin of the plane."], [10, 0, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance_hessian::p", "The point."], [10, 0, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance_hessian::p", "The point."], [10, 0, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_plane_distance_hessian::t0", "The first vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_plane_distance_hessian::t1", "The second vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_plane_distance_hessian::t2", "The third vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc20point_point_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p0", "ipc::point_point_distance::p0", "The first point."], [10, 0, 2, "_CPPv4N3ipc20point_point_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p1", "ipc::point_point_distance::p1", "The second point."], [10, 0, 2, "_CPPv4N3ipc29point_point_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p0", "ipc::point_point_distance_gradient::p0", "The first point."], [10, 0, 2, "_CPPv4N3ipc29point_point_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p1", "ipc::point_point_distance_gradient::p1", "The second point."], [10, 0, 2, "_CPPv4N3ipc28point_point_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p0", "ipc::point_point_distance_hessian::p0", "The first point."], [10, 0, 2, "_CPPv4N3ipc28point_point_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p1", "ipc::point_point_distance_hessian::p1", "The second point."], [7, 0, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-conservative_rescaling", "ipc::point_point_nonlinear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact"], [7, 0, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-max_iterations", "ipc::point_point_nonlinear_ccd::max_iterations", "[in] Maximum number of iterations for the linear CCD algorithm"], [7, 0, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-min_distance", "ipc::point_point_nonlinear_ccd::min_distance", "[in] Minimum separation distance between the two points"], [7, 0, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-p0", "ipc::point_point_nonlinear_ccd::p0", "[in] First point's trajectory"], [7, 0, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-p1", "ipc::point_point_nonlinear_ccd::p1", "[in] Second point's trajectory"], [7, 0, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tmax", "ipc::point_point_nonlinear_ccd::tmax", "[in] Maximum time to check for collision"], [7, 0, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-toi", "ipc::point_point_nonlinear_ccd::toi", "[out] Output time of impact"], [7, 0, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tolerance", "ipc::point_point_nonlinear_ccd::tolerance", "[in] Tolerance for the linear CCD algorithm"], [11, 0, 2, "_CPPv4N3ipc29point_point_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-dp0", "ipc::point_point_relative_velocity::dp0", "Velocity of the first point"], [11, 0, 2, "_CPPv4N3ipc29point_point_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-dp1", "ipc::point_point_relative_velocity::dp1", "Velocity of the second point"], [11, 0, 2, "_CPPv4N3ipc36point_point_relative_velocity_matrixEKi-p-dim", "ipc::point_point_relative_velocity_matrix::dim", "Dimension (2 or 3)"], [11, 0, 2, "_CPPv4N3ipc45point_point_relative_velocity_matrix_jacobianEKi-p-dim", "ipc::point_point_relative_velocity_matrix_jacobian::dim", "Dimension (2 or 3)"], [11, 0, 2, "_CPPv4N3ipc25point_point_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p0", "ipc::point_point_tangent_basis::p0", "First point"], [11, 0, 2, "_CPPv4N3ipc25point_point_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p1", "ipc::point_point_tangent_basis::p1", "Second point"], [10, 0, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-dtype", "ipc::point_triangle_distance::dtype", "The point-triangle distance type to compute."], [10, 0, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-p", "ipc::point_triangle_distance::p", "The point."], [10, 0, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t0", "ipc::point_triangle_distance::t0", "The first vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t1", "ipc::point_triangle_distance::t1", "The second vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t2", "ipc::point_triangle_distance::t2", "The third vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-dtype", "ipc::point_triangle_distance_gradient::dtype", "The point-triangle distance type to compute."], [10, 0, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-p", "ipc::point_triangle_distance_gradient::p", "The point."], [10, 0, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t0", "ipc::point_triangle_distance_gradient::t0", "The first vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t1", "ipc::point_triangle_distance_gradient::t1", "The second vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t2", "ipc::point_triangle_distance_gradient::t2", "The third vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-dtype", "ipc::point_triangle_distance_hessian::dtype", "The point-triangle distance type to compute."], [10, 0, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-p", "ipc::point_triangle_distance_hessian::p", "The point."], [10, 0, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t0", "ipc::point_triangle_distance_hessian::t0", "The first vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t1", "ipc::point_triangle_distance_hessian::t1", "The second vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t2", "ipc::point_triangle_distance_hessian::t2", "The third vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_triangle_distance_type::p", "The point."], [10, 0, 2, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_triangle_distance_type::t0", "The first vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_triangle_distance_type::t1", "The second vertex of the triangle."], [10, 0, 2, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_triangle_distance_type::t2", "The third vertex of the triangle."], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-conservative_rescaling", "ipc::point_triangle_nonlinear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact"], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-max_iterations", "ipc::point_triangle_nonlinear_ccd::max_iterations", "[in] Maximum number of iterations for the linear CCD algorithm"], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-min_distance", "ipc::point_triangle_nonlinear_ccd::min_distance", "[in] Minimum separation distance between the two edges"], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-p", "ipc::point_triangle_nonlinear_ccd::p", "[in] Point's trajectory"], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-t0", "ipc::point_triangle_nonlinear_ccd::t0", "[in] Triangle's first vertex's trajectory"], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-t1", "ipc::point_triangle_nonlinear_ccd::t1", "[in] Triangle's second vertex's trajectory"], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-t2", "ipc::point_triangle_nonlinear_ccd::t2", "[in] Triangle's third vertex's trajectory"], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tmax", "ipc::point_triangle_nonlinear_ccd::tmax", "[in] Maximum time to check for collision"], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-toi", "ipc::point_triangle_nonlinear_ccd::toi", "[out] Output time of impact"], [7, 0, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tolerance", "ipc::point_triangle_nonlinear_ccd::tolerance", "[in] Tolerance for the linear CCD algorithm"], [11, 0, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-coords", "ipc::point_triangle_relative_velocity::coords", "Baricentric coordinates of the closest point on the triangle"], [11, 0, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dp", "ipc::point_triangle_relative_velocity::dp", "Velocity of the point"], [11, 0, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dt0", "ipc::point_triangle_relative_velocity::dt0", "Velocity of the first vertex of the triangle"], [11, 0, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dt1", "ipc::point_triangle_relative_velocity::dt1", "Velocity of the second vertex of the triangle"], [11, 0, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dt2", "ipc::point_triangle_relative_velocity::dt2", "Velocity of the third vertex of the triangle"], [11, 0, 2, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_triangle_tangent_basis::p", "Point"], [11, 0, 2, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_triangle_tangent_basis::t0", "Triangle's first vertex"], [11, 0, 2, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_triangle_tangent_basis::t1", "Triangle's second vertex"], [11, 0, 2, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_triangle_tangent_basis::t2", "Triangle's third vertex"], [14, 0, 2, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd-p-A", "ipc::project_to_pd::A", "Symmetric matrix to project"], [14, 0, 2, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEK19PSDProjectionMethod-p-A", "ipc::project_to_psd::A", "Symmetric matrix to project"], [14, 0, 2, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEK19PSDProjectionMethod-p-method", "ipc::project_to_psd::method", "PSD projection method"], [14, 0, 2, "_CPPv4N3ipc10set_loggerENSt10shared_ptrIN6spdlog6loggerEEE-p-logger", "ipc::set_logger::logger", "New logger object to be used."], [4, 0, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-barrier_stiffness", "ipc::update_barrier_stiffness::barrier_stiffness", "[in] Current barrier stiffness."], [4, 0, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-bbox_diagonal", "ipc::update_barrier_stiffness::bbox_diagonal", "[in] Length of the diagonal of the bounding box of the scene."], [4, 0, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-dhat_epsilon_scale", "ipc::update_barrier_stiffness::dhat_epsilon_scale", "[in] Update if distance is less than this fraction of the diagonal."], [4, 0, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-dmin", "ipc::update_barrier_stiffness::dmin", "[in] Minimum distance between elements."], [4, 0, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-max_barrier_stiffness", "ipc::update_barrier_stiffness::max_barrier_stiffness", "[in] Maximum stiffness of the barrier."], [4, 0, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-min_distance", "ipc::update_barrier_stiffness::min_distance", "[in] Current minimum distance between elements."], [4, 0, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-prev_min_distance", "ipc::update_barrier_stiffness::prev_min_distance", "[in] Previous minimum distance between elements."]], "ipctk": [[19, 3, 1, 0, "AABB", "Bases: pybind11_object"], [19, 3, 1, 0, "BVH", "Bases: BroadPhase"], [18, 3, 1, 0, "Barrier", "Bases: pybind11_object"], [27, 3, 1, 0, "BarrierPotential", "Bases: pybind11_object"], [19, 3, 1, 0, "BroadPhase", "Bases: pybind11_object"], [19, 3, 1, 0, "BroadPhaseMethod", "Bases: pybind11_object"], [19, 3, 1, 0, "BruteForce", "Bases: BroadPhase"], [20, 3, 1, 0, "Candidates", "Bases: pybind11_object"], [18, 3, 1, 0, "ClampedLogBarrier", "Bases: Barrier"], [23, 3, 1, 0, "Collision", "Bases: CollisionStencil"], [22, 3, 1, 0, "CollisionMesh", "Bases: pybind11_object"], [23, 3, 1, 0, "Collisions", "Bases: pybind11_object"], [20, 3, 1, 0, "ContinuousCollisionCandidate", "Bases: pybind11_object"], [20, 3, 1, 0, "EdgeEdgeCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [23, 3, 1, 0, "EdgeEdgeCollision", "Bases: EdgeEdgeCandidate, Collision"], [24, 3, 1, 0, "EdgeEdgeDistanceType", "Bases: pybind11_object"], [25, 3, 1, 0, "EdgeEdgeFrictionCollision", "Bases: EdgeEdgeCandidate, FrictionCollision"], [20, 3, 1, 0, "EdgeFaceCandidate", "Bases: pybind11_object"], [20, 3, 1, 0, "EdgeVertexCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [23, 3, 1, 0, "EdgeVertexCollision", "Bases: EdgeVertexCandidate, Collision"], [25, 3, 1, 0, "EdgeVertexFrictionCollision", "Bases: EdgeVertexCandidate, FrictionCollision"], [20, 3, 1, 0, "FaceVertexCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [23, 3, 1, 0, "FaceVertexCollision", "Bases: FaceVertexCandidate, Collision"], [25, 3, 1, 0, "FaceVertexFrictionCollision", "Bases: FaceVertexCandidate, FrictionCollision"], [25, 3, 1, 0, "FrictionCollision", "Bases: CollisionStencil"], [25, 3, 1, 0, "FrictionCollisions", "Bases: pybind11_object"], [27, 3, 1, 0, "FrictionPotential", "Bases: pybind11_object"], [19, 3, 1, 0, "HashGrid", "Bases: BroadPhase"], [21, 3, 1, 0, "IntervalNonlinearTrajectory", "Bases: NonlinearTrajectory"], [28, 3, 1, 0, "LoggerLevel", "Bases: pybind11_object"], [21, 3, 1, 0, "NonlinearTrajectory", "Bases: pybind11_object"], [28, 3, 1, 0, "PSDProjectionMethod", "Bases: pybind11_object"], [23, 3, 1, 0, "PlaneVertexCollision", "Bases: Collision"], [24, 3, 1, 0, "PointEdgeDistanceType", "Bases: pybind11_object"], [24, 3, 1, 0, "PointTriangleDistanceType", "Bases: pybind11_object"], [19, 3, 1, 0, "SpatialHash", "Bases: BroadPhase"], [19, 3, 1, 0, "SweepAndPrune", "Bases: BroadPhase"], [20, 3, 1, 0, "VertexVertexCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [23, 3, 1, 0, "VertexVertexCollision", "Bases: VertexVertexCandidate, Collision"], [25, 3, 1, 0, "VertexVertexFrictionCollision", "Bases: VertexVertexCandidate, FrictionCollision"], [18, 8, 1, 0, "barrier", "Function that grows to infinity as d approaches 0 from the right."], [18, 8, 1, 0, "barrier_first_derivative", "Derivative of the barrier function."], [18, 8, 1, 0, "barrier_second_derivative", "Second derivative of the barrier function."], [21, 8, 1, 0, "compute_collision_free_stepsize", "Computes a maximal step size that is collision free."], [25, 8, 1, 0, "compute_normal_force_magnitude", ""], [25, 8, 1, 0, "compute_normal_force_magnitude_gradient", ""], [21, 8, 1, 0, "conservative_piecewise_linear_ccd", "Perform conservative piecewise linear CCD of a nonlinear trajectories."], [25, 8, 1, 0, "df1_x_minus_f1_over_x3", "The derivative of f1 times s minus f1 all divided by s cubed."], [24, 8, 1, 0, "edge_edge_cross_squarednorm", "Compute the squared norm of the edge-edge cross product."], [24, 8, 1, 0, "edge_edge_cross_squarednorm_gradient", "Compute the gradient of the squared norm of the edge cross product."], [24, 8, 1, 0, "edge_edge_cross_squarednorm_hessian", "Compute the hessian of the squared norm of the edge cross product."], [24, 8, 1, 0, "edge_edge_distance", "Compute the distance between a two lines segments in 3D."], [24, 8, 1, 0, "edge_edge_distance_gradient", "Compute the gradient of the distance between a two lines segments."], [24, 8, 1, 0, "edge_edge_distance_hessian", "Compute the hessian of the distance between a two lines segments."], [24, 8, 1, 0, "edge_edge_distance_type", "Determine the closest pair between two edges."], [24, 8, 1, 0, "edge_edge_mollifier", "Overloaded function."], [24, 8, 1, 0, "edge_edge_mollifier_gradient", "Overloaded function."], [24, 8, 1, 0, "edge_edge_mollifier_hessian", "Overloaded function."], [24, 8, 1, 0, "edge_edge_mollifier_threshold", "Compute the threshold of the mollifier edge-edge distance."], [21, 8, 1, 0, "edge_edge_nonlinear_ccd", "Perform nonlinear CCD between two linear edges moving along nonlinear trajectories."], [25, 8, 1, 0, "edge_edge_relative_velocity", "Compute the relative velocity of the edges."], [25, 8, 1, 0, "edge_edge_relative_velocity_matrix", ""], [25, 8, 1, 0, "edge_edge_relative_velocity_matrix_jacobian", ""], [25, 8, 1, 0, "edge_edge_tangent_basis", "Compute a basis for the space tangent to the edge-edge pair."], [25, 8, 1, 0, "edge_edge_tangent_basis_jacobian", ""], [25, 8, 1, 0, "f0_SF", "Smooth friction mollifier function."], [25, 8, 1, 0, "f1_SF_over_x", "Compute the derivative of f0_SF divided by s (\\frac{f_0'(s)}{s})."], [28, 8, 1, 0, "get_num_threads", "get maximum number of threads to use"], [26, 8, 1, 0, "has_intersections", "Determine if the mesh has self intersections."], [18, 8, 1, 0, "initial_barrier_stiffness", "Compute an inital barrier stiffness using the barrier potential gradient."], [26, 8, 1, 0, "is_edge_intersecting_triangle", ""], [21, 8, 1, 0, "is_step_collision_free", "Determine if the step is collision free."], [24, 8, 1, 0, "line_line_distance", "Compute the distance between a two infinite lines in 3D."], [24, 8, 1, 0, "line_line_distance_gradient", "Compute the gradient of the distance between a two lines in 3D."], [24, 8, 1, 0, "line_line_distance_hessian", "Compute the hessian of the distance between a two lines in 3D."], [24, 8, 1, 0, "point_edge_distance", "Compute the distance between a point and edge in 2D or 3D."], [24, 8, 1, 0, "point_edge_distance_gradient", "Compute the gradient of the distance between a point and edge."], [24, 8, 1, 0, "point_edge_distance_hessian", "Compute the hessian of the distance between a point and edge."], [24, 8, 1, 0, "point_edge_distance_type", "Determine the closest pair between a point and edge."], [21, 8, 1, 0, "point_edge_nonlinear_ccd", "Perform nonlinear CCD between a point and a linear edge moving along nonlinear trajectories."], [25, 8, 1, 0, "point_edge_relative_velocity", "Compute the relative velocity of a point and an edge"], [25, 8, 1, 0, "point_edge_relative_velocity_matrix", ""], [25, 8, 1, 0, "point_edge_relative_velocity_matrix_jacobian", ""], [25, 8, 1, 0, "point_edge_tangent_basis", ""], [25, 8, 1, 0, "point_edge_tangent_basis_jacobian", ""], [24, 8, 1, 0, "point_line_distance", "Compute the distance between a point and line in 2D or 3D."], [24, 8, 1, 0, "point_line_distance_gradient", "Compute the gradient of the distance between a point and line."], [24, 8, 1, 0, "point_line_distance_hessian", "Compute the hessian of the distance between a point and line."], [24, 8, 1, 0, "point_plane_distance", "Overloaded function."], [24, 8, 1, 0, "point_plane_distance_gradient", "Overloaded function."], [24, 8, 1, 0, "point_plane_distance_hessian", "Overloaded function."], [24, 8, 1, 0, "point_point_distance", "Compute the distance between two points."], [24, 8, 1, 0, "point_point_distance_gradient", "Compute the gradient of the distance between two points."], [24, 8, 1, 0, "point_point_distance_hessian", "Compute the hessian of the distance between two points."], [21, 8, 1, 0, "point_point_nonlinear_ccd", "Perform nonlinear CCD between two points moving along nonlinear trajectories."], [25, 8, 1, 0, "point_point_relative_velocity", "Compute the relative velocity of two points"], [25, 8, 1, 0, "point_point_relative_velocity_matrix", "Compute the relative velocity premultiplier matrix"], [25, 8, 1, 0, "point_point_relative_velocity_matrix_jacobian", "Compute the jacobian of the relative velocity premultiplier matrix"], [25, 8, 1, 0, "point_point_tangent_basis", "Compute a basis for the space tangent to the point-point pair."], [25, 8, 1, 0, "point_point_tangent_basis_jacobian", ""], [24, 8, 1, 0, "point_triangle_distance", "Compute the distance between a points and a triangle."], [24, 8, 1, 0, "point_triangle_distance_gradient", "Compute the gradient of the distance between a points and a triangle."], [24, 8, 1, 0, "point_triangle_distance_hessian", "Compute the hessian of the distance between a points and a triangle."], [24, 8, 1, 0, "point_triangle_distance_type", "Determine the closest pair between a point and triangle."], [21, 8, 1, 0, "point_triangle_nonlinear_ccd", "Perform nonlinear CCD between a point and a linear triangle moving along nonlinear trajectories."], [25, 8, 1, 0, "point_triangle_relative_velocity", "Compute the relative velocity of the point to the triangle."], [25, 8, 1, 0, "point_triangle_relative_velocity_matrix", ""], [25, 8, 1, 0, "point_triangle_relative_velocity_matrix_jacobian", ""], [25, 8, 1, 0, "point_triangle_tangent_basis", "Compute a basis for the space tangent to the point-triangle pair."], [25, 8, 1, 0, "point_triangle_tangent_basis_jacobian", ""], [28, 8, 1, 0, "project_to_pd", "Matrix projection onto positive definite cone"], [28, 8, 1, 0, "project_to_psd", "Matrix projection onto positive semi-definite cone"], [26, 8, 1, 0, "segment_segment_intersect", "Given two segments in 2d test whether they intersect each other using predicates orient2d"], [28, 8, 1, 0, "set_logger_level", "Set log level"], [28, 8, 1, 0, "set_num_threads", "set maximum number of threads to use"], [18, 8, 1, 0, "update_barrier_stiffness", "Update the barrier stiffness if the distance is decreasing and less than dhat_epsilon_scale * diag."]], "ipctk.AABB": [[19, 4, 1, 0, "__annotations__", ""], [19, 5, 1, 0, "__init__", "Overloaded function."], [19, 4, 1, 0, "__module__", ""], [19, 5, 1, 0, "conservative_inflation", "Compute a conservative inflation of the AABB."], [19, 5, 1, 0, "from_point", "Overloaded function."], [19, 5, 1, 0, "intersects", "Check if another AABB intersects with this one."], [19, 7, 1, 0, "max", "Maximum corner of the AABB."], [19, 7, 1, 0, "min", "Minimum corner of the AABB."], [19, 7, 1, 0, "vertex_ids", "Vertex IDs attached to the AABB."]], "ipctk.AABB.__init__": [[19, 6, 2, "ipctk.AABB.__init__", "args", "Overloaded function."], [19, 6, 2, "ipctk.AABB.__init__", "kwargs", "Overloaded function."]], "ipctk.AABB.conservative_inflation": [[19, 6, 2, "ipctk.AABB.conservative_inflation", "inflation_radius", "Compute a conservative inflation of the AABB."], [19, 6, 2, "ipctk.AABB.conservative_inflation", "max", "Compute a conservative inflation of the AABB."], [19, 6, 2, "ipctk.AABB.conservative_inflation", "min", "Compute a conservative inflation of the AABB."]], "ipctk.AABB.from_point": [[19, 6, 2, "ipctk.AABB.from_point", "args", "Overloaded function."], [19, 6, 2, "ipctk.AABB.from_point", "kwargs", "Overloaded function."]], "ipctk.AABB.intersects": [[19, 6, 2, 0, "other", "The other AABB."], [19, 6, 2, "ipctk.AABB.intersects", "self", "Check if another AABB intersects with this one."]], "ipctk.BVH": [[19, 4, 1, 0, "__annotations__", ""], [19, 5, 1, 0, "__init__", ""], [19, 4, 1, 0, "__module__", ""]], "ipctk.BVH.__init__": [[19, 6, 2, "ipctk.BVH.__init__", "self", ""]], "ipctk.Barrier": [[18, 5, 1, 0, "__call__", "Evaluate the barrier function."], [18, 5, 1, 0, "__init__", ""], [18, 4, 1, 0, "__module__", ""], [18, 5, 1, 0, "first_derivative", "Evaluate the first derivative of the barrier function wrt d."], [18, 5, 1, 0, "second_derivative", "Evaluate the second derivative of the barrier function wrt d."], [18, 5, 1, 0, "units", "Get the units of the barrier function."]], "ipctk.Barrier.__call__": [[18, 6, 2, 0, "d", "The distance."], [18, 6, 2, 0, "dhat", "Activation distance of the barrier."], [18, 6, 2, "ipctk.Barrier.__call__", "self", "Evaluate the barrier function."]], "ipctk.Barrier.__init__": [[18, 6, 2, "ipctk.Barrier.__init__", "self", ""]], "ipctk.Barrier.first_derivative": [[18, 6, 2, 0, "d", "The distance."], [18, 6, 2, 0, "dhat", "Activation distance of the barrier."], [18, 6, 2, "ipctk.Barrier.first_derivative", "self", "Evaluate the first derivative of the barrier function wrt d."]], "ipctk.Barrier.second_derivative": [[18, 6, 2, 0, "d", "The distance."], [18, 6, 2, 0, "dhat", "Activation distance of the barrier."], [18, 6, 2, "ipctk.Barrier.second_derivative", "self", "Evaluate the second derivative of the barrier function wrt d."]], "ipctk.Barrier.units": [[18, 6, 2, 0, "dhat", "Activation distance of the barrier."], [18, 6, 2, "ipctk.Barrier.units", "self", "Get the units of the barrier function."]], "ipctk.BarrierPotential": [[27, 4, 1, 0, "__annotations__", ""], [27, 5, 1, 0, "__call__", "Overloaded function."], [27, 5, 1, 0, "__init__", "Overloaded function."], [27, 4, 1, 0, "__module__", ""], [27, 7, 1, 0, "barrier", "Barrier activation distance."], [27, 7, 1, 0, "dhat", "Barrier activation distance."], [27, 5, 1, 0, "gradient", "Overloaded function."], [27, 5, 1, 0, "hessian", "Overloaded function."], [27, 5, 1, 0, "shape_derivative", "Overloaded function."]], "ipctk.BarrierPotential.__call__": [[27, 6, 2, "ipctk.BarrierPotential.__call__", "args", "Overloaded function."], [27, 6, 2, "ipctk.BarrierPotential.__call__", "kwargs", "Overloaded function."]], "ipctk.BarrierPotential.__init__": [[27, 6, 2, "ipctk.BarrierPotential.__init__", "args", "Overloaded function."], [27, 6, 2, "ipctk.BarrierPotential.__init__", "kwargs", "Overloaded function."]], "ipctk.BarrierPotential.gradient": [[27, 6, 2, "ipctk.BarrierPotential.gradient", "args", "Overloaded function."], [27, 6, 2, "ipctk.BarrierPotential.gradient", "kwargs", "Overloaded function."]], "ipctk.BarrierPotential.hessian": [[27, 6, 2, "ipctk.BarrierPotential.hessian", "args", "Overloaded function."], [27, 6, 2, "ipctk.BarrierPotential.hessian", "kwargs", "Overloaded function."]], "ipctk.BarrierPotential.shape_derivative": [[27, 6, 2, "ipctk.BarrierPotential.shape_derivative", "args", "Overloaded function."], [27, 6, 2, "ipctk.BarrierPotential.shape_derivative", "kwargs", "Overloaded function."]], "ipctk.BroadPhase": [[19, 4, 1, 0, "__annotations__", ""], [19, 5, 1, 0, "__init__", ""], [19, 4, 1, 0, "__module__", ""], [19, 5, 1, 0, "build", "Overloaded function."], [19, 7, 1, 0, "can_vertices_collide", "Function for determining if two vertices can collide."], [19, 5, 1, 0, "clear", "Clear any built data."], [19, 5, 1, 0, "detect_collision_candidates", "Detect all collision candidates needed for a given dimensional simulation."], [19, 5, 1, 0, "detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [19, 5, 1, 0, "detect_edge_face_candidates", "Find the candidate edge-face intersections."], [19, 5, 1, 0, "detect_edge_vertex_candidates", "Find the candidate edge-vertex collisions."], [19, 5, 1, 0, "detect_face_face_candidates", "Find the candidate face-face collisions."], [19, 5, 1, 0, "detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [19, 5, 1, 0, "detect_vertex_vertex_candidates", "Find the candidate vertex-vertex collisions."], [19, 5, 1, 0, "make_broad_phase", "Construct a registered broad phase object."]], "ipctk.BroadPhase.__init__": [[19, 6, 2, "ipctk.BroadPhase.__init__", "args", ""], [19, 6, 2, "ipctk.BroadPhase.__init__", "kwargs", ""]], "ipctk.BroadPhase.build": [[19, 6, 2, "ipctk.BroadPhase.build", "args", "Overloaded function."], [19, 6, 2, "ipctk.BroadPhase.build", "kwargs", "Overloaded function."]], "ipctk.BroadPhase.clear": [[19, 6, 2, "ipctk.BroadPhase.clear", "self", "Clear any built data."]], "ipctk.BroadPhase.detect_collision_candidates": [[19, 6, 2, 0, "dim", "The dimension of the simulation (i.e., 2 or 3)."], [19, 6, 2, "ipctk.BroadPhase.detect_collision_candidates", "self", "Detect all collision candidates needed for a given dimensional simulation."]], "ipctk.BroadPhase.detect_edge_edge_candidates": [[19, 6, 2, "ipctk.BroadPhase.detect_edge_edge_candidates", "self", "Find the candidate edge-edge collisions."]], "ipctk.BroadPhase.detect_edge_face_candidates": [[19, 6, 2, "ipctk.BroadPhase.detect_edge_face_candidates", "self", "Find the candidate edge-face intersections."]], "ipctk.BroadPhase.detect_edge_vertex_candidates": [[19, 6, 2, "ipctk.BroadPhase.detect_edge_vertex_candidates", "self", "Find the candidate edge-vertex collisions."]], "ipctk.BroadPhase.detect_face_face_candidates": [[19, 6, 2, "ipctk.BroadPhase.detect_face_face_candidates", "self", "Find the candidate face-face collisions."]], "ipctk.BroadPhase.detect_face_vertex_candidates": [[19, 6, 2, "ipctk.BroadPhase.detect_face_vertex_candidates", "self", "Find the candidate face-vertex collisions."]], "ipctk.BroadPhase.detect_vertex_vertex_candidates": [[19, 6, 2, "ipctk.BroadPhase.detect_vertex_vertex_candidates", "self", "Find the candidate vertex-vertex collisions."]], "ipctk.BroadPhase.make_broad_phase": [[19, 6, 2, 0, "method", "The broad phase method to use."]], "ipctk.BroadPhaseMethod": [[19, 4, 1, 0, "BOUNDING_VOLUME_HIERARCHY", ""], [19, 4, 1, 0, "BRUTE_FORCE", ""], [19, 4, 1, 0, "HASH_GRID", ""], [19, 4, 1, 0, "SPATIAL_HASH", ""], [19, 4, 1, 0, "SWEEP_AND_PRUNE", ""], [19, 4, 1, 0, "SWEEP_AND_TINIEST_QUEUE", ""], [19, 4, 1, 0, "__annotations__", ""], [19, 5, 1, 0, "__eq__", ""], [19, 5, 1, 0, "__getstate__", ""], [19, 5, 1, 0, "__hash__", ""], [19, 5, 1, 0, "__index__", ""], [19, 5, 1, 0, "__init__", ""], [19, 5, 1, 0, "__int__", ""], [19, 4, 1, 0, "__members__", ""], [19, 4, 1, 0, "__module__", ""], [19, 5, 1, 0, "__ne__", ""], [19, 5, 1, 0, "__repr__", ""], [19, 5, 1, 0, "__setstate__", ""], [19, 5, 1, 0, "__str__", ""], [19, 7, 1, 0, "name", ""], [19, 7, 1, 0, "value", ""]], "ipctk.BroadPhaseMethod.__eq__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__eq__", "other", ""], [19, 6, 2, "ipctk.BroadPhaseMethod.__eq__", "self", ""]], "ipctk.BroadPhaseMethod.__getstate__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__getstate__", "self", ""]], "ipctk.BroadPhaseMethod.__hash__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__hash__", "self", ""]], "ipctk.BroadPhaseMethod.__index__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__index__", "self", ""]], "ipctk.BroadPhaseMethod.__init__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__init__", "self", ""], [19, 6, 2, "ipctk.BroadPhaseMethod.__init__", "value", ""]], "ipctk.BroadPhaseMethod.__int__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__int__", "self", ""]], "ipctk.BroadPhaseMethod.__ne__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__ne__", "other", ""], [19, 6, 2, "ipctk.BroadPhaseMethod.__ne__", "self", ""]], "ipctk.BroadPhaseMethod.__repr__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__repr__", "self", ""]], "ipctk.BroadPhaseMethod.__setstate__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__setstate__", "self", ""], [19, 6, 2, "ipctk.BroadPhaseMethod.__setstate__", "state", ""]], "ipctk.BroadPhaseMethod.__str__": [[19, 6, 2, "ipctk.BroadPhaseMethod.__str__", "self", ""]], "ipctk.BruteForce": [[19, 4, 1, 0, "__annotations__", ""], [19, 5, 1, 0, "__init__", ""], [19, 4, 1, 0, "__module__", ""]], "ipctk.BruteForce.__init__": [[19, 6, 2, "ipctk.BruteForce.__init__", "self", ""]], "ipctk.Candidates": [[20, 4, 1, 0, "__annotations__", ""], [20, 5, 1, 0, "__getitem__", ""], [20, 5, 1, 0, "__init__", ""], [20, 5, 1, 0, "__len__", ""], [20, 4, 1, 0, "__module__", ""], [20, 5, 1, 0, "build", "Overloaded function."], [20, 5, 1, 0, "clear", ""], [20, 5, 1, 0, "compute_cfl_stepsize", "Computes a CFL-inspired CCD maximum step step size."], [20, 5, 1, 0, "compute_collision_free_stepsize", "Computes a maximal step size that is collision free using the set of collision candidates."], [20, 5, 1, 0, "compute_noncandidate_conservative_stepsize", "Computes a conservative bound on the largest-feasible step size for surface primitives not in collision."], [20, 7, 1, 0, "ee_candidates", ""], [20, 5, 1, 0, "empty", ""], [20, 7, 1, 0, "ev_candidates", ""], [20, 7, 1, 0, "fv_candidates", ""], [20, 5, 1, 0, "is_step_collision_free", "Determine if the step is collision free from the set of candidates."], [20, 5, 1, 0, "save_obj", ""], [20, 7, 1, 0, "vv_candidates", ""]], "ipctk.Candidates.__getitem__": [[20, 6, 2, "ipctk.Candidates.__getitem__", "arg0", ""], [20, 6, 2, "ipctk.Candidates.__getitem__", "self", ""]], "ipctk.Candidates.__init__": [[20, 6, 2, "ipctk.Candidates.__init__", "self", ""]], "ipctk.Candidates.__len__": [[20, 6, 2, "ipctk.Candidates.__len__", "self", ""]], "ipctk.Candidates.build": [[20, 6, 2, "ipctk.Candidates.build", "args", "Overloaded function."], [20, 6, 2, "ipctk.Candidates.build", "kwargs", "Overloaded function."]], "ipctk.Candidates.clear": [[20, 6, 2, "ipctk.Candidates.clear", "self", ""]], "ipctk.Candidates.empty": [[20, 6, 2, "ipctk.Candidates.empty", "self", ""]], "ipctk.Candidates.save_obj": [[20, 6, 2, "ipctk.Candidates.save_obj", "edges", ""], [20, 6, 2, "ipctk.Candidates.save_obj", "faces", ""], [20, 6, 2, "ipctk.Candidates.save_obj", "filename", ""], [20, 6, 2, "ipctk.Candidates.save_obj", "self", ""], [20, 6, 2, "ipctk.Candidates.save_obj", "vertices", ""]], "ipctk.ClampedLogBarrier": [[18, 4, 1, 0, "__annotations__", ""], [18, 5, 1, 0, "__init__", ""], [18, 4, 1, 0, "__module__", ""]], "ipctk.ClampedLogBarrier.__init__": [[18, 6, 2, "ipctk.ClampedLogBarrier.__init__", "self", ""]], "ipctk.Collision": [[23, 4, 1, 0, "__annotations__", ""], [23, 5, 1, 0, "__init__", ""], [23, 4, 1, 0, "__module__", ""], [23, 7, 1, 0, "dmin", "The minimum separation distance."], [23, 5, 1, 0, "is_mollified", "Does the distance potentially have to be mollified?"], [23, 5, 1, 0, "mollifier", "Overloaded function."], [23, 5, 1, 0, "mollifier_gradient", "Overloaded function."], [23, 5, 1, 0, "mollifier_gradient_jacobian_wrt_x", "Compute the jacobian of the distance mollifier's gradient w.r.t. rest positions."], [23, 5, 1, 0, "mollifier_gradient_wrt_x", "Compute the gradient of the mollifier for the distance w.r.t. rest positions."], [23, 5, 1, 0, "mollifier_hessian", "Overloaded function."], [23, 5, 1, 0, "mollifier_threshold", "Compute the mollifier threshold for the distance."], [23, 7, 1, 0, "weight", "The term's weight (e.g., collision area)"], [23, 7, 1, 0, "weight_gradient", "The gradient of the term's weight wrt the rest positions."]], "ipctk.Collision.__init__": [[23, 6, 2, "ipctk.Collision.__init__", "args", ""], [23, 6, 2, "ipctk.Collision.__init__", "kwargs", ""]], "ipctk.Collision.is_mollified": [[23, 6, 2, "ipctk.Collision.is_mollified", "self", "Does the distance potentially have to be mollified?"]], "ipctk.Collision.mollifier": [[23, 6, 2, "ipctk.Collision.mollifier", "args", "Overloaded function."], [23, 6, 2, "ipctk.Collision.mollifier", "kwargs", "Overloaded function."]], "ipctk.Collision.mollifier_gradient": [[23, 6, 2, "ipctk.Collision.mollifier_gradient", "args", "Overloaded function."], [23, 6, 2, "ipctk.Collision.mollifier_gradient", "kwargs", "Overloaded function."]], "ipctk.Collision.mollifier_gradient_jacobian_wrt_x": [[23, 6, 2, 0, "positions", "The stencil's vertex positions."], [23, 6, 2, 0, "rest_positions", "The stencil's rest vertex positions."], [23, 6, 2, "ipctk.Collision.mollifier_gradient_jacobian_wrt_x", "self", "Compute the jacobian of the distance mollifier's gradient w.r.t. rest positions."]], "ipctk.Collision.mollifier_gradient_wrt_x": [[23, 6, 2, 0, "positions", "The stencil's vertex positions."], [23, 6, 2, 0, "rest_positions", "The stencil's rest vertex positions."], [23, 6, 2, "ipctk.Collision.mollifier_gradient_wrt_x", "self", "Compute the gradient of the mollifier for the distance w.r.t. rest positions."]], "ipctk.Collision.mollifier_hessian": [[23, 6, 2, "ipctk.Collision.mollifier_hessian", "args", "Overloaded function."], [23, 6, 2, "ipctk.Collision.mollifier_hessian", "kwargs", "Overloaded function."]], "ipctk.Collision.mollifier_threshold": [[23, 6, 2, 0, "rest_positions", "The stencil's rest vertex positions."], [23, 6, 2, "ipctk.Collision.mollifier_threshold", "self", "Compute the mollifier threshold for the distance."]], "ipctk.CollisionMesh": [[22, 4, 1, 0, "__annotations__", ""], [22, 5, 1, 0, "__init__", "Overloaded function."], [22, 4, 1, 0, "__module__", ""], [22, 5, 1, 0, "are_adjacencies_initialized", "Determine if the adjacencies have been initialized by calling init_adjacencies()."], [22, 5, 1, 0, "are_area_jacobians_initialized", "Determine if the area Jacobians have been initialized by calling init_area_jacobians()."], [22, 5, 1, 0, "build_from_full_mesh", "Helper function that automatically builds include_vertex using construct_is_on_surface."], [22, 7, 1, 0, "can_collide", "A function that takes two vertex IDs and returns true if the vertices (and faces or edges containing the vertices) can collide."], [22, 7, 1, 0, "codim_edges", "Get the indices of codimensional edges of the collision mesh (#CE x 1)."], [22, 7, 1, 0, "codim_vertices", "Get the indices of codimensional vertices of the collision mesh (#CV x 1)."], [22, 5, 1, 0, "construct_faces_to_edges", "Construct a matrix that maps from the faces' edges to rows in the edges matrix."], [22, 5, 1, 0, "construct_is_on_surface", "Construct a vector of bools indicating whether each vertex is on the surface."], [22, 7, 1, 0, "dim", "Get the dimension of the mesh."], [22, 5, 1, 0, "displace_vertices", "Compute the vertex positions from vertex displacements on the full mesh."], [22, 5, 1, 0, "edge_area", "Get the barycentric area of an edge."], [22, 5, 1, 0, "edge_area_gradient", "Get the gradient of the barycentric area of an edge wrt the rest positions of all points."], [22, 5, 1, 0, "edge_areas", "Get the barycentric area of the edges."], [22, 7, 1, 0, "edge_vertex_adjacencies", "Get the edge-vertex adjacency matrix."], [22, 7, 1, 0, "edges", "Get the edges of the collision mesh (#E \u00d7 2)."], [22, 7, 1, 0, "faces", "Get the faces of the collision mesh (#F \u00d7 3)."], [22, 7, 1, 0, "faces_to_edges", "Get the mapping from faces to edges of the collision mesh (#F \u00d7 3)."], [22, 7, 1, 0, "full_ndof", "Get the number of degrees of freedom in the full mesh."], [22, 7, 1, 0, "full_num_vertices", "Get the number of vertices in the full mesh."], [22, 5, 1, 0, "init_adjacencies", "Initialize vertex-vertex and edge-vertex adjacencies."], [22, 5, 1, 0, "init_area_jacobians", "Initialize vertex and edge areas."], [22, 5, 1, 0, "is_vertex_on_boundary", "Is a vertex on the boundary of the collision mesh?"], [22, 5, 1, 0, "map_displacements", "Map vertex displacements on the full mesh to vertex displacements on the collision mesh."], [22, 7, 1, 0, "ndof", "Get the number of degrees of freedom in the collision mesh."], [22, 7, 1, 0, "num_codim_edges", "Get the number of codimensional edges in the collision mesh."], [22, 7, 1, 0, "num_codim_vertices", "Get the number of codimensional vertices in the collision mesh."], [22, 7, 1, 0, "num_edges", "Get the number of edges in the collision mesh."], [22, 7, 1, 0, "num_faces", "Get the number of faces in the collision mesh."], [22, 7, 1, 0, "num_vertices", "Get the number of vertices in the collision mesh."], [22, 7, 1, 0, "rest_positions", "Get the vertices of the collision mesh at rest (#V \u00d7 dim)."], [22, 5, 1, 0, "to_full_dof", "Overloaded function."], [22, 5, 1, 0, "to_full_vertex_id", "Map a vertex ID to the corresponding vertex ID in the full mesh."], [22, 5, 1, 0, "vertex_area", "Get the barycentric area of a vertex."], [22, 5, 1, 0, "vertex_area_gradient", "Get the gradient of the barycentric area of a vertex wrt the rest positions of all points."], [22, 7, 1, 0, "vertex_areas", "Get the barycentric area of the vertices."], [22, 7, 1, 0, "vertex_edge_adjacencies", "Get the vertex-edge adjacency matrix."], [22, 7, 1, 0, "vertex_vertex_adjacencies", "Get the vertex-vertex adjacency matrix."], [22, 5, 1, 0, "vertices", "Compute the vertex positions from the positions of the full mesh."]], "ipctk.CollisionMesh.__init__": [[22, 6, 2, "ipctk.CollisionMesh.__init__", "args", "Overloaded function."], [22, 6, 2, "ipctk.CollisionMesh.__init__", "kwargs", "Overloaded function."]], "ipctk.CollisionMesh.are_adjacencies_initialized": [[22, 6, 2, "ipctk.CollisionMesh.are_adjacencies_initialized", "self", "Determine if the adjacencies have been initialized by calling init_adjacencies()."]], "ipctk.CollisionMesh.are_area_jacobians_initialized": [[22, 6, 2, "ipctk.CollisionMesh.are_area_jacobians_initialized", "self", "Determine if the area Jacobians have been initialized by calling init_area_jacobians()."]], "ipctk.CollisionMesh.build_from_full_mesh": [[22, 6, 2, 0, "edges", "The edge matrix of mesh (#E \u00d7 2)."], [22, 6, 2, 0, "faces", "The face matrix of mesh (#F \u00d7 3)."], [22, 6, 2, 0, "full_rest_positions", "The full vertices at rest (#FV \u00d7 dim)."]], "ipctk.CollisionMesh.construct_faces_to_edges": [[22, 6, 2, 0, "edges", "The edge matrix of mesh (#E \u00d7 2)."], [22, 6, 2, 0, "faces", "The face matrix of mesh (#F \u00d7 3)."]], "ipctk.CollisionMesh.construct_is_on_surface": [[22, 6, 2, 0, "codim_vertices", "The indices of codimensional vertices (#CV x 1)."], [22, 6, 2, 0, "edges", "The surface edges of the mesh (#E \u00d7 2)."], [22, 6, 2, 0, "num_vertices", "The number of vertices in the mesh."]], "ipctk.CollisionMesh.displace_vertices": [[22, 6, 2, 0, "full_displacements", "The vertex displacements on the full mesh (#FV \u00d7 dim)."], [22, 6, 2, "ipctk.CollisionMesh.displace_vertices", "self", "Compute the vertex positions from vertex displacements on the full mesh."]], "ipctk.CollisionMesh.edge_area": [[22, 6, 2, 0, "ei", "Edge ID."], [22, 6, 2, "ipctk.CollisionMesh.edge_area", "self", "Get the barycentric area of an edge."]], "ipctk.CollisionMesh.edge_area_gradient": [[22, 6, 2, 0, "ei", "Edge ID."], [22, 6, 2, "ipctk.CollisionMesh.edge_area_gradient", "self", "Get the gradient of the barycentric area of an edge wrt the rest positions of all points."]], "ipctk.CollisionMesh.edge_areas": [[22, 6, 2, "ipctk.CollisionMesh.edge_areas", "self", "Get the barycentric area of the edges."]], "ipctk.CollisionMesh.init_adjacencies": [[22, 6, 2, "ipctk.CollisionMesh.init_adjacencies", "self", "Initialize vertex-vertex and edge-vertex adjacencies."]], "ipctk.CollisionMesh.init_area_jacobians": [[22, 6, 2, "ipctk.CollisionMesh.init_area_jacobians", "self", "Initialize vertex and edge areas."]], "ipctk.CollisionMesh.is_vertex_on_boundary": [[22, 6, 2, "ipctk.CollisionMesh.is_vertex_on_boundary", "self", "Is a vertex on the boundary of the collision mesh?"], [22, 6, 2, 0, "vi", "Vertex ID."]], "ipctk.CollisionMesh.map_displacements": [[22, 6, 2, 0, "full_displacements", "The vertex displacements on the full mesh (#FV \u00d7 dim)."], [22, 6, 2, "ipctk.CollisionMesh.map_displacements", "self", "Map vertex displacements on the full mesh to vertex displacements on the collision mesh."]], "ipctk.CollisionMesh.to_full_dof": [[22, 6, 2, "ipctk.CollisionMesh.to_full_dof", "args", "Overloaded function."], [22, 6, 2, "ipctk.CollisionMesh.to_full_dof", "kwargs", "Overloaded function."]], "ipctk.CollisionMesh.to_full_vertex_id": [[22, 6, 2, 0, "id", "Vertex ID in the collision mesh."], [22, 6, 2, "ipctk.CollisionMesh.to_full_vertex_id", "self", "Map a vertex ID to the corresponding vertex ID in the full mesh."]], "ipctk.CollisionMesh.vertex_area": [[22, 6, 2, "ipctk.CollisionMesh.vertex_area", "self", "Get the barycentric area of a vertex."], [22, 6, 2, 0, "vi", "Vertex ID."]], "ipctk.CollisionMesh.vertex_area_gradient": [[22, 6, 2, "ipctk.CollisionMesh.vertex_area_gradient", "self", "Get the gradient of the barycentric area of a vertex wrt the rest positions of all points."], [22, 6, 2, 0, "vi", "Vertex ID."]], "ipctk.CollisionMesh.vertices": [[22, 6, 2, 0, "full_positions", "The vertex positions of the full mesh (#FV \u00d7 dim)."], [22, 6, 2, "ipctk.CollisionMesh.vertices", "self", "Compute the vertex positions from the positions of the full mesh."]], "ipctk.Collisions": [[23, 4, 1, 0, "__annotations__", ""], [23, 5, 1, 0, "__getitem__", "Get a reference to collision at index i."], [23, 5, 1, 0, "__init__", ""], [23, 5, 1, 0, "__len__", "Get the number of collisions."], [23, 4, 1, 0, "__module__", ""], [23, 5, 1, 0, "build", "Overloaded function."], [23, 5, 1, 0, "clear", "Clear the collision set."], [23, 5, 1, 0, "compute_minimum_distance", "Computes the minimum distance between any non-adjacent elements."], [23, 7, 1, 0, "ee_collisions", ""], [23, 5, 1, 0, "empty", "Get if the collision set is empty."], [23, 7, 1, 0, "enable_shape_derivatives", "If the Collisions are using the convergent formulation."], [23, 7, 1, 0, "ev_collisions", ""], [23, 7, 1, 0, "fv_collisions", ""], [23, 5, 1, 0, "is_edge_edge", "Get if the collision at i is an edge-edge collision."], [23, 5, 1, 0, "is_edge_vertex", "Get if the collision at i is an edge-vertex collision."], [23, 5, 1, 0, "is_face_vertex", "Get if the collision at i is an face-vertex collision."], [23, 5, 1, 0, "is_plane_vertex", "Get if the collision at i is an plane-vertex collision."], [23, 5, 1, 0, "is_vertex_vertex", "Get if the collision at i is a vertex-vertex collision."], [23, 7, 1, 0, "pv_collisions", ""], [23, 5, 1, 0, "to_string", "Overloaded function."], [23, 7, 1, 0, "use_area_weighting", "If the Collisions should use the convergent formulation."], [23, 7, 1, 0, "use_improved_max_approximator", "If the Collisions should use the improved max approximator."], [23, 7, 1, 0, "vv_collisions", ""]], "ipctk.Collisions.__getitem__": [[23, 6, 2, 0, "i", "The index of the collision."], [23, 6, 2, "ipctk.Collisions.__getitem__", "self", "Get a reference to collision at index i."]], "ipctk.Collisions.__init__": [[23, 6, 2, "ipctk.Collisions.__init__", "self", ""]], "ipctk.Collisions.__len__": [[23, 6, 2, "ipctk.Collisions.__len__", "self", "Get the number of collisions."]], "ipctk.Collisions.build": [[23, 6, 2, "ipctk.Collisions.build", "args", "Overloaded function."], [23, 6, 2, "ipctk.Collisions.build", "kwargs", "Overloaded function."]], "ipctk.Collisions.clear": [[23, 6, 2, "ipctk.Collisions.clear", "self", "Clear the collision set."]], "ipctk.Collisions.empty": [[23, 6, 2, "ipctk.Collisions.empty", "self", "Get if the collision set is empty."]], "ipctk.Collisions.is_edge_edge": [[23, 6, 2, 0, "i", "The index of the collision."], [23, 6, 2, "ipctk.Collisions.is_edge_edge", "self", "Get if the collision at i is an edge-edge collision."]], "ipctk.Collisions.is_edge_vertex": [[23, 6, 2, 0, "i", "The index of the collision."], [23, 6, 2, "ipctk.Collisions.is_edge_vertex", "self", "Get if the collision at i is an edge-vertex collision."]], "ipctk.Collisions.is_face_vertex": [[23, 6, 2, 0, "i", "The index of the collision."], [23, 6, 2, "ipctk.Collisions.is_face_vertex", "self", "Get if the collision at i is an face-vertex collision."]], "ipctk.Collisions.is_plane_vertex": [[23, 6, 2, 0, "i", "The index of the collision."], [23, 6, 2, "ipctk.Collisions.is_plane_vertex", "self", "Get if the collision at i is an plane-vertex collision."]], "ipctk.Collisions.is_vertex_vertex": [[23, 6, 2, 0, "i", "The index of the collision."], [23, 6, 2, "ipctk.Collisions.is_vertex_vertex", "self", "Get if the collision at i is a vertex-vertex collision."]], "ipctk.Collisions.to_string": [[23, 6, 2, "ipctk.Collisions.to_string", "args", "Overloaded function."], [23, 6, 2, "ipctk.Collisions.to_string", "kwargs", "Overloaded function."]], "ipctk.ContinuousCollisionCandidate": [[20, 4, 1, 0, "__annotations__", ""], [20, 5, 1, 0, "__init__", ""], [20, 4, 1, 0, "__module__", ""], [20, 5, 1, 0, "ccd", "Perform narrow-phase CCD on the candidate."], [20, 5, 1, 0, "print_ccd_query", "Print the CCD query to cout."]], "ipctk.ContinuousCollisionCandidate.__init__": [[20, 6, 2, "ipctk.ContinuousCollisionCandidate.__init__", "args", ""], [20, 6, 2, "ipctk.ContinuousCollisionCandidate.__init__", "kwargs", ""]], "ipctk.ContinuousCollisionCandidate.print_ccd_query": [[20, 6, 2, "ipctk.ContinuousCollisionCandidate.print_ccd_query", "self", "Print the CCD query to cout."], [20, 6, 2, 0, "vertices_t0", "Stencil vertices at the start of the time step."], [20, 6, 2, "ipctk.ContinuousCollisionCandidate.print_ccd_query", "vertices_t1", "Print the CCD query to cout."]], "ipctk.EdgeEdgeCandidate": [[20, 4, 1, 0, "__annotations__", ""], [20, 5, 1, 0, "__eq__", ""], [20, 4, 1, 0, "__hash__", ""], [20, 5, 1, 0, "__init__", ""], [20, 5, 1, 0, "__lt__", "Compare EdgeEdgeCandidates for sorting."], [20, 4, 1, 0, "__module__", ""], [20, 5, 1, 0, "__ne__", ""], [20, 5, 1, 0, "__repr__", ""], [20, 5, 1, 0, "__str__", ""], [20, 7, 1, 0, "edge0_id", "ID of the first edge."], [20, 7, 1, 0, "edge1_id", "ID of the second edge."], [20, 5, 1, 0, "known_dtype", ""]], "ipctk.EdgeEdgeCandidate.__eq__": [[20, 6, 2, "ipctk.EdgeEdgeCandidate.__eq__", "other", ""], [20, 6, 2, "ipctk.EdgeEdgeCandidate.__eq__", "self", ""]], "ipctk.EdgeEdgeCandidate.__init__": [[20, 6, 2, "ipctk.EdgeEdgeCandidate.__init__", "edge0_id", ""], [20, 6, 2, "ipctk.EdgeEdgeCandidate.__init__", "edge1_id", ""], [20, 6, 2, "ipctk.EdgeEdgeCandidate.__init__", "self", ""]], "ipctk.EdgeEdgeCandidate.__lt__": [[20, 6, 2, "ipctk.EdgeEdgeCandidate.__lt__", "other", "Compare EdgeEdgeCandidates for sorting."], [20, 6, 2, "ipctk.EdgeEdgeCandidate.__lt__", "self", "Compare EdgeEdgeCandidates for sorting."]], "ipctk.EdgeEdgeCandidate.__ne__": [[20, 6, 2, "ipctk.EdgeEdgeCandidate.__ne__", "other", ""], [20, 6, 2, "ipctk.EdgeEdgeCandidate.__ne__", "self", ""]], "ipctk.EdgeEdgeCandidate.__repr__": [[20, 6, 2, "ipctk.EdgeEdgeCandidate.__repr__", "self", ""]], "ipctk.EdgeEdgeCandidate.__str__": [[20, 6, 2, "ipctk.EdgeEdgeCandidate.__str__", "self", ""]], "ipctk.EdgeEdgeCandidate.known_dtype": [[20, 6, 2, "ipctk.EdgeEdgeCandidate.known_dtype", "self", ""]], "ipctk.EdgeEdgeCollision": [[23, 4, 1, 0, "__annotations__", ""], [23, 5, 1, 0, "__eq__", ""], [23, 4, 1, 0, "__hash__", ""], [23, 5, 1, 0, "__init__", "Overloaded function."], [23, 5, 1, 0, "__lt__", ""], [23, 4, 1, 0, "__module__", ""], [23, 5, 1, 0, "__ne__", ""], [23, 7, 1, 0, "dtype", "Cached distance type."], [23, 7, 1, 0, "eps_x", "Mollifier activation threshold."]], "ipctk.EdgeEdgeCollision.__eq__": [[23, 6, 2, "ipctk.EdgeEdgeCollision.__eq__", "other", ""], [23, 6, 2, "ipctk.EdgeEdgeCollision.__eq__", "self", ""]], "ipctk.EdgeEdgeCollision.__init__": [[23, 6, 2, "ipctk.EdgeEdgeCollision.__init__", "args", "Overloaded function."], [23, 6, 2, "ipctk.EdgeEdgeCollision.__init__", "kwargs", "Overloaded function."]], "ipctk.EdgeEdgeCollision.__lt__": [[23, 6, 2, "ipctk.EdgeEdgeCollision.__lt__", "other", ""], [23, 6, 2, "ipctk.EdgeEdgeCollision.__lt__", "self", ""]], "ipctk.EdgeEdgeCollision.__ne__": [[23, 6, 2, "ipctk.EdgeEdgeCollision.__ne__", "other", ""], [23, 6, 2, "ipctk.EdgeEdgeCollision.__ne__", "self", ""]], "ipctk.EdgeEdgeDistanceType": [[24, 4, 1, 0, "AUTO", ""], [24, 4, 1, 0, "EA0_EB", ""], [24, 4, 1, 0, "EA0_EB0", ""], [24, 4, 1, 0, "EA0_EB1", ""], [24, 4, 1, 0, "EA1_EB", ""], [24, 4, 1, 0, "EA1_EB0", ""], [24, 4, 1, 0, "EA1_EB1", ""], [24, 4, 1, 0, "EA_EB", ""], [24, 4, 1, 0, "EA_EB0", ""], [24, 4, 1, 0, "EA_EB1", ""], [24, 4, 1, 0, "__annotations__", ""], [24, 5, 1, 0, "__eq__", ""], [24, 5, 1, 0, "__getstate__", ""], [24, 5, 1, 0, "__hash__", ""], [24, 5, 1, 0, "__index__", ""], [24, 5, 1, 0, "__init__", ""], [24, 5, 1, 0, "__int__", ""], [24, 4, 1, 0, "__members__", ""], [24, 4, 1, 0, "__module__", ""], [24, 5, 1, 0, "__ne__", ""], [24, 5, 1, 0, "__repr__", ""], [24, 5, 1, 0, "__setstate__", ""], [24, 5, 1, 0, "__str__", ""], [24, 7, 1, 0, "name", ""], [24, 7, 1, 0, "value", ""]], "ipctk.EdgeEdgeDistanceType.__eq__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__eq__", "other", ""], [24, 6, 2, "ipctk.EdgeEdgeDistanceType.__eq__", "self", ""]], "ipctk.EdgeEdgeDistanceType.__getstate__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__getstate__", "self", ""]], "ipctk.EdgeEdgeDistanceType.__hash__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__hash__", "self", ""]], "ipctk.EdgeEdgeDistanceType.__index__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__index__", "self", ""]], "ipctk.EdgeEdgeDistanceType.__init__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__init__", "self", ""], [24, 6, 2, "ipctk.EdgeEdgeDistanceType.__init__", "value", ""]], "ipctk.EdgeEdgeDistanceType.__int__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__int__", "self", ""]], "ipctk.EdgeEdgeDistanceType.__ne__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__ne__", "other", ""], [24, 6, 2, "ipctk.EdgeEdgeDistanceType.__ne__", "self", ""]], "ipctk.EdgeEdgeDistanceType.__repr__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__repr__", "self", ""]], "ipctk.EdgeEdgeDistanceType.__setstate__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__setstate__", "self", ""], [24, 6, 2, "ipctk.EdgeEdgeDistanceType.__setstate__", "state", ""]], "ipctk.EdgeEdgeDistanceType.__str__": [[24, 6, 2, "ipctk.EdgeEdgeDistanceType.__str__", "self", ""]], "ipctk.EdgeEdgeFrictionCollision": [[25, 4, 1, 0, "__annotations__", ""], [25, 5, 1, 0, "__init__", "Overloaded function."], [25, 4, 1, 0, "__module__", ""]], "ipctk.EdgeEdgeFrictionCollision.__init__": [[25, 6, 2, "ipctk.EdgeEdgeFrictionCollision.__init__", "args", "Overloaded function."], [25, 6, 2, "ipctk.EdgeEdgeFrictionCollision.__init__", "kwargs", "Overloaded function."]], "ipctk.EdgeFaceCandidate": [[20, 4, 1, 0, "__annotations__", ""], [20, 5, 1, 0, "__eq__", ""], [20, 4, 1, 0, "__hash__", ""], [20, 5, 1, 0, "__init__", ""], [20, 5, 1, 0, "__lt__", "Compare EdgeFaceCandidate for sorting."], [20, 4, 1, 0, "__module__", ""], [20, 5, 1, 0, "__ne__", ""], [20, 5, 1, 0, "__repr__", ""], [20, 5, 1, 0, "__str__", ""], [20, 7, 1, 0, "edge_id", "ID of the edge"], [20, 7, 1, 0, "face_id", "ID of the face"]], "ipctk.EdgeFaceCandidate.__eq__": [[20, 6, 2, "ipctk.EdgeFaceCandidate.__eq__", "other", ""], [20, 6, 2, "ipctk.EdgeFaceCandidate.__eq__", "self", ""]], "ipctk.EdgeFaceCandidate.__init__": [[20, 6, 2, "ipctk.EdgeFaceCandidate.__init__", "edge_id", ""], [20, 6, 2, "ipctk.EdgeFaceCandidate.__init__", "face_id", ""], [20, 6, 2, "ipctk.EdgeFaceCandidate.__init__", "self", ""]], "ipctk.EdgeFaceCandidate.__lt__": [[20, 6, 2, "ipctk.EdgeFaceCandidate.__lt__", "other", "Compare EdgeFaceCandidate for sorting."], [20, 6, 2, "ipctk.EdgeFaceCandidate.__lt__", "self", "Compare EdgeFaceCandidate for sorting."]], "ipctk.EdgeFaceCandidate.__ne__": [[20, 6, 2, "ipctk.EdgeFaceCandidate.__ne__", "other", ""], [20, 6, 2, "ipctk.EdgeFaceCandidate.__ne__", "self", ""]], "ipctk.EdgeFaceCandidate.__repr__": [[20, 6, 2, "ipctk.EdgeFaceCandidate.__repr__", "self", ""]], "ipctk.EdgeFaceCandidate.__str__": [[20, 6, 2, "ipctk.EdgeFaceCandidate.__str__", "self", ""]], "ipctk.EdgeVertexCandidate": [[20, 4, 1, 0, "__annotations__", ""], [20, 5, 1, 0, "__eq__", ""], [20, 4, 1, 0, "__hash__", ""], [20, 5, 1, 0, "__init__", ""], [20, 5, 1, 0, "__lt__", "Compare EdgeVertexCandidates for sorting."], [20, 4, 1, 0, "__module__", ""], [20, 5, 1, 0, "__ne__", ""], [20, 5, 1, 0, "__repr__", ""], [20, 5, 1, 0, "__str__", ""], [20, 7, 1, 0, "edge_id", "ID of the edge"], [20, 5, 1, 0, "known_dtype", ""], [20, 7, 1, 0, "vertex_id", "ID of the vertex"]], "ipctk.EdgeVertexCandidate.__eq__": [[20, 6, 2, "ipctk.EdgeVertexCandidate.__eq__", "other", ""], [20, 6, 2, "ipctk.EdgeVertexCandidate.__eq__", "self", ""]], "ipctk.EdgeVertexCandidate.__init__": [[20, 6, 2, "ipctk.EdgeVertexCandidate.__init__", "edge_id", ""], [20, 6, 2, "ipctk.EdgeVertexCandidate.__init__", "self", ""], [20, 6, 2, "ipctk.EdgeVertexCandidate.__init__", "vertex_id", ""]], "ipctk.EdgeVertexCandidate.__lt__": [[20, 6, 2, "ipctk.EdgeVertexCandidate.__lt__", "other", "Compare EdgeVertexCandidates for sorting."], [20, 6, 2, "ipctk.EdgeVertexCandidate.__lt__", "self", "Compare EdgeVertexCandidates for sorting."]], "ipctk.EdgeVertexCandidate.__ne__": [[20, 6, 2, "ipctk.EdgeVertexCandidate.__ne__", "other", ""], [20, 6, 2, "ipctk.EdgeVertexCandidate.__ne__", "self", ""]], "ipctk.EdgeVertexCandidate.__repr__": [[20, 6, 2, "ipctk.EdgeVertexCandidate.__repr__", "self", ""]], "ipctk.EdgeVertexCandidate.__str__": [[20, 6, 2, "ipctk.EdgeVertexCandidate.__str__", "self", ""]], "ipctk.EdgeVertexCandidate.known_dtype": [[20, 6, 2, "ipctk.EdgeVertexCandidate.known_dtype", "self", ""]], "ipctk.EdgeVertexCollision": [[23, 4, 1, 0, "__annotations__", ""], [23, 5, 1, 0, "__init__", "Overloaded function."], [23, 4, 1, 0, "__module__", ""]], "ipctk.EdgeVertexCollision.__init__": [[23, 6, 2, "ipctk.EdgeVertexCollision.__init__", "args", "Overloaded function."], [23, 6, 2, "ipctk.EdgeVertexCollision.__init__", "kwargs", "Overloaded function."]], "ipctk.EdgeVertexFrictionCollision": [[25, 4, 1, 0, "__annotations__", ""], [25, 5, 1, 0, "__init__", "Overloaded function."], [25, 4, 1, 0, "__module__", ""]], "ipctk.EdgeVertexFrictionCollision.__init__": [[25, 6, 2, "ipctk.EdgeVertexFrictionCollision.__init__", "args", "Overloaded function."], [25, 6, 2, "ipctk.EdgeVertexFrictionCollision.__init__", "kwargs", "Overloaded function."]], "ipctk.FaceVertexCandidate": [[20, 4, 1, 0, "__annotations__", ""], [20, 5, 1, 0, "__eq__", ""], [20, 4, 1, 0, "__hash__", ""], [20, 5, 1, 0, "__init__", ""], [20, 5, 1, 0, "__lt__", "Compare FaceVertexCandidate for sorting."], [20, 4, 1, 0, "__module__", ""], [20, 5, 1, 0, "__ne__", ""], [20, 5, 1, 0, "__repr__", ""], [20, 5, 1, 0, "__str__", ""], [20, 7, 1, 0, "face_id", "ID of the face"], [20, 5, 1, 0, "known_dtype", ""], [20, 7, 1, 0, "vertex_id", "ID of the vertex"]], "ipctk.FaceVertexCandidate.__eq__": [[20, 6, 2, "ipctk.FaceVertexCandidate.__eq__", "other", ""], [20, 6, 2, "ipctk.FaceVertexCandidate.__eq__", "self", ""]], "ipctk.FaceVertexCandidate.__init__": [[20, 6, 2, "ipctk.FaceVertexCandidate.__init__", "face_id", ""], [20, 6, 2, "ipctk.FaceVertexCandidate.__init__", "self", ""], [20, 6, 2, "ipctk.FaceVertexCandidate.__init__", "vertex_id", ""]], "ipctk.FaceVertexCandidate.__lt__": [[20, 6, 2, "ipctk.FaceVertexCandidate.__lt__", "other", "Compare FaceVertexCandidate for sorting."], [20, 6, 2, "ipctk.FaceVertexCandidate.__lt__", "self", "Compare FaceVertexCandidate for sorting."]], "ipctk.FaceVertexCandidate.__ne__": [[20, 6, 2, "ipctk.FaceVertexCandidate.__ne__", "other", ""], [20, 6, 2, "ipctk.FaceVertexCandidate.__ne__", "self", ""]], "ipctk.FaceVertexCandidate.__repr__": [[20, 6, 2, "ipctk.FaceVertexCandidate.__repr__", "self", ""]], "ipctk.FaceVertexCandidate.__str__": [[20, 6, 2, "ipctk.FaceVertexCandidate.__str__", "self", ""]], "ipctk.FaceVertexCandidate.known_dtype": [[20, 6, 2, "ipctk.FaceVertexCandidate.known_dtype", "self", ""]], "ipctk.FaceVertexCollision": [[23, 4, 1, 0, "__annotations__", ""], [23, 5, 1, 0, "__init__", "Overloaded function."], [23, 4, 1, 0, "__module__", ""]], "ipctk.FaceVertexCollision.__init__": [[23, 6, 2, "ipctk.FaceVertexCollision.__init__", "args", "Overloaded function."], [23, 6, 2, "ipctk.FaceVertexCollision.__init__", "kwargs", "Overloaded function."]], "ipctk.FaceVertexFrictionCollision": [[25, 4, 1, 0, "__annotations__", ""], [25, 5, 1, 0, "__init__", "Overloaded function."], [25, 4, 1, 0, "__module__", ""]], "ipctk.FaceVertexFrictionCollision.__init__": [[25, 6, 2, "ipctk.FaceVertexFrictionCollision.__init__", "args", "Overloaded function."], [25, 6, 2, "ipctk.FaceVertexFrictionCollision.__init__", "kwargs", "Overloaded function."]], "ipctk.FrictionCollision": [[25, 4, 1, 0, "__annotations__", ""], [25, 5, 1, 0, "__init__", ""], [25, 4, 1, 0, "__module__", ""], [25, 7, 1, 0, "closest_point", "Barycentric coordinates of the closest point(s)"], [25, 5, 1, 0, "compute_closest_point", "Compute the barycentric coordinates of the closest point."], [25, 5, 1, 0, "compute_closest_point_jacobian", "Compute the Jacobian of the barycentric coordinates of the closest point."], [25, 5, 1, 0, "compute_normal_force_magnitude", "Compute the normal force magnitude."], [25, 5, 1, 0, "compute_normal_force_magnitude_gradient", "Compute the gradient of the normal force magnitude."], [25, 5, 1, 0, "compute_tangent_basis", "Compute the tangent basis of the collision."], [25, 5, 1, 0, "compute_tangent_basis_jacobian", "Compute the Jacobian of the tangent basis of the collision."], [25, 5, 1, 0, "dim", "Get the dimension of the collision."], [25, 7, 1, 0, "mu", "Coefficient of friction"], [25, 5, 1, 0, "ndof", "Get the number of degrees of freedom for the collision."], [25, 7, 1, 0, "normal_force_magnitude", "Collision force magnitude"], [25, 5, 1, 0, "relative_velocity", "Compute the relative velocity of the collision."], [25, 5, 1, 0, "relative_velocity_matrix", "Overloaded function."], [25, 5, 1, 0, "relative_velocity_matrix_jacobian", "Construct the Jacobian of the relative velocity premultiplier wrt the closest points."], [25, 7, 1, 0, "tangent_basis", "Tangent basis of the collision (max size 3\u00d72)"], [25, 7, 1, 0, "weight", "Weight"], [25, 7, 1, 0, "weight_gradient", "Gradient of weight with respect to all DOF"]], "ipctk.FrictionCollision.__init__": [[25, 6, 2, "ipctk.FrictionCollision.__init__", "args", ""], [25, 6, 2, "ipctk.FrictionCollision.__init__", "kwargs", ""]], "ipctk.FrictionCollision.compute_closest_point": [[25, 6, 2, 0, "positions", "Collision stencil's vertex positions."], [25, 6, 2, "ipctk.FrictionCollision.compute_closest_point", "self", "Compute the barycentric coordinates of the closest point."]], "ipctk.FrictionCollision.compute_closest_point_jacobian": [[25, 6, 2, 0, "positions", "Collision stencil's vertex positions."], [25, 6, 2, "ipctk.FrictionCollision.compute_closest_point_jacobian", "self", "Compute the Jacobian of the barycentric coordinates of the closest point."]], "ipctk.FrictionCollision.compute_normal_force_magnitude": [[25, 6, 2, "ipctk.FrictionCollision.compute_normal_force_magnitude", "barrier_potential", "Compute the normal force magnitude."], [25, 6, 2, 0, "barrier_stiffness", "Barrier stiffness."], [25, 6, 2, 0, "dmin", "Minimum distance."], [25, 6, 2, 0, "positions", "Collision stencil's vertex positions."], [25, 6, 2, "ipctk.FrictionCollision.compute_normal_force_magnitude", "self", "Compute the normal force magnitude."]], "ipctk.FrictionCollision.compute_normal_force_magnitude_gradient": [[25, 6, 2, "ipctk.FrictionCollision.compute_normal_force_magnitude_gradient", "barrier_potential", "Compute the gradient of the normal force magnitude."], [25, 6, 2, 0, "barrier_stiffness", "Barrier stiffness."], [25, 6, 2, 0, "dmin", "Minimum distance."], [25, 6, 2, 0, "positions", "Collision stencil's vertex positions."], [25, 6, 2, "ipctk.FrictionCollision.compute_normal_force_magnitude_gradient", "self", "Compute the gradient of the normal force magnitude."]], "ipctk.FrictionCollision.compute_tangent_basis": [[25, 6, 2, 0, "positions", "Collision stencil's vertex positions."], [25, 6, 2, "ipctk.FrictionCollision.compute_tangent_basis", "self", "Compute the tangent basis of the collision."]], "ipctk.FrictionCollision.compute_tangent_basis_jacobian": [[25, 6, 2, 0, "positions", "Collision stencil's vertex positions."], [25, 6, 2, "ipctk.FrictionCollision.compute_tangent_basis_jacobian", "self", "Compute the Jacobian of the tangent basis of the collision."]], "ipctk.FrictionCollision.dim": [[25, 6, 2, "ipctk.FrictionCollision.dim", "self", "Get the dimension of the collision."]], "ipctk.FrictionCollision.ndof": [[25, 6, 2, "ipctk.FrictionCollision.ndof", "self", "Get the number of degrees of freedom for the collision."]], "ipctk.FrictionCollision.relative_velocity": [[25, 6, 2, "ipctk.FrictionCollision.relative_velocity", "self", "Compute the relative velocity of the collision."], [25, 6, 2, "ipctk.FrictionCollision.relative_velocity", "velocities", "Compute the relative velocity of the collision."]], "ipctk.FrictionCollision.relative_velocity_matrix": [[25, 6, 2, "ipctk.FrictionCollision.relative_velocity_matrix", "args", "Overloaded function."], [25, 6, 2, "ipctk.FrictionCollision.relative_velocity_matrix", "kwargs", "Overloaded function."]], "ipctk.FrictionCollision.relative_velocity_matrix_jacobian": [[25, 6, 2, 0, "closest_point", "Barycentric coordinates of the closest point."], [25, 6, 2, "ipctk.FrictionCollision.relative_velocity_matrix_jacobian", "self", "Construct the Jacobian of the relative velocity premultiplier wrt the closest points."]], "ipctk.FrictionCollisions": [[25, 4, 1, 0, "__annotations__", ""], [25, 5, 1, 0, "__getitem__", "Get a reference to collision at index i."], [25, 5, 1, 0, "__init__", ""], [25, 5, 1, 0, "__len__", "Get the number of friction collisions."], [25, 4, 1, 0, "__module__", ""], [25, 5, 1, 0, "build", "Overloaded function."], [25, 5, 1, 0, "clear", "Clear the friction collisions."], [25, 5, 1, 0, "default_blend_mu", ""], [25, 7, 1, 0, "ee_collisions", ""], [25, 5, 1, 0, "empty", "Get if the friction collisions are empty."], [25, 7, 1, 0, "ev_collisions", ""], [25, 7, 1, 0, "fv_collisions", ""], [25, 7, 1, 0, "vv_collisions", ""]], "ipctk.FrictionCollisions.__getitem__": [[25, 6, 2, 0, "i", "The index of the collision."], [25, 6, 2, "ipctk.FrictionCollisions.__getitem__", "self", "Get a reference to collision at index i."]], "ipctk.FrictionCollisions.__init__": [[25, 6, 2, "ipctk.FrictionCollisions.__init__", "self", ""]], "ipctk.FrictionCollisions.__len__": [[25, 6, 2, "ipctk.FrictionCollisions.__len__", "self", "Get the number of friction collisions."]], "ipctk.FrictionCollisions.build": [[25, 6, 2, "ipctk.FrictionCollisions.build", "args", "Overloaded function."], [25, 6, 2, "ipctk.FrictionCollisions.build", "kwargs", "Overloaded function."]], "ipctk.FrictionCollisions.clear": [[25, 6, 2, "ipctk.FrictionCollisions.clear", "self", "Clear the friction collisions."]], "ipctk.FrictionCollisions.default_blend_mu": [[25, 6, 2, "ipctk.FrictionCollisions.default_blend_mu", "mu0", ""], [25, 6, 2, "ipctk.FrictionCollisions.default_blend_mu", "mu1", ""]], "ipctk.FrictionCollisions.empty": [[25, 6, 2, "ipctk.FrictionCollisions.empty", "self", "Get if the friction collisions are empty."]], "ipctk.FrictionPotential": [[27, 3, 1, 0, "DiffWRT", "Bases: pybind11_object"], [27, 4, 1, 0, "LAGGED_DISPLACEMENTS", ""], [27, 4, 1, 0, "REST_POSITIONS", ""], [27, 4, 1, 0, "VELOCITIES", ""], [27, 4, 1, 0, "__annotations__", ""], [27, 5, 1, 0, "__call__", "Overloaded function."], [27, 5, 1, 0, "__init__", "Construct a friction potential."], [27, 4, 1, 0, "__module__", ""], [27, 7, 1, 0, "epsv", "The smooth friction mollifier parameter \\epsilon_{v}."], [27, 5, 1, 0, "force", "Overloaded function."], [27, 5, 1, 0, "force_jacobian", "Overloaded function."], [27, 5, 1, 0, "gradient", "Overloaded function."], [27, 5, 1, 0, "hessian", "Overloaded function."]], "ipctk.FrictionPotential.DiffWRT": [[27, 4, 1, 0, "LAGGED_DISPLACEMENTS", ""], [27, 4, 1, 0, "REST_POSITIONS", ""], [27, 4, 1, 0, "VELOCITIES", ""], [27, 4, 1, 0, "__annotations__", ""], [27, 5, 1, 0, "__eq__", ""], [27, 5, 1, 0, "__getstate__", ""], [27, 5, 1, 0, "__hash__", ""], [27, 5, 1, 0, "__index__", ""], [27, 5, 1, 0, "__init__", ""], [27, 5, 1, 0, "__int__", ""], [27, 4, 1, 0, "__members__", ""], [27, 4, 1, 0, "__module__", ""], [27, 5, 1, 0, "__ne__", ""], [27, 5, 1, 0, "__repr__", ""], [27, 5, 1, 0, "__setstate__", ""], [27, 5, 1, 0, "__str__", ""], [27, 7, 1, 0, "name", ""], [27, 7, 1, 0, "value", ""]], "ipctk.FrictionPotential.DiffWRT.__eq__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__eq__", "other", ""], [27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__eq__", "self", ""]], "ipctk.FrictionPotential.DiffWRT.__getstate__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__getstate__", "self", ""]], "ipctk.FrictionPotential.DiffWRT.__hash__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__hash__", "self", ""]], "ipctk.FrictionPotential.DiffWRT.__index__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__index__", "self", ""]], "ipctk.FrictionPotential.DiffWRT.__init__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__init__", "self", ""], [27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__init__", "value", ""]], "ipctk.FrictionPotential.DiffWRT.__int__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__int__", "self", ""]], "ipctk.FrictionPotential.DiffWRT.__ne__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__ne__", "other", ""], [27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__ne__", "self", ""]], "ipctk.FrictionPotential.DiffWRT.__repr__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__repr__", "self", ""]], "ipctk.FrictionPotential.DiffWRT.__setstate__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__setstate__", "self", ""], [27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__setstate__", "state", ""]], "ipctk.FrictionPotential.DiffWRT.__str__": [[27, 6, 2, "ipctk.FrictionPotential.DiffWRT.__str__", "self", ""]], "ipctk.FrictionPotential.__call__": [[27, 6, 2, "ipctk.FrictionPotential.__call__", "args", "Overloaded function."], [27, 6, 2, "ipctk.FrictionPotential.__call__", "kwargs", "Overloaded function."]], "ipctk.FrictionPotential.__init__": [[27, 6, 2, 0, "epsv", "The smooth friction mollifier parameter \\\\epsilon_{v}."], [27, 6, 2, "ipctk.FrictionPotential.__init__", "self", "Construct a friction potential."]], "ipctk.FrictionPotential.force": [[27, 6, 2, "ipctk.FrictionPotential.force", "args", "Overloaded function."], [27, 6, 2, "ipctk.FrictionPotential.force", "kwargs", "Overloaded function."]], "ipctk.FrictionPotential.force_jacobian": [[27, 6, 2, "ipctk.FrictionPotential.force_jacobian", "args", "Overloaded function."], [27, 6, 2, "ipctk.FrictionPotential.force_jacobian", "kwargs", "Overloaded function."]], "ipctk.FrictionPotential.gradient": [[27, 6, 2, "ipctk.FrictionPotential.gradient", "args", "Overloaded function."], [27, 6, 2, "ipctk.FrictionPotential.gradient", "kwargs", "Overloaded function."]], "ipctk.FrictionPotential.hessian": [[27, 6, 2, "ipctk.FrictionPotential.hessian", "args", "Overloaded function."], [27, 6, 2, "ipctk.FrictionPotential.hessian", "kwargs", "Overloaded function."]], "ipctk.HashGrid": [[19, 4, 1, 0, "__annotations__", ""], [19, 5, 1, 0, "__init__", ""], [19, 4, 1, 0, "__module__", ""], [19, 7, 1, 0, "cell_size", ""], [19, 7, 1, 0, "domain_max", ""], [19, 7, 1, 0, "domain_min", ""], [19, 7, 1, 0, "grid_size", ""]], "ipctk.HashGrid.__init__": [[19, 6, 2, "ipctk.HashGrid.__init__", "self", ""]], "ipctk.IntervalNonlinearTrajectory": [[21, 4, 1, 0, "__annotations__", ""], [21, 5, 1, 0, "__call__", "Overloaded function."], [21, 5, 1, 0, "__init__", ""], [21, 4, 1, 0, "__module__", ""], [21, 5, 1, 0, "max_distance_from_linear", "Compute the maximum distance from the nonlinear trajectory to a linearized trajectory"]], "ipctk.IntervalNonlinearTrajectory.__call__": [[21, 6, 2, "ipctk.IntervalNonlinearTrajectory.__call__", "args", "Overloaded function."], [21, 6, 2, "ipctk.IntervalNonlinearTrajectory.__call__", "kwargs", "Overloaded function."]], "ipctk.IntervalNonlinearTrajectory.__init__": [[21, 6, 2, "ipctk.IntervalNonlinearTrajectory.__init__", "self", ""]], "ipctk.IntervalNonlinearTrajectory.max_distance_from_linear": [[21, 6, 2, "ipctk.IntervalNonlinearTrajectory.max_distance_from_linear", "self", "Compute the maximum distance from the nonlinear trajectory to a linearized trajectory"], [21, 6, 2, 0, "t0", "Start time of the trajectory"], [21, 6, 2, 0, "t1", "End time of the trajectory"]], "ipctk.LoggerLevel": [[28, 4, 1, 0, "__annotations__", ""], [28, 5, 1, 0, "__eq__", ""], [28, 5, 1, 0, "__getstate__", ""], [28, 5, 1, 0, "__hash__", ""], [28, 5, 1, 0, "__index__", ""], [28, 5, 1, 0, "__init__", ""], [28, 5, 1, 0, "__int__", ""], [28, 4, 1, 0, "__members__", ""], [28, 4, 1, 0, "__module__", ""], [28, 5, 1, 0, "__ne__", ""], [28, 5, 1, 0, "__repr__", ""], [28, 5, 1, 0, "__setstate__", ""], [28, 5, 1, 0, "__str__", ""], [28, 4, 1, 0, "critical", ""], [28, 4, 1, 0, "debug", ""], [28, 4, 1, 0, "error", ""], [28, 4, 1, 0, "info", ""], [28, 7, 1, 0, "name", ""], [28, 4, 1, 0, "off", ""], [28, 4, 1, 0, "trace", ""], [28, 7, 1, 0, "value", ""], [28, 4, 1, 0, "warn", ""]], "ipctk.LoggerLevel.__eq__": [[28, 6, 2, "ipctk.LoggerLevel.__eq__", "other", ""], [28, 6, 2, "ipctk.LoggerLevel.__eq__", "self", ""]], "ipctk.LoggerLevel.__getstate__": [[28, 6, 2, "ipctk.LoggerLevel.__getstate__", "self", ""]], "ipctk.LoggerLevel.__hash__": [[28, 6, 2, "ipctk.LoggerLevel.__hash__", "self", ""]], "ipctk.LoggerLevel.__index__": [[28, 6, 2, "ipctk.LoggerLevel.__index__", "self", ""]], "ipctk.LoggerLevel.__init__": [[28, 6, 2, "ipctk.LoggerLevel.__init__", "self", ""], [28, 6, 2, "ipctk.LoggerLevel.__init__", "value", ""]], "ipctk.LoggerLevel.__int__": [[28, 6, 2, "ipctk.LoggerLevel.__int__", "self", ""]], "ipctk.LoggerLevel.__ne__": [[28, 6, 2, "ipctk.LoggerLevel.__ne__", "other", ""], [28, 6, 2, "ipctk.LoggerLevel.__ne__", "self", ""]], "ipctk.LoggerLevel.__repr__": [[28, 6, 2, "ipctk.LoggerLevel.__repr__", "self", ""]], "ipctk.LoggerLevel.__setstate__": [[28, 6, 2, "ipctk.LoggerLevel.__setstate__", "self", ""], [28, 6, 2, "ipctk.LoggerLevel.__setstate__", "state", ""]], "ipctk.LoggerLevel.__str__": [[28, 6, 2, "ipctk.LoggerLevel.__str__", "self", ""]], "ipctk.NonlinearTrajectory": [[21, 4, 1, 0, "__annotations__", ""], [21, 5, 1, 0, "__call__", "Compute the point's position at time t"], [21, 5, 1, 0, "__init__", ""], [21, 4, 1, 0, "__module__", ""], [21, 5, 1, 0, "max_distance_from_linear", "Compute the maximum distance from the nonlinear trajectory to a linearized trajectory"]], "ipctk.NonlinearTrajectory.__call__": [[21, 6, 2, "ipctk.NonlinearTrajectory.__call__", "self", "Compute the point's position at time t"], [21, 6, 2, "ipctk.NonlinearTrajectory.__call__", "t", "Compute the point's position at time t"]], "ipctk.NonlinearTrajectory.__init__": [[21, 6, 2, "ipctk.NonlinearTrajectory.__init__", "self", ""]], "ipctk.NonlinearTrajectory.max_distance_from_linear": [[21, 6, 2, "ipctk.NonlinearTrajectory.max_distance_from_linear", "self", "Compute the maximum distance from the nonlinear trajectory to a linearized trajectory"], [21, 6, 2, 0, "t0", "Start time of the trajectory"], [21, 6, 2, 0, "t1", "End time of the trajectory"]], "ipctk.PSDProjectionMethod": [[28, 4, 1, 0, "ABS", ""], [28, 4, 1, 0, "CLAMP", ""], [28, 4, 1, 0, "NONE", ""], [28, 4, 1, 0, "__annotations__", ""], [28, 5, 1, 0, "__eq__", ""], [28, 5, 1, 0, "__getstate__", ""], [28, 5, 1, 0, "__hash__", ""], [28, 5, 1, 0, "__index__", ""], [28, 5, 1, 0, "__init__", ""], [28, 5, 1, 0, "__int__", ""], [28, 4, 1, 0, "__members__", ""], [28, 4, 1, 0, "__module__", ""], [28, 5, 1, 0, "__ne__", ""], [28, 5, 1, 0, "__repr__", ""], [28, 5, 1, 0, "__setstate__", ""], [28, 5, 1, 0, "__str__", ""], [28, 7, 1, 0, "name", ""], [28, 7, 1, 0, "value", ""]], "ipctk.PSDProjectionMethod.__eq__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__eq__", "other", ""], [28, 6, 2, "ipctk.PSDProjectionMethod.__eq__", "self", ""]], "ipctk.PSDProjectionMethod.__getstate__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__getstate__", "self", ""]], "ipctk.PSDProjectionMethod.__hash__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__hash__", "self", ""]], "ipctk.PSDProjectionMethod.__index__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__index__", "self", ""]], "ipctk.PSDProjectionMethod.__init__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__init__", "self", ""], [28, 6, 2, "ipctk.PSDProjectionMethod.__init__", "value", ""]], "ipctk.PSDProjectionMethod.__int__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__int__", "self", ""]], "ipctk.PSDProjectionMethod.__ne__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__ne__", "other", ""], [28, 6, 2, "ipctk.PSDProjectionMethod.__ne__", "self", ""]], "ipctk.PSDProjectionMethod.__repr__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__repr__", "self", ""]], "ipctk.PSDProjectionMethod.__setstate__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__setstate__", "self", ""], [28, 6, 2, "ipctk.PSDProjectionMethod.__setstate__", "state", ""]], "ipctk.PSDProjectionMethod.__str__": [[28, 6, 2, "ipctk.PSDProjectionMethod.__str__", "self", ""]], "ipctk.PlaneVertexCollision": [[23, 4, 1, 0, "__annotations__", ""], [23, 5, 1, 0, "__init__", ""], [23, 4, 1, 0, "__module__", ""], [23, 7, 1, 0, "plane_normal", "The plane's normal."], [23, 7, 1, 0, "plane_origin", "The plane's origin."], [23, 7, 1, 0, "vertex_id", "The vertex's id."]], "ipctk.PlaneVertexCollision.__init__": [[23, 6, 2, "ipctk.PlaneVertexCollision.__init__", "plane_normal", ""], [23, 6, 2, "ipctk.PlaneVertexCollision.__init__", "plane_origin", ""], [23, 6, 2, "ipctk.PlaneVertexCollision.__init__", "self", ""], [23, 6, 2, "ipctk.PlaneVertexCollision.__init__", "vertex_id", ""]], "ipctk.PointEdgeDistanceType": [[24, 4, 1, 0, "AUTO", ""], [24, 4, 1, 0, "P_E", ""], [24, 4, 1, 0, "P_E0", ""], [24, 4, 1, 0, "P_E1", ""], [24, 4, 1, 0, "__annotations__", ""], [24, 5, 1, 0, "__eq__", ""], [24, 5, 1, 0, "__getstate__", ""], [24, 5, 1, 0, "__hash__", ""], [24, 5, 1, 0, "__index__", ""], [24, 5, 1, 0, "__init__", ""], [24, 5, 1, 0, "__int__", ""], [24, 4, 1, 0, "__members__", ""], [24, 4, 1, 0, "__module__", ""], [24, 5, 1, 0, "__ne__", ""], [24, 5, 1, 0, "__repr__", ""], [24, 5, 1, 0, "__setstate__", ""], [24, 5, 1, 0, "__str__", ""], [24, 7, 1, 0, "name", ""], [24, 7, 1, 0, "value", ""]], "ipctk.PointEdgeDistanceType.__eq__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__eq__", "other", ""], [24, 6, 2, "ipctk.PointEdgeDistanceType.__eq__", "self", ""]], "ipctk.PointEdgeDistanceType.__getstate__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__getstate__", "self", ""]], "ipctk.PointEdgeDistanceType.__hash__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__hash__", "self", ""]], "ipctk.PointEdgeDistanceType.__index__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__index__", "self", ""]], "ipctk.PointEdgeDistanceType.__init__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__init__", "self", ""], [24, 6, 2, "ipctk.PointEdgeDistanceType.__init__", "value", ""]], "ipctk.PointEdgeDistanceType.__int__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__int__", "self", ""]], "ipctk.PointEdgeDistanceType.__ne__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__ne__", "other", ""], [24, 6, 2, "ipctk.PointEdgeDistanceType.__ne__", "self", ""]], "ipctk.PointEdgeDistanceType.__repr__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__repr__", "self", ""]], "ipctk.PointEdgeDistanceType.__setstate__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__setstate__", "self", ""], [24, 6, 2, "ipctk.PointEdgeDistanceType.__setstate__", "state", ""]], "ipctk.PointEdgeDistanceType.__str__": [[24, 6, 2, "ipctk.PointEdgeDistanceType.__str__", "self", ""]], "ipctk.PointTriangleDistanceType": [[24, 4, 1, 0, "AUTO", ""], [24, 4, 1, 0, "P_E0", ""], [24, 4, 1, 0, "P_E1", ""], [24, 4, 1, 0, "P_E2", ""], [24, 4, 1, 0, "P_T", ""], [24, 4, 1, 0, "P_T0", ""], [24, 4, 1, 0, "P_T1", ""], [24, 4, 1, 0, "P_T2", ""], [24, 4, 1, 0, "__annotations__", ""], [24, 5, 1, 0, "__eq__", ""], [24, 5, 1, 0, "__getstate__", ""], [24, 5, 1, 0, "__hash__", ""], [24, 5, 1, 0, "__index__", ""], [24, 5, 1, 0, "__init__", ""], [24, 5, 1, 0, "__int__", ""], [24, 4, 1, 0, "__members__", ""], [24, 4, 1, 0, "__module__", ""], [24, 5, 1, 0, "__ne__", ""], [24, 5, 1, 0, "__repr__", ""], [24, 5, 1, 0, "__setstate__", ""], [24, 5, 1, 0, "__str__", ""], [24, 7, 1, 0, "name", ""], [24, 7, 1, 0, "value", ""]], "ipctk.PointTriangleDistanceType.__eq__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__eq__", "other", ""], [24, 6, 2, "ipctk.PointTriangleDistanceType.__eq__", "self", ""]], "ipctk.PointTriangleDistanceType.__getstate__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__getstate__", "self", ""]], "ipctk.PointTriangleDistanceType.__hash__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__hash__", "self", ""]], "ipctk.PointTriangleDistanceType.__index__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__index__", "self", ""]], "ipctk.PointTriangleDistanceType.__init__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__init__", "self", ""], [24, 6, 2, "ipctk.PointTriangleDistanceType.__init__", "value", ""]], "ipctk.PointTriangleDistanceType.__int__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__int__", "self", ""]], "ipctk.PointTriangleDistanceType.__ne__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__ne__", "other", ""], [24, 6, 2, "ipctk.PointTriangleDistanceType.__ne__", "self", ""]], "ipctk.PointTriangleDistanceType.__repr__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__repr__", "self", ""]], "ipctk.PointTriangleDistanceType.__setstate__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__setstate__", "self", ""], [24, 6, 2, "ipctk.PointTriangleDistanceType.__setstate__", "state", ""]], "ipctk.PointTriangleDistanceType.__str__": [[24, 6, 2, "ipctk.PointTriangleDistanceType.__str__", "self", ""]], "ipctk.SpatialHash": [[19, 4, 1, 0, "__annotations__", ""], [19, 5, 1, 0, "__init__", "Overloaded function."], [19, 4, 1, 0, "__module__", ""], [19, 5, 1, 0, "build", "Overloaded function."], [19, 5, 1, 0, "clear", ""], [19, 7, 1, 0, "edge_start_ind", ""], [19, 7, 1, 0, "edge_to_voxels", "Map from edge index to the voxel indices it occupies."], [19, 7, 1, 0, "face_to_voxels", "Map from face index to the voxel indices it occupies."], [19, 5, 1, 0, "is_edge_index", "Check if primitive index refers to an edge."], [19, 5, 1, 0, "is_triangle_index", "Check if primitive index refers to a triangle."], [19, 5, 1, 0, "is_vertex_index", "Check if primitive index refers to a vertex."], [19, 7, 1, 0, "left_bottom_corner", "The left bottom corner of the world bounding box."], [19, 7, 1, 0, "one_div_voxelSize", "1.0 / voxel_size"], [19, 7, 1, 0, "point_to_voxels", "Map from point index to the voxel indices it occupies."], [19, 7, 1, 0, "right_top_corner", "The right top corner of the world bounding box."], [19, 5, 1, 0, "to_edge_index", "Convert a primitive index to an edge index."], [19, 5, 1, 0, "to_triangle_index", "Convert a primitive index to a triangle index."], [19, 7, 1, 0, "tri_start_ind", ""], [19, 7, 1, 0, "voxel_count", "The number of voxels in each dimension."], [19, 7, 1, 0, "voxel_count_0x1", "The number of voxels in the first two dimensions."], [19, 7, 1, 0, "voxel_to_primitives", "Map from voxel index to the primitive indices it contains."]], "ipctk.SpatialHash.__init__": [[19, 6, 2, "ipctk.SpatialHash.__init__", "args", "Overloaded function."], [19, 6, 2, "ipctk.SpatialHash.__init__", "kwargs", "Overloaded function."]], "ipctk.SpatialHash.build": [[19, 6, 2, "ipctk.SpatialHash.build", "args", "Overloaded function."], [19, 6, 2, "ipctk.SpatialHash.build", "kwargs", "Overloaded function."]], "ipctk.SpatialHash.clear": [[19, 6, 2, "ipctk.SpatialHash.clear", "self", ""]], "ipctk.SpatialHash.is_edge_index": [[19, 6, 2, "ipctk.SpatialHash.is_edge_index", "idx", "Check if primitive index refers to an edge."], [19, 6, 2, "ipctk.SpatialHash.is_edge_index", "self", "Check if primitive index refers to an edge."]], "ipctk.SpatialHash.is_triangle_index": [[19, 6, 2, "ipctk.SpatialHash.is_triangle_index", "idx", "Check if primitive index refers to a triangle."], [19, 6, 2, "ipctk.SpatialHash.is_triangle_index", "self", "Check if primitive index refers to a triangle."]], "ipctk.SpatialHash.is_vertex_index": [[19, 6, 2, "ipctk.SpatialHash.is_vertex_index", "idx", "Check if primitive index refers to a vertex."], [19, 6, 2, "ipctk.SpatialHash.is_vertex_index", "self", "Check if primitive index refers to a vertex."]], "ipctk.SpatialHash.to_edge_index": [[19, 6, 2, "ipctk.SpatialHash.to_edge_index", "idx", "Convert a primitive index to an edge index."], [19, 6, 2, "ipctk.SpatialHash.to_edge_index", "self", "Convert a primitive index to an edge index."]], "ipctk.SpatialHash.to_triangle_index": [[19, 6, 2, "ipctk.SpatialHash.to_triangle_index", "idx", "Convert a primitive index to a triangle index."], [19, 6, 2, "ipctk.SpatialHash.to_triangle_index", "self", "Convert a primitive index to a triangle index."]], "ipctk.SweepAndPrune": [[19, 4, 1, 0, "__annotations__", ""], [19, 5, 1, 0, "__init__", ""], [19, 4, 1, 0, "__module__", ""]], "ipctk.SweepAndPrune.__init__": [[19, 6, 2, "ipctk.SweepAndPrune.__init__", "self", ""]], "ipctk.VertexVertexCandidate": [[20, 4, 1, 0, "__annotations__", ""], [20, 5, 1, 0, "__eq__", ""], [20, 4, 1, 0, "__hash__", ""], [20, 5, 1, 0, "__init__", ""], [20, 5, 1, 0, "__lt__", "Compare EdgeVertexCandidates for sorting."], [20, 4, 1, 0, "__module__", ""], [20, 5, 1, 0, "__ne__", ""], [20, 5, 1, 0, "__repr__", ""], [20, 5, 1, 0, "__str__", ""], [20, 7, 1, 0, "vertex0_id", "ID of the first vertex"], [20, 7, 1, 0, "vertex1_id", "ID of the second vertex"]], "ipctk.VertexVertexCandidate.__eq__": [[20, 6, 2, "ipctk.VertexVertexCandidate.__eq__", "other", ""], [20, 6, 2, "ipctk.VertexVertexCandidate.__eq__", "self", ""]], "ipctk.VertexVertexCandidate.__init__": [[20, 6, 2, "ipctk.VertexVertexCandidate.__init__", "self", ""], [20, 6, 2, "ipctk.VertexVertexCandidate.__init__", "vertex0_id", ""], [20, 6, 2, "ipctk.VertexVertexCandidate.__init__", "vertex1_id", ""]], "ipctk.VertexVertexCandidate.__lt__": [[20, 6, 2, "ipctk.VertexVertexCandidate.__lt__", "other", "Compare EdgeVertexCandidates for sorting."], [20, 6, 2, "ipctk.VertexVertexCandidate.__lt__", "self", "Compare EdgeVertexCandidates for sorting."]], "ipctk.VertexVertexCandidate.__ne__": [[20, 6, 2, "ipctk.VertexVertexCandidate.__ne__", "other", ""], [20, 6, 2, "ipctk.VertexVertexCandidate.__ne__", "self", ""]], "ipctk.VertexVertexCandidate.__repr__": [[20, 6, 2, "ipctk.VertexVertexCandidate.__repr__", "self", ""]], "ipctk.VertexVertexCandidate.__str__": [[20, 6, 2, "ipctk.VertexVertexCandidate.__str__", "self", ""]], "ipctk.VertexVertexCollision": [[23, 4, 1, 0, "__annotations__", ""], [23, 5, 1, 0, "__init__", "Overloaded function."], [23, 4, 1, 0, "__module__", ""]], "ipctk.VertexVertexCollision.__init__": [[23, 6, 2, "ipctk.VertexVertexCollision.__init__", "args", "Overloaded function."], [23, 6, 2, "ipctk.VertexVertexCollision.__init__", "kwargs", "Overloaded function."]], "ipctk.VertexVertexFrictionCollision": [[25, 4, 1, 0, "__annotations__", ""], [25, 5, 1, 0, "__init__", "Overloaded function."], [25, 4, 1, 0, "__module__", ""]], "ipctk.VertexVertexFrictionCollision.__init__": [[25, 6, 2, "ipctk.VertexVertexFrictionCollision.__init__", "args", "Overloaded function."], [25, 6, 2, "ipctk.VertexVertexFrictionCollision.__init__", "kwargs", "Overloaded function."]], "ipctk.barrier": [[18, 6, 2, 0, "d", "The distance."], [18, 6, 2, 0, "dhat", "Activation distance of the barrier."]], "ipctk.barrier_first_derivative": [[18, 6, 2, 0, "d", "The distance."], [18, 6, 2, 0, "dhat", "Activation distance of the barrier."]], "ipctk.barrier_second_derivative": [[18, 6, 2, 0, "d", "The distance."], [18, 6, 2, 0, "dhat", "Activation distance of the barrier."]], "ipctk.compute_normal_force_magnitude": [[25, 6, 2, "ipctk.compute_normal_force_magnitude", "barrier", ""], [25, 6, 2, "ipctk.compute_normal_force_magnitude", "barrier_stiffness", ""], [25, 6, 2, "ipctk.compute_normal_force_magnitude", "dhat", ""], [25, 6, 2, "ipctk.compute_normal_force_magnitude", "distance_squared", ""], [25, 6, 2, "ipctk.compute_normal_force_magnitude", "dmin", ""]], "ipctk.compute_normal_force_magnitude_gradient": [[25, 6, 2, "ipctk.compute_normal_force_magnitude_gradient", "barrier", ""], [25, 6, 2, "ipctk.compute_normal_force_magnitude_gradient", "barrier_stiffness", ""], [25, 6, 2, "ipctk.compute_normal_force_magnitude_gradient", "dhat", ""], [25, 6, 2, "ipctk.compute_normal_force_magnitude_gradient", "distance_squared", ""], [25, 6, 2, "ipctk.compute_normal_force_magnitude_gradient", "distance_squared_gradient", ""], [25, 6, 2, "ipctk.compute_normal_force_magnitude_gradient", "dmin", ""]], "ipctk.conservative_piecewise_linear_ccd": [[21, 6, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact."], [21, 6, 2, 0, "distance", "Return the distance for a given time in [0, 1]."], [21, 6, 2, 0, "linear_ccd", "Perform linear CCD on a given time interval."], [21, 6, 2, 0, "max_distance_from_linear", "Return the maximum distance from the linearized trajectory for a given time interval."], [21, 6, 2, 0, "min_distance", "Minimum separation distance between the objects."], [21, 6, 2, 0, "tmax", "Maximum time to check for collision."]], "ipctk.df1_x_minus_f1_over_x3": [[25, 6, 2, 0, "epsv", "Mollifier parameter \\epsilon_v."], [25, 6, 2, 0, "s", "The tangential relative speed."]], "ipctk.edge_edge_cross_squarednorm": [[24, 6, 2, 0, "ea0", "The first vertex of the first edge."], [24, 6, 2, 0, "ea1", "The second vertex of the first edge."], [24, 6, 2, 0, "eb0", "The first vertex of the second edge."], [24, 6, 2, 0, "eb1", "The second vertex of the second edge."]], "ipctk.edge_edge_cross_squarednorm_gradient": [[24, 6, 2, 0, "ea0", "The first vertex of the first edge."], [24, 6, 2, 0, "ea1", "The second vertex of the first edge."], [24, 6, 2, 0, "eb0", "The first vertex of the second edge."], [24, 6, 2, 0, "eb1", "The second vertex of the second edge."]], "ipctk.edge_edge_cross_squarednorm_hessian": [[24, 6, 2, 0, "ea0", "The first vertex of the first edge."], [24, 6, 2, 0, "ea1", "The second vertex of the first edge."], [24, 6, 2, 0, "eb0", "The first vertex of the second edge."], [24, 6, 2, 0, "eb1", "The second vertex of the second edge."]], "ipctk.edge_edge_distance_type": [[24, 6, 2, 0, "ea0", "The first vertex of the first edge."], [24, 6, 2, 0, "ea1", "The second vertex of the first edge."], [24, 6, 2, 0, "eb0", "The first vertex of the second edge."], [24, 6, 2, 0, "eb1", "The second vertex of the second edge."]], "ipctk.edge_edge_mollifier": [[24, 6, 2, "ipctk.edge_edge_mollifier", "args", "Overloaded function."], [24, 6, 2, "ipctk.edge_edge_mollifier", "kwargs", "Overloaded function."]], "ipctk.edge_edge_mollifier_gradient": [[24, 6, 2, "ipctk.edge_edge_mollifier_gradient", "args", "Overloaded function."], [24, 6, 2, "ipctk.edge_edge_mollifier_gradient", "kwargs", "Overloaded function."]], "ipctk.edge_edge_mollifier_hessian": [[24, 6, 2, "ipctk.edge_edge_mollifier_hessian", "args", "Overloaded function."], [24, 6, 2, "ipctk.edge_edge_mollifier_hessian", "kwargs", "Overloaded function."]], "ipctk.edge_edge_mollifier_threshold": [[24, 6, 2, 0, "ea0_rest", "The rest position of the first vertex of the first edge."], [24, 6, 2, 0, "ea1_rest", "The rest position of the second vertex of the first edge."], [24, 6, 2, 0, "eb0_rest", "The rest position of the first vertex of the second edge."], [24, 6, 2, 0, "eb1_rest", "The rest position of the second vertex of the second edge."]], "ipctk.edge_edge_nonlinear_ccd": [[21, 6, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact"], [21, 6, 2, 0, "ea0", "First edge's first endpoint's trajectory"], [21, 6, 2, 0, "ea1", "First edge's second endpoint's trajectory"], [21, 6, 2, 0, "eb0", "Second edge's first endpoint's trajectory"], [21, 6, 2, 0, "eb1", "Second edge's second endpoint's trajectory"], [21, 6, 2, 0, "max_iterations", "Maximum number of iterations for the linear CCD algorithm"], [21, 6, 2, 0, "min_distance", "Minimum separation distance between the two edges"], [21, 6, 2, 0, "tmax", "Maximum time to check for collision"], [21, 6, 2, 0, "tolerance", "Tolerance for the linear CCD algorithm"]], "ipctk.edge_edge_relative_velocity": [[25, 6, 2, 0, "coords", "Two parametric coordinates of the closest points on the edges"], [25, 6, 2, 0, "dea0", "Velocity of the first endpoint of the first edge"], [25, 6, 2, 0, "dea1", "Velocity of the second endpoint of the first edge"], [25, 6, 2, 0, "deb0", "Velocity of the first endpoint of the second edge"], [25, 6, 2, 0, "deb1", "Velocity of the second endpoint of the second edge"]], "ipctk.edge_edge_relative_velocity_matrix": [[25, 6, 2, "ipctk.edge_edge_relative_velocity_matrix", "coords", ""], [25, 6, 2, "ipctk.edge_edge_relative_velocity_matrix", "dim", ""]], "ipctk.edge_edge_relative_velocity_matrix_jacobian": [[25, 6, 2, "ipctk.edge_edge_relative_velocity_matrix_jacobian", "coords", ""], [25, 6, 2, "ipctk.edge_edge_relative_velocity_matrix_jacobian", "dim", ""]], "ipctk.edge_edge_tangent_basis": [[25, 6, 2, "ipctk.edge_edge_tangent_basis", "ea0", "Compute a basis for the space tangent to the edge-edge pair."], [25, 6, 2, "ipctk.edge_edge_tangent_basis", "ea1", "Compute a basis for the space tangent to the edge-edge pair."], [25, 6, 2, "ipctk.edge_edge_tangent_basis", "eb0", "Compute a basis for the space tangent to the edge-edge pair."], [25, 6, 2, "ipctk.edge_edge_tangent_basis", "eb1", "Compute a basis for the space tangent to the edge-edge pair."]], "ipctk.edge_edge_tangent_basis_jacobian": [[25, 6, 2, "ipctk.edge_edge_tangent_basis_jacobian", "ea0", ""], [25, 6, 2, "ipctk.edge_edge_tangent_basis_jacobian", "ea1", ""], [25, 6, 2, "ipctk.edge_edge_tangent_basis_jacobian", "eb0", ""], [25, 6, 2, "ipctk.edge_edge_tangent_basis_jacobian", "eb1", ""]], "ipctk.f0_SF": [[25, 6, 2, 0, "epsv", "Mollifier parameter \\epsilon_v."], [25, 6, 2, 0, "s", "The tangential relative speed."]], "ipctk.f1_SF_over_x": [[25, 6, 2, 0, "epsv", "Mollifier parameter \\epsilon_v."], [25, 6, 2, 0, "s", "The tangential relative speed."]], "ipctk.initial_barrier_stiffness": [[18, 6, 2, 0, "average_mass", "Average mass of all bodies."], [18, 6, 2, 0, "barrier", "Barrier function."], [18, 6, 2, 0, "bbox_diagonal", "Length of the diagonal of the bounding box of the scene."], [18, 6, 2, 0, "dhat", "Activation distance of the barrier."], [18, 6, 2, 0, "dmin", "Minimum distance between elements."], [18, 6, 2, 0, "grad_barrier", "Gradient of the barrier potential."], [18, 6, 2, 0, "grad_energy", "Gradient of the elasticity energy function."], [18, 6, 2, 0, "min_barrier_stiffness_scale", "Scale used to premultiply the minimum barrier stiffness."]], "ipctk.is_edge_intersecting_triangle": [[26, 6, 2, "ipctk.is_edge_intersecting_triangle", "e0", ""], [26, 6, 2, "ipctk.is_edge_intersecting_triangle", "e1", ""], [26, 6, 2, "ipctk.is_edge_intersecting_triangle", "t0", ""], [26, 6, 2, "ipctk.is_edge_intersecting_triangle", "t1", ""], [26, 6, 2, "ipctk.is_edge_intersecting_triangle", "t2", ""]], "ipctk.line_line_distance": [[24, 6, 2, 0, "ea0", "The first vertex of the edge defining the second line."], [24, 6, 2, 0, "ea1", "The second vertex of the edge defining the second line."], [24, 6, 2, "ipctk.line_line_distance", "eb0", "Compute the distance between a two infinite lines in 3D."], [24, 6, 2, "ipctk.line_line_distance", "eb1", "Compute the distance between a two infinite lines in 3D."]], "ipctk.line_line_distance_gradient": [[24, 6, 2, 0, "ea0", "The first vertex of the edge defining the second line."], [24, 6, 2, 0, "ea1", "The second vertex of the edge defining the second line."], [24, 6, 2, "ipctk.line_line_distance_gradient", "eb0", "Compute the gradient of the distance between a two lines in 3D."], [24, 6, 2, "ipctk.line_line_distance_gradient", "eb1", "Compute the gradient of the distance between a two lines in 3D."]], "ipctk.line_line_distance_hessian": [[24, 6, 2, 0, "ea0", "The first vertex of the edge defining the second line."], [24, 6, 2, 0, "ea1", "The second vertex of the edge defining the second line."], [24, 6, 2, "ipctk.line_line_distance_hessian", "eb0", "Compute the hessian of the distance between a two lines in 3D."], [24, 6, 2, "ipctk.line_line_distance_hessian", "eb1", "Compute the hessian of the distance between a two lines in 3D."]], "ipctk.point_edge_distance_type": [[24, 6, 2, 0, "e0", "The first vertex of the edge."], [24, 6, 2, 0, "e1", "The second vertex of the edge."], [24, 6, 2, 0, "p", "The point."]], "ipctk.point_edge_nonlinear_ccd": [[21, 6, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact"], [21, 6, 2, 0, "e0", "Edge's first endpoint's trajectory"], [21, 6, 2, 0, "e1", "Edge's second endpoint's trajectory"], [21, 6, 2, 0, "max_iterations", "Maximum number of iterations for the linear CCD algorithm"], [21, 6, 2, 0, "min_distance", "Minimum separation distance between the point and the edge"], [21, 6, 2, 0, "p", "Point's trajectory"], [21, 6, 2, 0, "tmax", "Maximum time to check for collision"], [21, 6, 2, 0, "tolerance", "Tolerance for the linear CCD algorithm"]], "ipctk.point_edge_relative_velocity": [[25, 6, 2, 0, "alpha", "Parametric coordinate of the closest point on the edge"], [25, 6, 2, 0, "de0", "Velocity of the first endpoint of the edge"], [25, 6, 2, 0, "de1", "Velocity of the second endpoint of the edge"], [25, 6, 2, 0, "dp", "Velocity of the point"]], "ipctk.point_edge_relative_velocity_matrix": [[25, 6, 2, "ipctk.point_edge_relative_velocity_matrix", "alpha", ""], [25, 6, 2, "ipctk.point_edge_relative_velocity_matrix", "dim", ""]], "ipctk.point_edge_relative_velocity_matrix_jacobian": [[25, 6, 2, "ipctk.point_edge_relative_velocity_matrix_jacobian", "alpha", ""], [25, 6, 2, "ipctk.point_edge_relative_velocity_matrix_jacobian", "dim", ""]], "ipctk.point_edge_tangent_basis": [[25, 6, 2, "ipctk.point_edge_tangent_basis", "e0", ""], [25, 6, 2, "ipctk.point_edge_tangent_basis", "e1", ""], [25, 6, 2, "ipctk.point_edge_tangent_basis", "p", ""]], "ipctk.point_edge_tangent_basis_jacobian": [[25, 6, 2, "ipctk.point_edge_tangent_basis_jacobian", "e0", ""], [25, 6, 2, "ipctk.point_edge_tangent_basis_jacobian", "e1", ""], [25, 6, 2, "ipctk.point_edge_tangent_basis_jacobian", "p", ""]], "ipctk.point_line_distance": [[24, 6, 2, 0, "e0", "The first vertex of the edge defining the line."], [24, 6, 2, 0, "e1", "The second vertex of the edge defining the line."], [24, 6, 2, 0, "p", "The point."]], "ipctk.point_line_distance_gradient": [[24, 6, 2, 0, "e0", "The first vertex of the edge defining the line."], [24, 6, 2, 0, "e1", "The second vertex of the edge defining the line."], [24, 6, 2, 0, "p", "The point."]], "ipctk.point_line_distance_hessian": [[24, 6, 2, 0, "e0", "The first vertex of the edge defining the line."], [24, 6, 2, 0, "e1", "The second vertex of the edge defining the line."], [24, 6, 2, 0, "p", "The point."]], "ipctk.point_plane_distance": [[24, 6, 2, "ipctk.point_plane_distance", "args", "Overloaded function."], [24, 6, 2, "ipctk.point_plane_distance", "kwargs", "Overloaded function."]], "ipctk.point_plane_distance_gradient": [[24, 6, 2, "ipctk.point_plane_distance_gradient", "args", "Overloaded function."], [24, 6, 2, "ipctk.point_plane_distance_gradient", "kwargs", "Overloaded function."]], "ipctk.point_plane_distance_hessian": [[24, 6, 2, "ipctk.point_plane_distance_hessian", "args", "Overloaded function."], [24, 6, 2, "ipctk.point_plane_distance_hessian", "kwargs", "Overloaded function."]], "ipctk.point_point_distance": [[24, 6, 2, 0, "p0", "The first point."], [24, 6, 2, 0, "p1", "The second point."]], "ipctk.point_point_distance_gradient": [[24, 6, 2, 0, "p0", "The first point."], [24, 6, 2, 0, "p1", "The second point."]], "ipctk.point_point_distance_hessian": [[24, 6, 2, 0, "p0", "The first point."], [24, 6, 2, 0, "p1", "The second point."]], "ipctk.point_point_nonlinear_ccd": [[21, 6, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact"], [21, 6, 2, 0, "max_iterations", "Maximum number of iterations for the linear CCD algorithm"], [21, 6, 2, 0, "min_distance", "Minimum separation distance between the two points"], [21, 6, 2, 0, "p0", "First point's trajectory"], [21, 6, 2, 0, "p1", "Second point's trajectory"], [21, 6, 2, 0, "tmax", "Maximum time to check for collision"], [21, 6, 2, 0, "tolerance", "Tolerance for the linear CCD algorithm"]], "ipctk.point_point_relative_velocity": [[25, 6, 2, 0, "dp0", "Velocity of the first point"], [25, 6, 2, 0, "dp1", "Velocity of the second point"]], "ipctk.point_point_relative_velocity_matrix": [[25, 6, 2, 0, "dim", "Dimension (2 or 3)"]], "ipctk.point_point_relative_velocity_matrix_jacobian": [[25, 6, 2, 0, "dim", "Dimension (2 or 3)"]], "ipctk.point_point_tangent_basis": [[25, 6, 2, 0, "p0", "First point"], [25, 6, 2, 0, "p1", "Second point"]], "ipctk.point_point_tangent_basis_jacobian": [[25, 6, 2, "ipctk.point_point_tangent_basis_jacobian", "p0", ""], [25, 6, 2, "ipctk.point_point_tangent_basis_jacobian", "p1", ""]], "ipctk.point_triangle_distance_type": [[24, 6, 2, 0, "p", "The point."], [24, 6, 2, 0, "t0", "The first vertex of the triangle."], [24, 6, 2, 0, "t1", "The second vertex of the triangle."], [24, 6, 2, 0, "t2", "The third vertex of the triangle."]], "ipctk.point_triangle_nonlinear_ccd": [[21, 6, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact"], [21, 6, 2, 0, "max_iterations", "Maximum number of iterations for the linear CCD algorithm"], [21, 6, 2, 0, "min_distance", "Minimum separation distance between the two edges"], [21, 6, 2, 0, "p", "Point's trajectory"], [21, 6, 2, 0, "t0", "Triangle's first vertex's trajectory"], [21, 6, 2, 0, "t1", "Triangle's second vertex's trajectory"], [21, 6, 2, 0, "t2", "Triangle's third vertex's trajectory"], [21, 6, 2, 0, "tmax", "Maximum time to check for collision"], [21, 6, 2, 0, "tolerance", "Tolerance for the linear CCD algorithm"]], "ipctk.point_triangle_relative_velocity": [[25, 6, 2, 0, "coords", "Baricentric coordinates of the closest point on the triangle"], [25, 6, 2, 0, "dp", "Velocity of the point"], [25, 6, 2, 0, "dt0", "Velocity of the first vertex of the triangle"], [25, 6, 2, 0, "dt1", "Velocity of the second vertex of the triangle"], [25, 6, 2, 0, "dt2", "Velocity of the third vertex of the triangle"]], "ipctk.point_triangle_relative_velocity_matrix": [[25, 6, 2, "ipctk.point_triangle_relative_velocity_matrix", "coords", ""], [25, 6, 2, "ipctk.point_triangle_relative_velocity_matrix", "dim", ""]], "ipctk.point_triangle_relative_velocity_matrix_jacobian": [[25, 6, 2, "ipctk.point_triangle_relative_velocity_matrix_jacobian", "coords", ""], [25, 6, 2, "ipctk.point_triangle_relative_velocity_matrix_jacobian", "dim", ""]], "ipctk.point_triangle_tangent_basis": [[25, 6, 2, 0, "p", "Point"], [25, 6, 2, 0, "t0", "Triangle's first vertex"], [25, 6, 2, 0, "t1", "Triangle's second vertex"], [25, 6, 2, 0, "t2", "Triangle's third vertex"]], "ipctk.point_triangle_tangent_basis_jacobian": [[25, 6, 2, "ipctk.point_triangle_tangent_basis_jacobian", "p", ""], [25, 6, 2, "ipctk.point_triangle_tangent_basis_jacobian", "t0", ""], [25, 6, 2, "ipctk.point_triangle_tangent_basis_jacobian", "t1", ""], [25, 6, 2, "ipctk.point_triangle_tangent_basis_jacobian", "t2", ""]], "ipctk.project_to_pd": [[28, 6, 2, 0, "A", "Symmetric matrix to project"], [28, 6, 2, "ipctk.project_to_pd", "eps", "Matrix projection onto positive definite cone"]], "ipctk.segment_segment_intersect": [[26, 6, 2, 0, "A", "1st endpoint of segment 1"], [26, 6, 2, 0, "B", "2st endpoint of segment 1"], [26, 6, 2, 0, "C", "1st endpoint of segment 2"], [26, 6, 2, 0, "D", "2st endpoint of segment 2"]], "ipctk.set_logger_level": [[28, 6, 2, "ipctk.set_logger_level", "level", "Set log level"]], "ipctk.set_num_threads": [[28, 6, 2, "ipctk.set_num_threads", "nthreads", "set maximum number of threads to use"]], "ipctk.tight_inclusion": [[21, 8, 1, 0, "compute_ccd_filters", "Compute the numerical error filters for the input to the CCD solver."], [21, 8, 1, 0, "edge_edge_ccd", "Determine the earliest time of impact between two edges (optionally with a minimum separation)."], [21, 8, 1, 0, "point_triangle_ccd", "Determine the earliest time of impact between a point and triangle (optionally with a minimum separation)."]], "ipctk.tight_inclusion.compute_ccd_filters": [[21, 6, 2, 0, "is_vertex_face", "True if checking vertex-face collision, false if checking edge-edge collision."], [21, 6, 2, 0, "max_corner", "Maximum corner of the axis-aligned bounding box of the simulation scene."], [21, 6, 2, 0, "min_corner", "Minimum corner of the axis-aligned bounding box of the simulation scene."], [21, 6, 2, 0, "using_minimum_separation", "True if using minimum separation CCD, false otherwise."]], "ipctk.update_barrier_stiffness": [[18, 6, 2, 0, "barrier_stiffness", "Current barrier stiffness."], [18, 6, 2, 0, "bbox_diagonal", "Length of the diagonal of the bounding box of the scene."], [18, 6, 2, 0, "dhat_epsilon_scale", "Update if distance is less than this fraction of the diagonal."], [18, 6, 2, 0, "dmin", "Minimum distance between elements."], [18, 6, 2, 0, "max_barrier_stiffness", "Maximum stiffness of the barrier."], [18, 6, 2, 0, "min_distance", "Current minimum distance between elements."], [18, 6, 2, 0, "prev_min_distance", "Previous minimum distance between elements."]]}, "objnames": {"0": ["cpp", "functionParam", "C++ function parameter"], "1": ["cpp", "templateTypeParam", "C++ type template parameter"], "2": ["cpp", "templateNonTypeParam", "C++ non-type template parameter"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "parameter", "Python parameter"], "7": ["py", "property", "Python property"], "8": ["py", "function", "Python function"]}, "objtypes": {"0": "cpp:functionParam", "1": "cpp:templateTypeParam", "2": "cpp:templateNonTypeParam", "3": "py:class", "4": "py:attribute", "5": "py:method", "6": "py:parameter", "7": "py:property", "8": "py:function"}, "terms": {"": [0, 1, 3, 5, 6, 7, 8, 9, 11, 13, 15, 19, 21, 23, 25, 27, 30, 32, 33, 34, 36], "0": [1, 4, 5, 6, 7, 9, 10, 11, 13, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 36], "01": 32, "06": 21, "06300": 35, "08": 28, "09": 18, "0x7f610c99d370": 21, "0x7f612576ec30": 20, "0x7f6125771e30": 20, "0x7f61257a4570": 21, "0x7f6127de3af0": 20, "0x7f61284a1ef0": 20, "1": [3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35], "10": 32, "100": 0, "10000000": 21, "100000000000": 18, "102": 0, "105": 0, "108": 0, "110": 0, "113": 0, "12": [11, 23, 24], "120": 0, "121": 0, "122": 0, "123": 0, "125": 0, "126": 0, "127": 0, "129": 0, "14": [3, 15], "15908": 35, "18": 11, "1e": [0, 4, 14, 18, 21, 28, 32], "1e11": 4, "1e7": 21, "1st": 26, "2": [3, 4, 5, 8, 11, 18, 19, 22, 24, 25, 26, 27, 28, 30, 32, 34, 35], "2004": 0, "2020": [4, 15, 16, 18, 30, 35, 36], "2021": [3, 15, 32, 34, 35], "2022": 0, "2023": [3, 15, 30, 32, 35, 36], "2024": [35, 36], "2112": 35, "23": 35, "2307": 35, "27": 11, "28": 0, "2d": [0, 8, 10, 15, 24, 26, 30, 32, 34], "2d_": 0, "2st": 26, "2ul": [19, 22], "3": [3, 4, 5, 8, 11, 15, 18, 19, 21, 22, 24, 25, 26, 28, 30, 32, 35], "30": 0, "31": 0, "34": 0, "36": [11, 25], "37": 0, "39": 15, "3d": [0, 8, 10, 15, 24, 30, 31, 32], "3x2": [11, 25], "4": [0, 6, 9, 13, 15, 19, 24, 27, 28, 32, 35], "41": 0, "42": 0, "43": 0, "44": 0, "48": 0, "49": [15, 34], "5": [19, 24, 28, 32, 34, 35], "50": 0, "52": 0, "54": 0, "55": 0, "56": 0, "58": 0, "6": [11, 21, 24, 28, 35], "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "69": 0, "7": [0, 24, 35], "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "8": [14, 21, 24, 32, 34, 35], "83": 0, "84": 0, "88": 0, "9": [0, 4, 11, 23, 24, 34], "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "99": 0, "A": [1, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 35], "AND": 16, "AS": 16, "As": [15, 30, 33, 36], "BE": 16, "BUT": 16, "Being": 1, "By": [0, 8, 22, 30, 33], "FOR": 16, "For": [1, 3, 15, 30, 32, 33, 34], "IN": 16, "If": [0, 2, 3, 5, 6, 7, 9, 10, 13, 15, 17, 19, 20, 21, 23, 24, 27, 30, 31, 32, 33, 36], "In": [0, 29, 30, 32, 34, 35, 36], "It": [0, 32], "NO": 16, "NOT": 16, "No": [1, 14, 28], "Not": 6, "OF": 16, "ON": [0, 3, 17], "OR": 16, "On": 0, "One": 36, "Or": 36, "THE": 16, "TO": 16, "That": [0, 30, 32], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 34, 36], "There": 32, "These": [32, 36], "To": [3, 15, 17, 30, 31, 32, 33, 36], "WITH": 16, "With": 3, "_": 30, "_2": 30, "__annotations__": [18, 19, 20, 21, 22, 23, 24, 25, 27, 28], "__call__": [18, 21, 27, 34], "__eq__": [19, 20, 23, 24, 27, 28], "__getitem__": [20, 23, 25], "__getstate__": [19, 24, 27, 28], "__hash__": [19, 20, 23, 24, 27, 28], "__index__": [19, 24, 27, 28], "__init__": [18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 34], "__int__": [19, 24, 27, 28], "__len__": [20, 23, 25], "__lt__": [20, 23], "__members__": [19, 24, 27, 28], "__module__": [18, 19, 20, 21, 22, 23, 24, 25, 27, 28], "__ne__": [19, 20, 23, 24, 27, 28], "__repr__": [19, 20, 24, 27, 28], "__setstate__": [19, 24, 27, 28], "__str__": [19, 20, 24, 27, 28], "_col": 14, "_delta_rot": 34, "_delta_transl": 34, "_edge_id": 9, "_face_id": 9, "_id": 0, "_index": 0, "_maxcol": 14, "_maxrow": 14, "_option": 14, "_posit": 34, "_r": 30, "_rotat": 34, "_row": 14, "_scalar": 14, "_t0": 29, "_t1": 29, "_translat": 34, "_vertex0_id": 9, "_vertex1_id": 9, "_vertex_id": 9, "_weight": 9, "_weight_gradi": 9, "aabb": 0, "aabb1": [5, 19], "aabb2": [5, 19], "aabb3": [5, 19], "ab": [14, 28, 32, 35, 36], "abc": [19, 21, 22], "abil": 0, "about": [1, 2, 34], "abov": [16, 30], "abseil": [0, 3, 15], "absl": [19, 22], "abslhashvalu": [6, 9], "absolut": [35, 36], "abus": 1, "acceler": 0, "accept": 1, "access": 0, "accord": 0, "accordingli": 36, "account": 1, "accur": [32, 34], "achiev": 30, "acm": [15, 35], "across": 30, "act": 1, "action": [0, 1, 16], "activ": [0, 4, 6, 9, 10, 11, 13, 18, 20, 23, 24, 25, 27, 32], "active_valu": 33, "actual": [10, 24], "ad": [5, 31, 33], "adapt": [1, 15, 34], "add": [0, 3, 5, 15, 31, 32], "add_custom_command": 3, "addit": [0, 30], "addition": [0, 15, 33], "additive_ccd": [0, 7], "additiveccd": 0, "address": 1, "addverticesfromedg": 0, "adjac": [0, 8, 9, 22, 23], "adjust": 34, "advanc": 1, "affect": 1, "after": 0, "ag": 1, "against": [0, 3, 15], "aggress": 1, "al": [0, 3, 4, 15, 18, 30, 32, 34, 36], "alec": 35, "algebra": [3, 15], "algorithm": [0, 3, 6, 7, 15, 20, 21, 30, 33, 35, 36], "align": [1, 5, 21, 30], "aliv": 33, "all": [0, 1, 3, 4, 5, 8, 11, 15, 16, 18, 19, 22, 25, 27, 30, 32, 36], "all_cap": 29, "alloc": [19, 22, 33], "allow": [0, 1, 6, 7, 20, 21, 32], "along": [7, 21], "alpha": [11, 25], "alreadi": [0, 36], "also": [0, 1, 30, 31, 32, 33, 34], "altern": [17, 32], "alwai": [0, 2, 6, 9], "among": 5, "amount": [6, 20], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16, 18, 19, 22, 23, 24, 25, 29, 30, 31, 32, 34, 35, 36], "analyt": [0, 34], "angl": 34, "ani": [1, 2, 3, 5, 6, 7, 9, 15, 16, 19, 20, 21, 23, 31, 32, 34, 36], "annot": [19, 27], "anoth": [5, 19], "answer": 1, "antoinebou12": 0, "anyth": 2, "anywai": 0, "anywher": 0, "api": 0, "apolog": 1, "apologi": 1, "appach": 0, "appear": 1, "appl": 0, "appli": [1, 8, 22, 30, 32, 34, 36], "appoint": 1, "appreci": [2, 15], "approach": [4, 18, 30], "appropri": [1, 30], "approx": 30, "approxim": [0, 9, 23, 30, 31, 32], "approximatli": 31, "ar": [0, 1, 2, 3, 6, 8, 9, 10, 11, 15, 23, 24, 25, 30, 31, 32, 33, 34, 36], "are_adjacencies_initi": [8, 22], "are_area_jacobians_initi": [8, 22], "are_overlap": 0, "are_shape_derivatives_en": 0, "area": [0, 8, 9, 22, 23, 30], "arg": [19, 20, 21, 22, 23, 24, 25, 27, 34], "arg0": 20, "argument": [0, 3, 32], "aris": 16, "arithmet": [0, 3, 7, 15, 21], "arm": 0, "around": [1, 5, 19, 30, 34], "arrai": [5, 6, 9, 13, 21, 22, 30, 32, 34, 36], "arraymax": 0, "arraymax3": 0, "arraymax3d": 5, "arraymax3i": 5, "articl": [2, 15], "articleno": 15, "arvigj": 0, "arxiv": 35, "ask": 0, "assert": [0, 32, 34], "associ": [16, 35], "assum": [6, 7, 20, 21], "attach": [5, 19], "attack": 1, "attempt": 33, "atten": 35, "attent": 1, "attribut": [5, 6, 8, 9, 13, 19, 20, 22, 23, 25, 27], "author": [0, 15, 16], "auto": [9, 10, 23, 24], "autoclass": 20, "autom": 29, "automat": [3, 8, 10, 22, 24, 32], "avail": [1, 33], "averag": [0, 4, 18], "average_mass": [0, 4, 18], "avg_mass": 32, "avoid": [0, 1, 3, 34], "axi": [5, 21], "b": [0, 4, 5, 10, 18, 20, 21, 24, 26, 29, 30, 32, 36], "back": 36, "backend": 0, "backslash": 30, "backward": 32, "bar": [30, 34], "baricentr": [11, 25], "barrier": [0, 6, 9, 11, 15, 20, 23, 25, 36], "barrier_first_deriv": [0, 4, 18], "barrier_gradi": 0, "barrier_hessian": 0, "barrier_potenti": [11, 13, 25, 27, 30, 32], "barrier_potential_grad": 32, "barrier_potential_hess": 32, "barrier_second_deriv": [0, 4, 18], "barrier_stiff": [4, 11, 13, 18, 25, 27, 32, 36], "barrierpotenti": [0, 11, 13, 25, 27, 30, 32, 36], "barycentr": [8, 11, 22, 25], "base": [0, 3, 4, 10, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 35], "basi": [0, 32], "basic": [3, 15, 32], "basic_file_sink_mt": 33, "bbox_diagon": [0, 4, 18, 32], "becaus": [0, 6, 32, 33, 34, 36], "becom": 32, "been": [0, 8, 22], "befor": [0, 9, 15, 21, 29, 30, 32], "begin": [11, 25, 30, 32, 33], "behavior": [1, 33], "being": 0, "belgrod": [3, 15, 32, 35], "benchmark": [0, 35], "besid": 0, "best": [1, 2, 31, 33], "better": [0, 3, 30, 32], "between": [0, 4, 5, 6, 7, 9, 10, 13, 15, 18, 20, 21, 23, 24, 30, 31, 32, 34, 36], "bin": 31, "binari": [3, 15], "bind": [0, 17], "bit": 2, "bla": 0, "blend_mu": [11, 25], "block": 36, "blog": 2, "bmatrix": [11, 25, 32], "bodi": [1, 4, 15, 18, 34, 35], "bolun": 35, "bool": [5, 6, 7, 8, 9, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 36], "boolean": [0, 12, 26, 32, 36], "both": [15, 30, 32], "bottom": [5, 19], "bound": [0, 3, 4, 5, 6, 7, 15, 18, 19, 20, 21, 31, 32], "boundari": [8, 22, 30, 36], "boundary_edg": 36, "boundary_facet": 36, "bounding_volume_hierarchi": 19, "box": [0, 4, 5, 6, 18, 19, 20, 21, 31, 32], "boxes0": 5, "boxes1": 5, "boxesa": 5, "boxesb": 5, "breadth_first_search": 21, "break": [0, 34], "brew": 0, "briefli": 30, "broad": [0, 6, 7, 9, 12, 15, 20, 21, 23, 26], "broad_phas": 0, "broad_phase_method": [0, 6, 7, 9, 12, 20, 21, 23, 26, 32], "broadphas": [5, 19, 31], "broadphasemethod": [0, 5, 6, 7, 9, 12, 19, 20, 21, 23, 26, 32], "broken": 0, "brute": [0, 32], "brute_forc": [0, 5, 19, 32], "bruteforc": [5, 19], "bsd": 0, "bug": [0, 15], "build": [0, 5, 6, 7, 8, 9, 11, 19, 20, 22, 23, 25, 30, 32, 36], "build_from_full_mesh": [8, 22, 36], "built": [5, 9, 13, 19, 23, 27, 30, 32], "built_in_radiu": 5, "bunni": [32, 36], "bvh": 32, "c": [16, 17, 26, 30, 31, 32, 33, 34, 35, 36], "c2": 32, "cach": [0, 9, 11, 23, 25], "calcul": [0, 21], "call": [0, 3, 8, 14, 15, 22, 30, 32, 33, 34, 36], "callabl": [19, 21, 22, 25], "camelcas": 0, "can": [0, 3, 5, 6, 8, 15, 17, 19, 22, 30, 31, 32, 33, 34, 36], "can_collid": [0, 5, 8, 22], "can_edge_face_collid": 5, "can_edge_vertex_collid": 5, "can_edges_collid": 5, "can_face_vertex_collid": 5, "can_faces_collid": 5, "can_vertices_collid": [5, 19], "cancel": 30, "candid": [0, 5, 9, 19, 23, 32], "cannot": [7, 36], "capsul": [5, 19], "case": [11, 25, 30, 32, 34, 36], "catch2": [3, 15], "ccd": [0, 3, 6, 15, 20, 32], "ccd_method": 21, "ccd_strategi": 7, "ccdrootfindingmethod": 21, "cd": 17, "cdot": [0, 30, 32], "ce": [8, 22], "cell": 5, "cell_siz": [5, 19], "cells_dict": [32, 36], "center": 34, "cfl": [0, 6, 20], "cg": 35, "chain": [8, 22, 36], "challeng": 3, "chang": [30, 33], "changxi": 35, "channel": 1, "char": 0, "characterist": 1, "charg": 16, "check": [0, 3, 5, 7, 15, 19, 21, 31, 34, 36], "chen": [0, 35, 36], "chenfanfu": [15, 35], "choic": 30, "choos": 0, "chrono": 0, "cite": 15, "claim": 16, "clamp": [0, 14, 28, 32, 36], "clampedlogbarri": [0, 4, 13, 18], "clang": 0, "clangformat": 29, "clarifi": 1, "clariti": 1, "class": [0, 1, 5, 6, 7, 8, 9, 10, 11, 13, 14, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 34, 36], "claus": 0, "clean": 0, "clear": [0, 5, 6, 9, 11, 19, 20, 23, 25], "clone": 17, "close": [0, 10, 24], "closest": [0, 10, 11, 24, 25], "closest_point": [11, 25], "cloth": 32, "cmake": [0, 3, 15, 31], "cmake_command": 3, "co": [0, 34], "code": [0, 2, 3, 17, 33, 34], "code_of_conduct": 1, "codebas": 32, "codecov": 0, "codim": 0, "codim_edg": [8, 22], "codim_vertic": [8, 22, 36], "codimension": [0, 8, 22, 35], "coeffici": [0, 10, 11, 24, 25, 32], "col": 32, "collabor": [9, 13], "collect": [19, 21, 22], "collid": [0, 5, 7, 8, 19, 21, 22, 32], "collis": [0, 3, 5, 12, 13, 15, 19, 26, 27, 29, 30, 34, 35, 36], "collision_forc": 36, "collision_free_vertic": 32, "collision_mesh": [30, 32, 33, 36], "collisionconstraint": 0, "collisionmesh": [0, 6, 7, 8, 9, 11, 12, 13, 20, 21, 22, 23, 25, 26, 27, 32, 36], "collisionstencil": [0, 6, 9, 11, 20, 23, 25], "columbia": 35, "column": [11, 22, 25], "com": [2, 3, 15, 17, 34], "come": 15, "command": [3, 17], "command_expand_list": 3, "comment": [0, 1, 2], "commit": [1, 3], "common": [1, 30], "commun": 1, "compar": [0, 6, 20], "comparison": [0, 3, 15], "compat": 0, "compil": [0, 2, 17], "complaint": 1, "complet": [0, 36], "compon": [0, 32, 36], "compress": 22, "compris": 32, "comput": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 35, 36], "compute_": 0, "compute_barrier_potenti": 0, "compute_ccd_filt": 21, "compute_cfl_steps": [6, 20], "compute_closest_point": [11, 25], "compute_closest_point_jacobian": [11, 25], "compute_collision_free_steps": [0, 6, 7, 20, 21, 32], "compute_dist": [0, 6, 9], "compute_distance_gradi": [6, 9], "compute_distance_hessian": [6, 9], "compute_friction_": 0, "compute_friction_bas": 0, "compute_friction_potenti": 0, "compute_friction_potential_hessian": 0, "compute_minimum_dist": [0, 9, 23, 32], "compute_noncandidate_conservative_steps": [6, 20], "compute_normal_force_magnitud": [11, 25], "compute_normal_force_magnitude_gradi": [11, 25], "compute_potenti": 0, "compute_potential_": 0, "compute_shape_deriv": 0, "compute_tangent_basi": [11, 25], "compute_tangent_basis_jacobian": [11, 25], "condit": 16, "cone": [14, 28, 36], "confer": 35, "conjunct": 36, "connect": [0, 8, 16, 36], "consequ": 1, "conserv": [0, 3, 5, 6, 7, 15, 19, 20, 21, 32, 35], "conservative_infl": [5, 19], "conservative_piecewise_linear_ccd": [7, 21], "conservative_resc": [7, 21, 34], "conservativli": 0, "consid": [0, 1, 5, 15], "consider": 30, "consist": [0, 30], "const": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 32, 34, 36], "constant": 29, "constexpr": 5, "constraint": [0, 29], "constraint_set": 0, "construct": [1, 5, 8, 11, 13, 19, 22, 25, 27, 36], "construct_collision_candid": 0, "construct_constraint_set": 0, "construct_faces_to_edg": [8, 22], "construct_friction_constraint_set": 0, "construct_is_on_surfac": [8, 22, 36], "constructor": [0, 8, 36], "contact": [0, 15, 21, 29, 35], "contain": [0, 5, 8, 19, 22, 30, 32], "context": 34, "contigu": 30, "continu": [1, 5, 15, 19, 29, 30, 35], "continuouscollisioncandid": [6, 20, 23, 25], "contract": 16, "contribut": 1, "contributor": 15, "control": 0, "conveni": [30, 32], "converg": [0, 9, 13, 21, 23, 35], "convers": 0, "convert": [5, 8, 19, 36], "convex": 30, "coord": [11, 25], "coordin": [11, 25, 29, 30], "copi": [3, 16, 32], "copy_if_differ": 3, "copyright": 16, "core": [32, 33], "corner": [5, 19, 21], "correct": [0, 3, 15], "correctli": 0, "correspond": [8, 22, 30], "could": [1, 2], "cout": 20, "cover": 30, "coverag": 0, "cpm": [0, 3, 15], "cpp": [0, 3, 15], "creat": [5, 29, 32], "credit": [0, 2], "critic": 28, "cross": [10, 24], "csc_matrix": [22, 23, 25, 27], "cube": [11, 25], "cuda": [0, 32], "cull": [0, 32], "curr_dist": 32, "current": [4, 9, 13, 14, 17, 18, 27, 32, 33], "curv": [30, 35], "cv": [8, 22], "d": [0, 4, 18, 26, 30, 32, 33, 36], "d_": 32, "d_k": 32, "damag": 16, "daniel": [15, 35], "danni": [15, 35], "data": [0, 3, 5, 15, 19, 20, 22, 23, 25, 27, 32, 36], "dataset": 35, "david": 35, "dcmake_build_typ": 17, "ddot": 32, "de0": [11, 25], "de1": [11, 25], "dea0": [11, 25], "dea1": [11, 25], "deal": 16, "deb0": [11, 25], "deb1": [11, 25], "debug": [28, 33], "decis": 1, "decreas": [4, 18, 30], "deem": 1, "deeper": 34, "def": 34, "default": [0, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 21, 22, 30, 32, 33], "default_blend_mu": [11, 25], "default_broad_phase_method": [0, 5, 6, 7, 9, 12, 32], "default_can_collid": 8, "default_can_vertices_collid": 5, "default_ccd_conservative_resc": 7, "default_ccd_max_iter": [0, 7], "default_ccd_toler": [0, 7], "default_concurr": 33, "default_conservative_resc": 7, "default_max_iter": [7, 34], "default_narrow_phase_ccd": [0, 6, 7], "default_toler": [7, 34], "defin": [0, 10, 24, 30, 32, 33], "definit": [13, 27], "deform": [15, 32, 35, 36], "degener": 0, "degre": [6, 8, 11, 13, 22, 25, 27], "delta": 34, "delta_rot": 34, "delta_transl": 34, "demonstr": 1, "deni": [15, 35], "dens": 32, "depend": [0, 30, 31], "derek": 35, "deriv": [0, 4, 9, 11, 13, 15, 18, 25, 27, 30, 36], "derogatori": 1, "describ": [0, 36], "destroi": 8, "detail": [2, 13, 15], "detect": [0, 3, 5, 6, 15, 19, 20, 29, 35], "detect_candid": 5, "detect_collision_candid": [5, 19], "detect_edge_edge_candid": [5, 19, 31], "detect_edge_face_candid": [5, 19], "detect_edge_face_collision_candidates_brute_forc": 0, "detect_edge_vertex_candid": [5, 19], "detect_face_face_candid": [5, 19], "detect_face_vertex_candid": [5, 19], "detect_vertex_vertex_candid": [5, 19], "determin": [1, 5, 6, 7, 8, 10, 12, 19, 20, 21, 22, 24, 26, 32], "determinist": 33, "develop": 17, "df1_x_minus_f1_over_x3": [11, 25], "dhat": [0, 4, 6, 9, 11, 13, 18, 20, 23, 25, 27, 30, 32, 36], "dhat_epsilon_scal": [0, 4, 18], "dhat_squar": 0, "diag": [4, 18], "diagon": [0, 4, 18], "diagram": [9, 13], "diff": [3, 15], "differ": [1, 3, 15, 30, 33], "differenti": [13, 27], "diffwrt": [13, 27], "dim": [5, 6, 8, 11, 19, 22, 25], "dimens": [5, 6, 8, 11, 19, 22, 25, 32], "dimension": [5, 19], "dipc_toolkit_build_python": 17, "direct": [30, 32], "directli": [0, 8, 17, 22, 32, 36], "directori": [0, 3, 7, 31], "disabl": [1, 3], "discard": 32, "discontinu": 30, "discret": [6, 20, 30, 36], "discuss": [0, 30], "disparag": 1, "displac": [0, 6, 8, 13, 20, 22, 27, 29, 36], "displace_vertic": [8, 22, 36], "displacement_map": [8, 22, 36], "dissip": [0, 13, 15, 27, 36], "distanc": [0, 4, 6, 7, 9, 11, 15, 18, 20, 21, 23, 25, 27, 30, 31, 32, 34], "distance_based_potenti": 13, "distance_based_potential_gradi": 13, "distance_based_potential_hessian": 13, "distance_sqr": 13, "distance_squar": [11, 25], "distance_squared_gradi": [11, 25], "distancebasedpotenti": [13, 27], "distribut": 16, "dive": 34, "divers": 1, "divid": [0, 11, 25], "dll": 3, "dmin": [0, 4, 9, 11, 13, 18, 23, 25, 27, 32], "do": [3, 15, 16, 17, 30, 32, 33, 36], "doc": [0, 2], "document": [0, 3, 15, 16], "doe": [9, 15, 23, 36], "dof": [0, 6, 8, 11, 25, 36], "domain": 30, "domain_max": [5, 19], "domain_min": [5, 19], "don": 20, "done": [0, 32], "doubl": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 30, 32, 34, 36], "down": 34, "download": [0, 3, 15], "doxygen": [7, 29], "doxygenfunct": 7, "doxygenvari": 7, "doxyoutput": 7, "dp": [11, 25], "dp0": [11, 25], "dp1": [11, 25], "driven": 2, "drop": [0, 8], "dropdown": 0, "dt0": [11, 25], "dt1": [11, 25], "dt2": [11, 25], "dtype": [0, 9, 10, 22, 23, 24], "duplic": [0, 8, 30], "durat": 33, "dure": [0, 1, 21], "dv": 0, "dx": 0, "dylib": 3, "dynaic": 3, "dynam": [0, 3, 15, 32, 35], "e": [0, 1, 3, 5, 8, 9, 13, 19, 22, 23, 29, 30, 32, 36], "e0": [7, 10, 11, 12, 21, 24, 25, 26, 29, 34], "e1": [7, 10, 11, 12, 21, 24, 25, 26, 29, 34], "e_": 30, "ea0": [7, 10, 11, 21, 24, 25], "ea0_eb": [10, 24], "ea0_eb0": [10, 24], "ea0_eb1": [10, 24], "ea0_rest": [10, 24], "ea0_t0": 21, "ea0_t1": 21, "ea1": [7, 10, 11, 21, 24, 25], "ea1_eb": [10, 24], "ea1_eb0": [10, 24], "ea1_eb1": [10, 24], "ea1_rest": [10, 24], "ea1_t0": 21, "ea1_t1": 21, "ea_eb": [10, 24], "ea_eb0": [10, 24], "ea_eb1": [10, 24], "each": [5, 8, 19, 22, 26, 30, 32, 34], "eai": 5, "earliest": [21, 34], "easier": [2, 30, 36], "easiest": [3, 15, 17], "easili": 0, "eb0": [7, 10, 11, 21, 24, 25], "eb0_rest": [10, 24], "eb0_t0": 21, "eb0_t1": 21, "eb1": [7, 10, 11, 21, 24, 25], "eb1_rest": [10, 24], "eb1_t0": 21, "eb1_t1": 21, "ebi": 5, "econom": 1, "edg": [0, 5, 7, 8, 15, 19, 21, 22, 29, 30, 32, 34, 36], "edge0_id": [6, 9, 11, 20, 23], "edge1_id": [6, 9, 11, 20, 23], "edge_area": [8, 22], "edge_area_gradi": [8, 22], "edge_box": 5, "edge_bvh": 5, "edge_edge_ccd": [7, 21, 32], "edge_edge_cross_squarednorm": [10, 24], "edge_edge_cross_squarednorm_gradi": [10, 24], "edge_edge_cross_squarednorm_hessian": [10, 24], "edge_edge_dist": [10, 24, 31], "edge_edge_distance_gradi": [10, 24], "edge_edge_distance_hessian": [10, 24], "edge_edge_distance_typ": [10, 24], "edge_edge_mollifi": [9, 10, 24], "edge_edge_mollifier_gradi": [10, 24], "edge_edge_mollifier_hessian": [10, 24], "edge_edge_mollifier_threshold": [10, 24], "edge_edge_nonlinear_ccd": [7, 21, 34], "edge_edge_relative_veloc": [11, 25], "edge_edge_relative_velocity_matrix": [11, 25], "edge_edge_relative_velocity_matrix_jacobian": [11, 25], "edge_edge_tangent_basi": [0, 11, 25], "edge_edge_tangent_basis_jacobian": [11, 25], "edge_id": [6, 9, 11, 20, 23], "edge_ind": 5, "edge_item": 5, "edge_start_ind": [5, 19], "edge_to_voxel": [5, 19], "edge_vertex_adjac": [8, 22], "edgeedgecandid": [5, 6, 9, 11, 19, 20, 23, 25, 32], "edgeedgecollis": [0, 6, 9, 11, 23, 25], "edgeedgeconstraint": 0, "edgeedgedistancetyp": [6, 9, 10, 11, 20, 23, 24], "edgeedgefrictioncollis": [6, 11, 25], "edgefacecandid": [5, 6, 19, 20], "edgevertexcandid": [5, 6, 9, 11, 19, 20, 23, 25, 32], "edgevertexcollis": [6, 9, 11, 23, 25], "edgevertexfrictioncollis": [6, 11, 25], "edit": 1, "edu": [1, 35], "educ": 1, "ee": [0, 6, 9, 23], "ee_candid": [6, 20], "ee_collis": [9, 11, 23, 25], "ee_sort_axi": 5, "ef_sort_axi": 5, "effect": 30, "effici": [0, 32], "ei": [5, 8, 22], "eigen": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 34, 36], "eigen_ext": 0, "eigenvalu": [0, 14, 28, 35, 36], "either": 17, "elast": [4, 18, 30, 32], "elastodynam": 35, "element": [4, 5, 6, 7, 9, 15, 18, 19, 20, 21, 22, 23, 29, 36], "elimin": 32, "els": 33, "email": 1, "embed": 30, "empathi": 1, "emplace_back": 33, "empti": [6, 9, 11, 20, 23, 25], "enabl": [0, 3, 9, 13, 15, 27, 30, 33], "enable_shape_deriv": [9, 23], "encapsol": 8, "enclos": [5, 19, 34], "end": [5, 6, 7, 11, 19, 20, 21, 25, 29, 30, 32, 33, 34], "endpoint": [7, 11, 21, 25, 26, 34], "energi": [4, 18, 32], "enhanc": 2, "ensur": [3, 15], "entir": [3, 32, 33], "entri": [8, 36], "enum": [0, 5, 10, 13, 14, 29], "enumer": [5, 10, 13, 14, 19, 28], "enumerable_thread_specif": 0, "environ": 1, "ep": [14, 28], "eps_x": [0, 9, 10, 23, 24], "epsilon_": 27, "epsilon_v": [0, 11, 13, 25, 32], "epsilon_vh": 0, "epsv": [11, 13, 25, 27, 32, 36], "epsv_times_h": 0, "epsv_times_h_squar": 0, "equal": [8, 22], "equal_to": [19, 22], "equival": 30, "ericson": 0, "error": [21, 28], "estim": [21, 30, 34], "et": [0, 3, 4, 15, 18, 30, 32, 34, 36], "etc": 0, "ethnic": 1, "etienn": [0, 3, 15], "euler": [0, 32], "ev": [6, 9, 23], "ev_candid": [6, 20], "ev_collis": [9, 11, 23, 25], "ev_sort_axi": 5, "evalu": [4, 18, 30, 36], "even": [2, 30], "event": [1, 16], "everi": 2, "everyon": 1, "everyth": 0, "exact": [0, 3, 15], "exampl": [1, 3, 15, 17, 30, 32, 33, 34, 36], "except": 0, "exclud": 0, "execut": 3, "exist": [0, 3, 15], "expect": 33, "experi": 1, "explain": 2, "explan": 1, "explicit": [0, 1, 13], "expos": 0, "express": [1, 16], "extent": 5, "extern": [0, 1, 3, 15], "f": [0, 8, 22, 32], "f0_sf": [11, 25], "f0_t0": 21, "f0_t1": 21, "f1": [11, 25], "f1_sf_over_x": [11, 25], "f1_t0": 21, "f1_t1": 21, "f2_t0": 21, "f2_t1": 21, "f2e": 0, "f_0": [11, 25, 32], "f_1": [11, 25], "face": [0, 5, 8, 19, 21, 22, 29, 30, 32, 36], "face_box": 5, "face_bvh": 5, "face_id": [6, 9, 11, 20, 23], "face_item": 5, "face_to_voxel": [5, 19], "facefacecandid": [5, 19], "faces_to_edg": [8, 22], "facevertexcandid": [5, 6, 9, 11, 19, 20, 23, 25, 32], "facevertexcollis": [6, 9, 11, 23, 25], "facevertexfrictioncollis": [6, 11, 25], "fact": 0, "fai": 5, "fair": 1, "fairli": 1, "fals": [0, 3, 5, 7, 9, 13, 19, 21, 22, 27, 30, 32], "faq": 1, "faster": [0, 3, 15], "fault": 0, "favor": 29, "fbi": 5, "fe": 8, "fe_displac": 36, "fe_mesh": 36, "fe_posit": 36, "fe_rest_posit": 36, "feasibl": [6, 20], "featur": 0, "feedback": 1, "ferguson": [0, 3, 15, 34, 35, 36], "fetchcont": [0, 3, 15], "fetchcontent_declar": [3, 15], "fetchcontent_makeavail": [3, 15], "ff_sort_axi": 5, "fi": 5, "field": 32, "file": [0, 2, 3, 15, 16, 31, 32, 33, 36], "filenam": [6, 20, 29], "filib": [0, 3, 7, 15, 21], "filib_build_shared_lib": 3, "filter": [21, 35], "find": [5, 7, 19, 21, 32, 34], "findsimd": 0, "finit": [3, 15, 36], "first": [0, 2, 4, 5, 6, 7, 10, 11, 15, 18, 19, 20, 21, 24, 25, 30, 32, 34], "first_deriv": [4, 18], "fit": 16, "fix": [15, 30, 32], "fixeds": [19, 27], "flag": [0, 13, 30], "flatten": 32, "flip": [0, 14, 28], "float": [0, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28], "float64": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "focus": 1, "folder": 0, "follow": [1, 3, 15, 16, 17, 29, 32, 33, 34, 36], "forc": [0, 13, 27, 32, 36], "force_jacobian": [13, 27], "fork": 15, "form": [0, 15, 30], "format": 0, "former": 32, "formul": [0, 9, 13, 23], "fortun": 36, "found": 17, "four": 6, "frac": [4, 11, 18, 25, 30, 32], "fraction": [4, 18], "frame": 34, "framework": [3, 15, 36], "francisca": 35, "free": [0, 1, 6, 7, 15, 16, 20, 21, 32, 33, 35], "freedom": [6, 8, 11, 13, 22, 25, 27], "frequent": 0, "friction": [0, 15, 29, 36], "friction_collis": [0, 32, 36], "friction_constraint": 0, "friction_constraint_set": 0, "friction_potenti": 32, "friction_potential_grad": 32, "friction_potential_hess": 32, "frictioncollis": [6, 11, 13, 25, 27, 30, 32, 36], "frictionconstraint": 0, "frictionpotenti": [0, 13, 27, 32, 36], "friend": [6, 9], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 32, 34, 36], "from_point": [5, 19], "full": [0, 3, 6, 7, 8, 15, 20, 21, 22, 36], "full_displac": [8, 22, 36], "full_ndof": [8, 22], "full_num_vertic": [8, 22], "full_posit": [8, 22, 36], "full_rest_posit": [8, 22, 36], "full_veloc": 36, "full_vertic": 36, "fulli": [0, 30], "function": [0, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 36], "furnish": 16, "further": [0, 21], "futur": 0, "fv": [6, 8, 9, 22], "fv_candid": [6, 20], "fv_collis": [9, 11, 23, 25], "fv_sort_axi": 5, "g": [0, 3, 9, 13, 23, 29, 30, 32, 36], "gave": 0, "gender": 1, "gener": 0, "geometri": [0, 3, 15, 30, 32, 34], "geq": [11, 25, 30], "get": [0, 2, 4, 6, 8, 9, 11, 13, 18, 22, 23, 25, 28, 29, 30, 33, 34, 36], "get_num_thread": [28, 33], "get_numerical_error": 21, "getter": 0, "gil": 35, "git": [3, 15, 17], "git_repositori": [3, 15], "git_shallow": 3, "git_tag": [3, 15], "github": [2, 3, 15, 17, 31, 35], "give": 1, "given": [0, 2, 5, 7, 13, 19, 21, 26, 30, 34, 36], "global": 32, "global_control": 33, "gmp": [0, 3, 15], "go": 8, "goe": [33, 36], "good": [0, 30], "gpu": [3, 15, 19], "gracefulli": 1, "grad": [10, 24, 36], "grad_barri": [4, 18, 32], "grad_energi": [4, 18, 32], "grad_ful": 36, "gradient": [0, 4, 6, 8, 9, 10, 11, 13, 18, 22, 23, 24, 25, 27, 32, 36], "grant": 16, "graph": 15, "graphic": 35, "greatli": 2, "grid": [0, 32], "grid_siz": [5, 19], "group": 0, "grow": [4, 18], "h": [6, 9, 32, 33], "ha": [0, 12, 26, 30, 32], "had": [6, 20], "halehossadat": 0, "handl": [0, 3, 36], "happen": 21, "harass": 1, "hard": 29, "harm": 1, "has_intersect": [0, 12, 26, 33], "hash": [0, 3, 15, 22, 32], "hash_grid": [0, 5, 19, 20, 21, 23, 26, 32], "hash_intern": [19, 22], "hashgrid": [0, 5, 19], "hashitem": 5, "hat": [0, 4, 18, 30, 32], "have": [0, 1, 8, 9, 13, 20, 22, 23, 27, 30, 32, 34, 36], "header": 0, "healthi": 1, "height": 32, "help": [2, 10, 24, 31], "helper": [8, 22, 36], "here": [13, 17, 27, 30, 32], "herebi": 16, "hess": [10, 24, 36], "hess_ful": 36, "hessian": [0, 6, 8, 9, 10, 13, 22, 23, 24, 27, 32, 36], "hierarchi": [0, 3, 15, 19], "high": [0, 32, 35], "highli": 15, "holder": 16, "honglin": 35, "hookean": 35, "how": [2, 17, 30, 32, 33, 36], "howev": [30, 33, 36], "hpp": [0, 32], "hsueh": 35, "html": 1, "http": [1, 2, 3, 15, 17, 35], "huangzizh": 0, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36], "id": [0, 5, 6, 8, 9, 13, 19, 20, 22, 23, 27, 32], "ident": 1, "idx": [5, 19], "igl": [0, 31, 32, 34, 36], "ignor": [0, 36], "ignore_codimensional_vertic": 0, "ii": 5, "imageri": 1, "immut": 8, "impact": [1, 6, 7, 20, 21, 32, 34, 35], "implement": [0, 5, 7, 14, 15, 19, 28, 30, 32, 34], "impli": [16, 30], "implicit": 0, "import": [17, 31], "improv": [0, 9, 23, 30, 33], "inappropri": 1, "incid": [1, 30], "includ": [0, 1, 2, 3, 6, 8, 15, 16, 22, 30, 32, 33], "include_vertex": [8, 22], "inclus": [0, 1, 3, 15, 32, 35], "incorpor": 32, "increas": [30, 34], "increment": [0, 15, 35], "indefinit": 36, "independ": 0, "index": [5, 8, 9, 11, 19, 22, 23, 25, 36], "indic": [0, 5, 6, 8, 19, 22, 32, 36], "indici": 8, "individu": [0, 1, 32], "inexact": [0, 3, 15], "inexactccd": 0, "infin": [4, 18, 21], "infinit": [10, 24], "inflat": [0, 5, 6, 19, 20], "inflation_radiu": [0, 5, 6, 19, 20, 32], "info": [28, 33], "inform": [0, 1, 3, 15], "inherit": [9, 13, 19, 20, 21, 22, 23, 25, 27], "init": [4, 11, 18], "init_adjac": [8, 22], "init_area": 8, "init_area_jacobian": [8, 22], "init_bvh": 5, "init_codim_edg": 8, "init_codim_vertic": 8, "init_selection_matric": 8, "initi": [0, 4, 5, 6, 8, 9, 11, 18, 20, 21, 22, 23, 32], "initial_barrier_stiff": [0, 4, 18, 32], "inlin": [4, 5, 6, 8, 9, 11, 13], "inout": 13, "input": [0, 21, 33, 34], "insert_box": 5, "insid": [0, 31], "inspir": [0, 1, 6, 20], "instal": [0, 3, 15, 36], "instanc": 1, "instead": [0, 30, 36], "instruct": 0, "insult": 1, "int": [5, 6, 8, 9, 11, 14, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 33], "int32": [19, 20, 22], "int_": 30, "integr": [0, 15, 30, 32, 36], "intent": 30, "interact": 1, "interfac": 0, "interi": 34, "interior": [10, 24], "intern": [0, 30, 36], "intersect": [0, 3, 5, 6, 7, 15, 19, 20, 21, 35], "interv": [0, 3, 6, 7, 15, 20, 21, 34], "intervalnonlineartrajectori": [7, 21], "intial_barrier_stiff": 0, "introduc": 34, "introduct": [3, 15], "invers": [15, 35], "investig": [1, 20], "invis": 1, "involv": 1, "io": 35, "ipc": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23, 25, 27, 32, 33, 34, 35, 36], "ipc_toolkit": [3, 15], "ipc_toolkit_build_test": [3, 15], "ipc_toolkit_git_tag": [3, 15], "ipc_toolkit_with_abseil": [3, 15], "ipc_toolkit_with_correct_ccd": 0, "ipc_toolkit_with_filib": [3, 15], "ipc_toolkit_with_inexact_ccd": [0, 3, 15], "ipc_toolkit_with_rational_intersect": [3, 15], "ipc_toolkit_with_robin_map": [3, 15], "ipctk": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36], "ipynb": [13, 17], "is_collid": 32, "is_collision_fre": 0, "is_edge_edg": [9, 23], "is_edge_index": [5, 19], "is_edge_intersecting_triangl": [12, 26], "is_edge_vertex": [9, 23], "is_face_vertex": [9, 23], "is_intersect": 33, "is_mollifi": [0, 9, 23], "is_on_surfac": 36, "is_plane_vertex": [9, 23], "is_step_collision_fre": [0, 6, 7, 20, 21, 32], "is_triangle_index": [5, 19], "is_vertex_fac": 21, "is_vertex_index": [5, 19], "is_vertex_on_boundari": [8, 22], "is_vertex_vertex": [9, 23], "issu": [0, 1, 2, 15, 31], "item": 5, "items0": 5, "items1": 5, "iter": [0, 7, 21, 32], "its": [15, 32, 36], "ix": 5, "iz": 5, "j": [5, 30], "j4": 17, "jacobian": [0, 8, 9, 13, 22, 23, 27, 36], "jacobson": 35, "jain": 35, "jiang": [15, 35], "job": 36, "journal": 15, "jpanetta": 0, "json": [3, 15], "jupyt": 17, "just": [1, 30, 36], "k": 32, "kappa": [30, 32], "kaufman": [15, 35], "keep": [0, 2], "kei": 30, "kind": [1, 16], "know": [3, 7, 20, 21, 34], "known": 0, "known_dtyp": [6, 9, 11, 20], "kwarg": [19, 20, 21, 22, 23, 24, 25, 27], "l": 30, "ladder": 1, "lag": [13, 15, 27, 32], "lagged_displac": [13, 27], "lambda_k": 32, "langloi": [15, 35], "languag": 1, "lapack": 0, "larg": [0, 15, 35], "largest": [6, 20], "last": [32, 34], "latest": [0, 17], "latter": 32, "lead": 1, "leader": 1, "learn": 1, "left": [4, 5, 18, 19, 30, 32], "left_bottom_corn": [5, 19], "len": 36, "length": [0, 4, 8, 10, 18, 24, 33], "leq": [0, 34], "lerp": 0, "less": [0, 4, 18, 31], "let": [3, 32, 34], "letter": 0, "level": [1, 3, 15, 28, 32, 33], "leverag": 30, "levin": 35, "lgpl": 3, "li": [0, 4, 15, 18, 30, 32, 35, 36], "li2020ipc": 15, "liabil": 16, "liabl": 16, "lib": [3, 31], "libarai": 3, "libigl": [3, 15, 36], "librari": [0, 3, 15, 17, 32, 33], "licens": [0, 3], "like": [0, 1, 15], "limit": [0, 16, 33], "linalg": 34, "line": [0, 32, 34], "line_line_dist": [10, 24], "line_line_distance_gradi": [10, 24], "line_line_distance_hessian": [10, 24], "linear": [0, 3, 6, 7, 15, 20, 21, 30, 32, 34, 36], "linear_ccd": [7, 21], "link": [0, 3, 15], "linkag": 3, "list": [0, 6, 19, 20, 22, 23, 25, 27, 36], "littl": 2, "liu": 35, "ln": [4, 18, 30], "load": [3, 15, 36], "local": [0, 2, 30], "locat": [5, 21], "locate_box_voxel_axis_index": 5, "locate_voxel_axis_index": 5, "locate_voxel_index": 5, "log": [0, 3, 15, 28, 32, 33], "log_fil": 33, "loggerlevel": [28, 33], "logo": 0, "logsumexp": 30, "long": [0, 5, 6, 7, 8, 9, 11, 13, 33], "longer": 0, "look": [2, 6, 20], "loop": 0, "lot": 0, "lr": 30, "lts_20230125": [19, 22], "m": [0, 11, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 35], "m_": 29, "m_barrier": 13, "m_cell_siz": 5, "m_codim_edg": 8, "m_codim_vertic": 8, "m_dhat": 13, "m_displacement_dof_map": 8, "m_displacement_map": 8, "m_dof": 8, "m_domain_max": 5, "m_domain_min": 5, "m_edg": 8, "m_edge_area": 8, "m_edge_area_jacobian": 8, "m_edge_vertex_adjac": 8, "m_enable_shape_deriv": 9, "m_epsv": 13, "m_face": 8, "m_faces_to_edg": 8, "m_full_rest_posit": 8, "m_full_vertex_to_vertex": 8, "m_grid_siz": 5, "m_is_vertex_on_boundari": 8, "m_rest_posit": 8, "m_select_dof": 8, "m_select_vertic": 8, "m_use_area_weight": 9, "m_use_improved_max_approxim": 9, "m_use_physical_barri": 13, "m_v": 8, "m_vertex_area": 8, "m_vertex_area_jacobian": 8, "m_vertex_edge_adjac": 8, "m_vertex_to_full_vertex": 8, "m_vertex_vertex_adjac": 8, "machineri": 35, "made": 0, "magnitud": [0, 13, 27, 32], "mai": 1, "mail": 1, "main": [0, 32, 33], "make": [0, 1, 2, 13, 15, 17, 27, 30, 33, 36], "make_broad_phas": [5, 19], "make_shar": [13, 33], "mani": 30, "manual": 17, "map": [0, 3, 5, 7, 8, 15, 19, 22, 36], "map_displac": [8, 22, 36], "mapsto": 30, "marco": 35, "mark": 0, "mass": [4, 18, 34], "materi": [29, 30], "mathbb": 30, "mathcal": 30, "mathemat": [32, 34], "mathrm": [0, 30], "matric": [0, 32], "matrix": [0, 6, 7, 8, 14, 21, 22, 28, 29, 32, 36], "matrix12d": [9, 10], "matrix2d": 34, "matrix3d": 10, "matrixmax": 11, "matrixmax12d": [6, 9, 13], "matrixmax6d": 10, "matrixmax9d": 10, "matrixx": 6, "matrixxd": [0, 5, 6, 7, 8, 9, 11, 12, 13, 32, 36], "matrixxi": [5, 6, 8, 9, 32, 36], "matrixxx": 0, "max": [0, 5, 9, 11, 19, 23, 25, 30], "max_": [0, 30], "max_allowed_parallel": 33, "max_barrier_stiff": [4, 18, 32], "max_corn": [5, 21], "max_distance_from_linear": [0, 7, 21, 34], "max_index": 5, "max_iter": [0, 7, 21], "max_nthread": 33, "max_step_s": 32, "maxim": [6, 7, 20, 21], "maximum": [0, 4, 5, 6, 7, 18, 19, 20, 21, 28, 32, 33, 34], "md": 0, "mean": [0, 30, 31], "meant": 8, "media": 1, "member": [1, 5, 6, 8, 9, 11, 19, 24, 27, 28, 29], "memori": 0, "mention": 0, "merchant": 16, "merg": [0, 16], "mesh": [0, 5, 6, 7, 9, 11, 12, 13, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 35], "meshio": [32, 36], "method": [0, 5, 6, 7, 9, 12, 14, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 34, 36], "mid": 30, "might": 2, "min": [0, 5, 19, 32, 34], "min_": 34, "min_barrier_stiffness_scal": [0, 4, 18], "min_corn": [5, 21], "min_dist": [0, 4, 6, 7, 18, 20, 21, 32, 34], "min_index": 5, "minchen": [15, 35], "minimum": [0, 4, 5, 6, 7, 9, 11, 13, 18, 19, 20, 21, 23, 25, 27, 34], "minimum_dist": 0, "minor": 30, "minu": [11, 25], "miss": [0, 32], "mistak": 1, "mit": [15, 16], "mkdir": 17, "mode": 0, "model": 0, "moder": 1, "modern": 0, "modif": 0, "modifi": [0, 16, 30], "modulu": 30, "mollif": [0, 10, 24], "mollifi": [0, 9, 13, 23, 27], "mollifier_gradi": [9, 23], "mollifier_gradient_jacobian_wrt_x": [9, 23], "mollifier_gradient_wrt_x": [9, 23], "mollifier_hessian": [9, 23], "mollifier_threshold": [9, 23], "more": [0, 2, 13, 15, 30, 32, 33, 34], "most": [6, 34], "mostli": 0, "motion": 0, "move": [0, 5, 7, 19, 21], "mozilla": 1, "msh": 36, "mshio": 36, "mu": [0, 11, 13, 25, 27, 32, 36], "mu0": [11, 25], "mu1": [11, 25], "multipl": 0, "multipli": [0, 13, 27, 30, 32], "multithread": 0, "must": [0, 9], "mutabl": 5, "my_exe_target": 3, "n": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32], "nabla": 32, "name": [0, 2, 3, 15, 19, 24, 27, 28], "namespac": 0, "nan": 6, "narrow": [0, 2, 6, 7, 15, 20, 21], "narrow_phase_ccd": [0, 6, 7, 20, 21], "narrowphaseccd": [0, 6, 7, 20, 21], "nation": 1, "natur": 1, "ndarrai": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "ndof": [6, 8, 11, 22, 25], "necessarili": 9, "need": [0, 5, 8, 19, 21, 30, 32, 34, 36], "neg": [0, 8, 14, 21, 28, 30, 36], "neo": 35, "neon": 0, "never": [0, 32], "new": [0, 8, 14, 15, 22, 35], "newlin": [11, 25], "newton": [35, 36], "next": [30, 32], "nf_0": 32, "nlohman": [3, 15], "no_mu": [13, 27], "no_zero_toi": [0, 21], "nodal": 30, "node": 30, "non": [0, 9, 10, 23, 24, 32, 33], "nonconvex": 30, "none": [13, 14, 19, 20, 22, 23, 24, 25, 27, 28], "noninfring": 16, "nonlinear": [0, 3, 15, 32], "nonlineartrajectori": [0, 7, 21, 34], "norm": [10, 24, 30, 34], "normal": [0, 6, 9, 10, 13, 20, 23, 24, 27, 32], "normal_force_magnitud": [11, 25], "nose2": 0, "note": 25, "notebook": [13, 17], "notic": 16, "now": [0, 32], "np": [32, 34], "nthread": [28, 33], "num_codim_edg": [8, 22], "num_codim_vertic": [8, 22], "num_edg": [8, 22], "num_fac": [8, 22], "num_method": 5, "num_vertic": [6, 8, 9, 22], "number": [5, 6, 7, 8, 9, 11, 15, 19, 21, 22, 23, 25, 28, 32, 33], "numer": [0, 21, 29, 30], "numpi": [0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32], "ny": 35, "nyu": 1, "obj": 0, "object": [0, 3, 5, 7, 8, 13, 14, 19, 20, 21, 22, 24, 27, 28, 32, 33, 34], "oblig": 1, "obtain": 16, "occupi": [5, 19], "occur": [0, 6, 7, 20, 21, 32], "octob": 35, "off": [0, 3, 28], "offens": 1, "offici": [0, 1, 2], "offlin": 1, "offset": [0, 32], "often": 36, "one": [0, 5, 10, 19, 24, 30, 33, 36], "one_div_voxels": [5, 19], "onetbb": [3, 15, 33], "onli": [0, 2, 3, 30, 32, 36], "onlin": 1, "onto": [14, 28, 36], "open": [0, 1, 2, 15, 31], "oper": [2, 4, 6, 7, 9, 11, 13, 30, 34], "opinion": 1, "option": [0, 21, 36], "order": [0, 5, 30, 32, 33, 34, 35], "org": 1, "organ": [0, 15], "orient": [0, 1], "orient2d": 26, "origin": [0, 3, 9, 10, 15, 23, 24, 30, 32, 34], "ostream": 6, "other": [0, 1, 5, 6, 8, 9, 14, 15, 16, 19, 20, 22, 23, 24, 26, 27, 28, 36], "otherwis": [1, 3, 7, 16, 21, 30, 34], "our": [0, 3, 15, 30, 31, 32, 36], "out": [0, 4, 5, 6, 7, 13, 16, 27, 30, 33, 36], "output": [0, 3, 7, 21, 32], "over": [0, 6, 7, 20, 21, 29, 30, 34], "overal": 1, "overlap": 32, "overli": 0, "overload": [19, 20, 21, 22, 23, 24, 25, 27], "overrid": [0, 4, 5, 6, 7, 9, 11, 13, 21, 34], "p": [0, 5, 7, 10, 11, 19, 21, 24, 25, 30, 34], "p0": [7, 10, 11, 21, 24, 25], "p1": [7, 10, 11, 21, 24, 25], "p_": 30, "p_e": [10, 24], "p_e0": [10, 24], "p_e1": [10, 24], "p_e2": [10, 24], "p_t": [10, 24], "p_t0": [5, 10, 19, 24, 32, 34], "p_t1": [5, 10, 19, 24, 32, 34], "p_t2": [10, 24], "pa": [13, 30], "page": 0, "pair": [0, 10, 11, 19, 24, 25, 29, 30, 32], "panozzo": [15, 35], "paper": [15, 30], "parallel": [0, 3, 10, 15, 24, 32], "parallel_reduc": 0, "paramet": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 36], "parameter": 30, "parametr": [11, 25], "parent": 0, "part": [2, 32, 33], "partial": 32, "particip": 1, "particular": 16, "pascalcas": 29, "pass": [0, 36], "path": [3, 31], "pattern": 1, "pde": 36, "pe": 0, "penetr": 34, "peopl": 1, "per": [0, 30], "perform": [0, 6, 7, 20, 21, 32, 33], "period": 1, "permiss": [1, 16], "permit": 16, "persist": 33, "person": [1, 16], "phase": [0, 6, 7, 9, 12, 15, 20, 21, 23, 26], "physic": [0, 1, 13, 15], "physical_barri": 13, "pi": 34, "pick": 30, "piec": [3, 15, 32, 34], "piecewis": [7, 21, 30, 34], "pip": [17, 36], "place": 0, "plane": 0, "plane_norm": [9, 23], "plane_origin": [9, 23], "planevertexcollis": [9, 23], "pleas": [2, 3, 15, 29, 30, 31], "ply": [32, 36], "point": [0, 5, 7, 8, 9, 11, 19, 21, 22, 25, 29, 30, 32, 34, 36], "point_edge_ccd": [7, 32], "point_edge_dist": [10, 24], "point_edge_distance_gradi": [10, 24], "point_edge_distance_hessian": [10, 24], "point_edge_distance_typ": [10, 24], "point_edge_nonlinear_ccd": [7, 21, 34], "point_edge_relative_veloc": [11, 25], "point_edge_relative_velocity_matrix": [11, 25], "point_edge_relative_velocity_matrix_jacobian": [11, 25], "point_edge_tangent_basi": [11, 25], "point_edge_tangent_basis_jacobian": [11, 25], "point_line_dist": [10, 24], "point_line_distance_gradi": [10, 24], "point_line_distance_hessian": [10, 24], "point_plane_dist": [10, 24], "point_plane_distance_gradi": [10, 24], "point_plane_distance_hessian": [10, 24], "point_point_ccd": 7, "point_point_dist": [10, 24], "point_point_distance_gradi": [10, 24], "point_point_distance_hessian": [10, 24], "point_point_nonlinear_ccd": [7, 21, 34], "point_point_relative_veloc": [11, 25], "point_point_relative_velocity_matrix": [11, 25], "point_point_relative_velocity_matrix_jacobian": [11, 25], "point_point_tangent_basi": [11, 25], "point_point_tangent_basis_jacobian": [11, 25], "point_to_voxel": [5, 19], "point_triangle_ccd": [7, 21, 32], "point_triangle_dist": [10, 24], "point_triangle_distance_gradi": [10, 24], "point_triangle_distance_hessian": [10, 24], "point_triangle_distance_typ": [10, 24], "point_triangle_nonlinear_ccd": [7, 21, 34], "point_triangle_relative_veloc": [11, 25], "point_triangle_relative_velocity_matrix": [11, 25], "point_triangle_relative_velocity_matrix_jacobian": [11, 25], "point_triangle_tangent_basi": [11, 25], "point_triangle_tangent_basis_jacobian": [11, 25], "pointedgedistancetyp": [6, 9, 10, 20, 24], "pointtriangledistancetyp": [6, 9, 10, 20, 24], "polit": 1, "polyfem": [15, 36], "polylin": 8, "polymorph": 0, "port": 0, "portabl": 0, "portion": 16, "posit": [0, 1, 5, 6, 7, 8, 9, 10, 11, 13, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34], "possibl": [0, 2, 32], "possibli": 30, "post": [1, 2], "post_build": 3, "potenti": [0, 4, 9, 11, 15, 18, 23, 29, 30, 35, 36], "potential_hessian": 36, "power": 0, "power_of_two_growth_polici": [19, 22], "pp": 0, "practic": 34, "pranav": 35, "precis": 21, "predic": [0, 3, 15, 26], "prefer": 29, "prefix": [0, 29, 31], "premultipli": [4, 8, 10, 11, 18, 24, 25, 32], "pressur": 30, "prev_dist": 32, "prev_min_dist": [4, 18], "previou": [4, 13, 18, 27, 32], "previous": 0, "primit": [5, 6, 8, 19, 20, 22, 32], "principl": 36, "print": 20, "print_ccd_queri": 20, "prior": 0, "privaci": 1, "privat": [1, 5, 8, 13, 19], "problem": 0, "problemat": 36, "proceed": 35, "process": [3, 15, 21, 32], "produc": [21, 30], "product": [10, 24], "profession": 1, "program": 33, "project": [0, 2, 3, 7, 15, 29, 35], "project_hessian_to_psd": [0, 13, 27, 36], "project_nam": [3, 15], "project_to_pd": [0, 14, 28], "project_to_psd": [0, 14, 28], "projecttopsd": 36, "promptli": 1, "proof": 0, "properti": [19, 20, 22, 23, 24, 25, 27, 28], "propos": [2, 36], "protect": [5, 8, 9, 11, 13, 34], "provabl": [3, 15, 32], "provid": [0, 1, 3, 15, 16, 17, 29, 31, 32, 33, 34, 36], "proxi": 36, "proxy_edg": 36, "proxy_fac": 36, "proxy_mesh": 36, "proxy_rest_posit": 36, "prune": 0, "psd": [0, 14, 28, 35, 36], "psdprojectionmethod": [13, 14, 27, 28], "psi_": 30, "public": [1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 19, 20, 21, 22, 23, 25, 27, 29, 31, 34], "publish": [1, 16], "pull": [0, 15, 29], "purpos": 16, "push": 29, "put": 0, "pv_collis": [9, 23], "py": 17, "pybind11": [0, 15, 17], "pybind11_object": [18, 19, 20, 21, 22, 23, 24, 25, 27, 28], "python": [0, 30, 31, 32, 33, 34, 36], "quadrat": 32, "quadratur": 30, "quantiti": [8, 22], "queri": [0, 5, 6, 20, 21], "query_a_for_a": 5, "query_a_for_b": 5, "query_edge_for_edg": 5, "query_edge_for_triangl": 5, "query_point_for_edg": 5, "query_point_for_point": 5, "query_point_for_triangl": 5, "query_triangle_for_triangl": 5, "question": [0, 1], "queue": 0, "quick": [3, 15], "r": [6, 9, 13, 23, 27, 30, 34], "race": 1, "radiu": [5, 19, 34], "rare": 32, "rather": [0, 3, 32], "ration": [3, 15], "rc": 0, "read": [32, 36], "read_triangle_mesh": [32, 36], "readm": 0, "real": 0, "reason": 1, "recent": 0, "recommend": [0, 7, 15, 21], "reduc": 0, "ref": [0, 10, 11], "refactor": 0, "refer": [0, 3, 5, 9, 11, 14, 15, 17, 19, 23, 25, 29, 32], "refin": 21, "reflect": 0, "regardless": 1, "region": 30, "regist": [5, 19], "reject": 1, "rel": [30, 32], "relative_veloc": [11, 25], "relative_velocity_matrix": [11, 25], "relative_velocity_matrix_jacobian": [11, 25], "releas": [0, 17, 33], "reli": [0, 36], "religion": 1, "remain": 30, "remedi": 36, "rememb": 2, "remov": [1, 30], "renam": 0, "reorder": 0, "replac": 0, "repo": 17, "report": [0, 1, 15, 32], "repositori": [0, 15, 17], "repres": [0, 1, 6, 32], "reproduc": 2, "request": [1, 15, 29], "requir": [0, 3, 15, 30, 32], "rescal": [0, 7, 21], "research": 35, "reset": 33, "resiz": 5, "resolv": 0, "respect": [0, 1, 11, 13, 25, 27, 32, 34, 36], "rest": [0, 8, 9, 10, 13, 22, 23, 24, 27, 29, 36], "rest_posit": [8, 9, 13, 22, 23, 27, 29, 32, 36], "restrict": 16, "result": [0, 30, 33], "retriev": 14, "return": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34], "reusabl": 15, "review": 1, "revis": 0, "rh": [19, 22], "right": [1, 4, 5, 16, 18, 19, 30, 32], "right_top_corn": [5, 19], "rightarrow": 30, "rigid": [15, 34, 35], "rigid2dtrajectori": 34, "robin": [0, 3, 15], "robin_map": 19, "robin_set": 22, "root": [17, 21], "rotat": 34, "rotation2d": 34, "round": [0, 33], "row": [7, 8, 21, 22, 32, 36], "rowwis": [6, 13, 20, 27], "rule": [8, 22, 29, 36], "run": [0, 21], "runtim": 0, "runtime_error": [13, 27], "safe": 14, "same": [0, 5, 30, 32, 36], "sampl": 0, "save": 0, "save_obj": [6, 20], "scalabl": [0, 3, 15, 35], "scalable_ccd": 5, "scalar": [0, 32], "scale": [4, 18, 27, 32, 35], "scene": [4, 18, 21], "scheme": [0, 32], "schneider": [15, 35], "scipi": [22, 23, 25, 27], "scope": [2, 33], "scratch": 17, "script": 17, "search": [0, 32], "second": [0, 4, 5, 6, 7, 10, 11, 18, 20, 21, 24, 25, 32, 34], "second_deriv": [4, 18], "section": 0, "secur": 1, "see": [0, 1, 3, 13, 15, 30, 32], "segment": [0, 10, 24, 26, 34], "segment_segment_intersect": [0, 26], "select": [0, 6, 8, 36], "self": [0, 12, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34], "sell": 16, "semi": [13, 27], "semidefinit": 36, "send": 2, "separ": [0, 6, 7, 9, 20, 21, 23, 34], "seper": 0, "seri": 1, "seriou": 1, "serv": 0, "set": [0, 1, 3, 5, 6, 9, 13, 15, 20, 23, 27, 28, 29, 30, 32, 33, 36], "set_barri": 13, "set_dhat": 13, "set_enable_shape_deriv": 9, "set_epsv": 13, "set_level": 33, "set_logg": [14, 33], "set_logger_level": [28, 33], "set_memb": 29, "set_num_thread": [28, 33], "set_use_area_weight": [9, 30], "set_use_improved_max_approxim": [9, 30], "set_use_physical_barri": [13, 30], "setminu": 30, "setminus_r": 30, "setter": 0, "setup": [2, 14, 17], "setuptool": 17, "sever": 36, "sex": 1, "sexual": 1, "shall": 16, "shape": [0, 9, 13, 22, 27], "shape_deriv": [13, 27], "share": [0, 3], "shared_ptr": [5, 13, 14, 33], "shell": [32, 36], "should": [0, 3, 8, 9, 13, 20, 22, 23, 30, 32, 36], "show": [32, 33, 36], "shown": 0, "siggraph": [15, 35], "sign": 0, "significantli": 33, "silicon": 0, "sim": [2, 3, 15, 16, 17, 35], "simd": 0, "similar": [0, 3, 15, 32], "similarli": 36, "simpl": [0, 3, 15, 17], "simplebvh": [0, 3, 5, 15, 32], "simpli": [15, 30, 36], "simplifi": [0, 30], "simul": [5, 15, 19, 21, 32, 35], "sin": 34, "singl": [0, 1, 3, 13, 21, 27, 32], "sink": 33, "sink_ptr": 33, "size": [0, 1, 6, 7, 8, 9, 11, 13, 20, 21, 22, 25, 27, 30, 32], "size_t": [5, 6, 8, 9, 11], "small": [0, 32], "smooth": [10, 13, 15, 24, 27, 30, 32], "smoothli": [0, 4, 18, 30, 32], "snake_cas": [0, 29], "so": [0, 3, 8, 13, 16, 30, 33], "social": 1, "socio": 1, "softwar": [2, 15, 16], "sole": 0, "solut": 36, "solv": [30, 32], "solver": [15, 21, 30, 32], "some": [0, 5, 9, 17, 23, 36], "sort": [0, 1, 6, 20], "sourc": [0, 2], "space": [1, 7, 11, 25, 30], "spars": [22, 23, 25, 27, 32], "sparsematrix": [8, 13, 32, 36], "sparsevector": [8, 9, 11], "sparsiti": 30, "spatial": [0, 32], "spatial_hash": [0, 5, 19, 32], "spatialhash": [0, 5, 19], "spdlog": [0, 3, 14, 15, 33], "specifi": [0, 1, 32], "speed": [0, 11, 25], "sphere": [5, 19], "squar": [0, 10, 13, 24, 30, 32], "squash": 32, "src": [0, 31], "stabl": 0, "stabler": 35, "stack": 33, "stai": 33, "standard": 0, "start": [2, 5, 6, 7, 19, 20, 21, 29, 34], "state": [19, 24, 27, 28], "static": [0, 3, 5, 8, 11, 19, 22, 25, 32, 34], "statu": 1, "std": [0, 3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 19, 22, 27, 33, 36], "stdout": 33, "stdout_color_sink_mt": 33, "stencil": [0, 9, 11, 13, 23, 25, 27, 30], "step": [2, 6, 7, 20, 21, 32, 36], "stick": 29, "stiff": [11, 13, 15, 25, 27, 30], "store": [0, 13, 22, 27, 32, 36], "str": [19, 20, 23, 24, 27, 28], "strategi": 0, "stream": 6, "string": [6, 9, 33], "struct": 29, "structur": [0, 3, 15, 32], "subclass": [4, 5, 6, 7, 9, 11, 13], "subject": 16, "sublicens": 16, "submit": 15, "subsequ": 30, "subset": 30, "subseteq": 30, "substanti": 16, "success": 17, "suffici": 34, "suffix": 29, "suggest": 0, "suitabl": 2, "sum": [0, 8, 27, 30, 32], "sum_": [30, 32], "summar": 30, "summat": 30, "sup": 0, "super": 13, "supplement": 0, "support": [0, 6, 32, 33], "sure": [13, 27], "surfac": [0, 6, 7, 8, 20, 21, 22, 30, 32, 36], "sustain": 1, "swap": 5, "swap_ord": 5, "sweep": 0, "sweep_and_prun": [0, 5, 19, 32], "sweep_and_tiniest_queu": [0, 5, 19, 32], "sweep_and_tiniest_queue_gpu": 0, "sweepandprun": [5, 19], "switch": 0, "symmetr": [0, 14, 28], "system": [0, 2, 3, 15, 17], "t": [0, 5, 6, 7, 9, 13, 19, 20, 21, 23, 27, 30, 32, 34], "t0": [7, 10, 11, 12, 21, 24, 25, 26, 34], "t0_t0": 32, "t0_t1": 32, "t1": [7, 10, 11, 12, 21, 24, 25, 26, 34], "t1_t0": 32, "t1_t1": 32, "t2": [7, 10, 11, 12, 21, 24, 25, 26], "t2_t0": 32, "t2_t1": 32, "t_0": [0, 11, 25, 34], "t_1": [0, 11, 25, 34], "t_2": [11, 25], "t_k": 32, "tag": [2, 3], "take": [0, 1, 8, 13, 22, 27, 30, 32, 34], "taken": 32, "tang": 0, "tangent": 0, "tangent_basi": [11, 25], "tangenti": [0, 11, 25, 32], "target": [0, 3, 31], "target_file_dir": 3, "target_link_librari": [3, 15], "target_runtime_dl": 3, "tbb": [0, 33], "tcollis": 13, "technic": 0, "templat": [0, 5, 6, 9, 13, 14], "tempor": [5, 19], "term": [0, 1, 9, 23, 29, 30], "teseo": [15, 35], "teseoch": 0, "test": [0, 17, 26], "tet": 36, "tetra": 36, "text": 30, "th": 32, "than": [0, 3, 4, 15, 18, 31, 32, 33], "thank": 0, "thei": [1, 2, 26, 30, 31, 33], "them": [0, 17, 30, 32], "therefor": 30, "theta": 34, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 32, 33, 34, 36], "thick": 0, "thin": 30, "third": [7, 10, 11, 21, 24, 25, 30], "those": [1, 2, 31], "thread": 14, "thread_limit": 33, "threaten": 1, "three": 30, "threshold": [0, 9, 10, 23, 24, 31, 32], "through": [0, 1, 2, 3, 15, 32, 36], "throw": 13, "ti": [5, 35], "tight": [0, 3, 15, 30, 32], "tight_inclus": [21, 35], "tight_inclusion_with_no_zero_toi": 0, "tighter": [7, 21], "tightinclus": 0, "tightinclusionccd": [0, 7, 20, 21, 34], "tild": 30, "time": [0, 1, 5, 6, 7, 8, 11, 19, 20, 21, 25, 30, 32, 34, 35], "timer": 2, "timothi": [15, 35], "tiniest": 0, "titl": 15, "tmax": [0, 6, 7, 20, 21, 34], "to_edge_index": [5, 19], "to_full_dof": [0, 8, 22, 36], "to_full_vertex_id": [8, 22], "to_str": [9, 23], "to_triangle_index": [5, 19], "todo": [0, 36], "togeth": 30, "toi": [0, 6, 7, 21, 32, 34], "toler": [0, 7, 9, 21], "too": [31, 32], "toolkit": [0, 2, 3, 7, 15, 17, 32, 33, 36], "top": [5, 19], "torotationmatrix": 34, "tort": 16, "total": 30, "toward": 1, "trace": 28, "track": 0, "trajectori": [0, 3, 6, 7, 15, 20, 21], "tran": 15, "transact": 35, "transfer": 36, "transform": [8, 34], "transit": 32, "translat": [1, 34], "travers": 30, "treat": 30, "tri_ind": 5, "tri_start_ind": [5, 19], "triangl": [0, 5, 7, 8, 15, 19, 21, 30, 32, 36], "triangul": [30, 32], "triangular": [5, 8, 32], "triplet": [13, 27], "troll": 1, "troubleshoot": 2, "true": [0, 3, 6, 7, 8, 20, 21, 22, 26, 30, 33], "truncat": 33, "tsl": [19, 22], "tupl": [18, 19, 20, 21], "turn": 30, "tutori": [0, 3, 15, 17, 32], "tv": 32, "two": [0, 5, 6, 7, 8, 10, 11, 13, 19, 20, 21, 22, 24, 25, 26, 30, 31, 32], "txt": 33, "type": [0, 5, 6, 9, 11, 13, 18, 20, 21, 23], "typenam": [5, 6, 9, 13, 14], "typo": 0, "u": [0, 1, 3, 30, 32, 35], "unaccept": 1, "undeform": 32, "under": [0, 3], "underset": 34, "unfortun": 33, "unifi": 0, "unit": [0, 4, 13, 18, 30, 32], "unmollifi": 13, "unordered_map": [3, 5, 15], "unordered_set": [3, 5, 8, 15], "unprofession": 1, "unsolicit": 1, "unsquar": 13, "until": [21, 33], "unwelcom": 1, "up": 0, "updat": [0, 4, 18, 32, 34], "update_barrier_stiff": [0, 4, 18, 32], "upper": 21, "upstream": 0, "ureta": 35, "url": [0, 15], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36], "usa": 35, "usag": 0, "use_area_weight": [0, 9, 23, 30], "use_convergent_formul": 0, "use_improved_max_approxim": [0, 9, 23, 30], "use_physcial_barri": 0, "use_physical_barri": [13, 27, 30], "user": 0, "using_minimum_separ": 21, "util": [0, 3, 15, 29, 32, 33], "v": [0, 8, 22, 27, 30, 32], "v0": 0, "v1": 3, "v_": 30, "v_rest": 0, "v_t0": 21, "v_t1": 21, "valu": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 34, 36], "value_typ": [9, 11, 13], "variabl": [0, 7, 13, 27, 29, 32], "variou": 0, "vdot": 32, "vector": [5, 6, 8, 9, 11, 13, 19, 22, 25, 32, 33, 36], "vector12d": [9, 10], "vector2d": [11, 34], "vector3d": [10, 11, 12, 32], "vectormax": 0, "vectormax12": 6, "vectormax12d": [6, 9, 11, 13], "vectormax2d": 11, "vectormax3": 6, "vectormax3d": [5, 7, 9, 10, 11, 34], "vectormax3i": 7, "vectormax6d": 10, "vectormax9d": 10, "vectorx": 0, "vectorx3": 0, "vectorxd": [0, 4, 8, 11, 13, 32, 36], "vectorxi": [8, 36], "veloc": [0, 13, 27, 29, 32, 36], "veri": [3, 15], "verifi": 33, "verison": 0, "version": [0, 1, 2, 3, 15], "vert": 0, "vert_2": 0, "vert_ind": 5, "vertex": [0, 5, 7, 8, 10, 13, 19, 21, 22, 24, 27, 29, 32], "vertex0_id": [6, 9, 11, 20, 23], "vertex1_id": [6, 9, 11, 20, 23], "vertex_area": [8, 22], "vertex_area_gradi": [8, 22], "vertex_box": 5, "vertex_bvh": 5, "vertex_edge_adjac": [8, 22], "vertex_id": [5, 6, 9, 11, 13, 19, 20, 23, 27], "vertex_item": 5, "vertex_matrix_to_dof_matrix": 8, "vertex_vertex_adjac": [8, 22], "vertexvertexcandid": [5, 6, 9, 11, 19, 20, 23, 25], "vertexvertexcollis": [6, 9, 11, 23, 25], "vertexvertexfrictioncollis": [6, 11, 25], "vertic": [0, 5, 6, 7, 8, 9, 11, 12, 13, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 33], "vertices_t0": [5, 6, 7, 19, 20, 21, 32], "vertices_t1": [5, 6, 7, 19, 20, 21, 32], "vi": [5, 8, 22], "via": 1, "viewpoint": 1, "violat": 1, "virtual": [0, 4, 5, 6, 7, 9, 11, 13, 34], "visibl": 1, "void": [5, 6, 8, 9, 11, 13, 14, 33], "volum": [3, 15, 19], "volumetr": 8, "volunt": 2, "vouga": [0, 3, 15], "voxel": [0, 5, 19], "voxel_axis_index": 5, "voxel_axis_index_to_voxel_index": 5, "voxel_count": [5, 19], "voxel_count_0x1": [5, 19], "voxel_s": [5, 19], "voxel_size_heurist": 0, "voxel_to_primit": [5, 19], "vv": [6, 9, 23], "vv_candid": [6, 20, 23], "vv_collis": [9, 11, 23, 25], "vv_sort_axi": 5, "w": [6, 9, 13, 23, 27, 35], "w_": 30, "w_x": 30, "wa": [0, 1, 17, 30], "wai": [1, 2, 3, 15, 17], "walk": 32, "wang": [0, 3, 15, 32, 35], "want": [2, 3, 13, 15, 30, 33, 36], "warn": [0, 28, 33], "warranti": 16, "we": [0, 1, 3, 13, 15, 17, 29, 30, 31, 32, 34, 36], "web": 2, "websit": 0, "weight": [0, 9, 11, 23, 25, 30, 32], "weight_gradi": [9, 11, 23, 25], "welcom": [1, 2], "well": [1, 30, 36], "were": [0, 1, 13, 27, 30], "werror": 0, "wfloat": 0, "what": [1, 32], "when": [0, 1, 3, 5, 13, 15, 29, 30, 32, 33, 36], "where": [0, 3, 15, 30, 32, 34, 36], "whether": [2, 5, 8, 13, 16, 22, 26, 27], "which": [0, 1, 5, 9, 15, 17, 19, 21, 23, 32, 36], "while": [30, 34, 36], "whoever": 2, "whole": 21, "whom": 16, "whose": [11, 25, 32], "why": [1, 20], "wiki": 1, "wise": 32, "wish": 17, "within": 1, "without": [0, 1, 16], "work": [2, 15, 20, 30, 34, 36], "world": [0, 5, 19], "world_bbox_diagonal_length": 32, "would": [2, 3, 15, 30], "wrap": 0, "write": 6, "write_ccd_queri": 6, "written": 1, "wrt": [4, 8, 9, 10, 11, 13, 18, 22, 23, 24, 25, 27], "www": [1, 35], "x": [0, 5, 6, 8, 10, 13, 22, 24, 27, 30, 32, 34], "x_1": 32, "x_2": 30, "x_n": 32, "xi": 32, "xin": 35, "xml": 7, "xyz": 0, "y": [5, 32], "y_1": 32, "y_n": 32, "year": 15, "yet": 33, "yml": 0, "york": 35, "you": [0, 2, 3, 7, 15, 17, 21, 31, 32, 33, 36], "young": 30, "your": [2, 3, 15, 17, 29, 32, 33, 36], "z": 5, "z_1": 32, "z_n": 32, "zachari": [15, 35], "zero": [0, 10, 14, 21, 24, 28, 34], "zferg": 35, "zfergu": [0, 1], "zhao": 35, "zheng": 35, "zorin": [15, 35], "\u03ba": 13, "\u211d": 8}, "titles": ["Changelog", "Contributor Covenant Code of Conduct", "Contributing", "C++", "Barrier", "Broad Phase", "Candidates", "Continuous Collision Detection", "Collision Mesh", "Collisions", "Distance", "Friction", "Intersections", "Potentials", "Utils", "Home", "License", "Python", "Barrier", "Broad Phase", "Candidates", "Continuous Collision Detection", "Collision Mesh", "Collisions", "Distance", "Friction", "Intersections", "Potentials", "Utils", "Style Guide", "Convergent Formulation", "Frequently Asked Questions", "Getting Started", "Miscellaneous", "Nonlinear CCD", "References", "Physical Simulation"], "titleterms": {"0": 0, "01": 0, "02": 0, "03": 0, "04": 0, "05": 0, "06": 0, "07": 0, "08": 0, "09": 0, "1": [0, 1], "10": 0, "11": 0, "12": 0, "1479aae": 0, "15": 0, "17": 0, "18": 0, "19": 0, "1d51a61": 0, "2": [0, 1], "20": 0, "2020": 0, "2021": 0, "2023": 0, "2024": 0, "21": 0, "22": 0, "24056cc": 0, "245b13b": 0, "25": 0, "26": 0, "29": 0, "293d0ad": 0, "3": [0, 1], "31a37e0": 0, "4": 1, "4553509": 0, "4a5f84f": 0, "4d16954": 0, "51f4903": 0, "5582582": 0, "59ec167": 0, "5c34dcd": 0, "664d65f": 0, "6ee60a": 0, "7301b42": 0, "7dd2ab7": 0, "81d65f3": 0, "86ae4e5": 0, "93143ad": 0, "9a4576b": 0, "9b4ebfc": 0, "9be6c0f": 0, "9c7493": 0, "9e2cc2a": 0, "a20f7a2": 0, "a395175": 0, "aa59aeb": 0, "aabb": [5, 19], "acb7664": 0, "acf2a80": 0, "ad": 0, "adapt": [4, 18, 32], "addit": [7, 21], "answer": 31, "ask": 31, "attribut": 1, "aug": 0, "b3808e1": 0, "b48ba0e": 0, "b510253": 0, "b737fb0": 0, "ban": 1, "barrier": [4, 13, 18, 27, 30, 32], "base": [13, 36], "basi": [11, 25], "bind": 15, "broad": [5, 19, 32], "brute": [5, 19], "bug": 2, "build": [3, 15, 17, 31], "bvh": [5, 19], "c": 3, "c8a6d5": 0, "candid": [6, 20], "cb8b53f": 0, "cc3947d": 0, "ccd": [7, 21, 34], "chang": 0, "changelog": 0, "check": 33, "citat": 15, "clamp": [4, 18], "class": [4, 18], "cmake": 17, "code": [1, 29], "codimension": 36, "collis": [6, 7, 8, 9, 11, 20, 21, 22, 23, 25, 32], "comput": 34, "conduct": 1, "conserv": 34, "continu": [6, 7, 20, 21, 32], "contribut": [2, 15], "contributor": 1, "convent": 29, "converg": 30, "correct": 1, "coven": 1, "curv": 36, "dec": 0, "deee6d0": 0, "defin": 34, "definit": [14, 28, 36], "depend": [3, 15], "deriv": 32, "descript": 15, "detail": [0, 30], "detect": [7, 21, 32], "determin": 31, "dissip": 32, "distanc": [10, 13, 24], "do": 31, "document": [2, 17, 29], "e24c76d": 0, "edg": [6, 9, 10, 11, 20, 23, 24, 25, 31], "enforc": 1, "envelop": 34, "error": 20, "face": [6, 9, 20, 23, 31], "featur": [2, 15], "feb": 0, "feedback": 2, "fix": [0, 2], "forc": [5, 11, 19, 25], "format": 29, "formul": 30, "frequent": 31, "friction": [11, 13, 25, 27, 30, 32], "from": 31, "function": [7, 21], "gener": [7, 13, 21, 29], "get": 32, "grid": [5, 19], "guid": 29, "guidelin": 1, "hash": [5, 19], "help": 17, "here": 31, "home": 15, "how": 31, "i": 31, "implement": 2, "import": [30, 32], "includ": 31, "inclus": 21, "individu": [7, 21], "instal": 17, "interfac": [7, 21], "intersect": [12, 26, 31, 33], "ipc": 31, "jacobian": [11, 25], "jul": 0, "licens": [15, 16], "limit": 15, "line": [10, 24], "log": [4, 18], "logger": [14, 28, 33], "magnitud": [11, 25], "matrici": [11, 25], "matrix": [11, 25, 31], "mesh": [8, 22, 32, 36], "minimum": 32, "miscellan": 33, "model": 32, "mollifi": [10, 11, 24, 25], "multi": [28, 33], "multipli": [11, 25], "my": 31, "name": 29, "narrow": 32, "nonlinear": [7, 21, 34, 36], "normal": [11, 25], "note": [20, 21, 24, 30, 32, 34], "nov": 0, "option": [3, 15], "our": 1, "perform": 34, "perman": 1, "phase": [5, 19, 32], "physic": [30, 36], "plane": [9, 10, 23, 24], "pledg": 1, "point": [10, 24], "posit": [14, 28, 36], "potenti": [13, 27, 32], "pre": 0, "project": [14, 28, 31, 36], "prune": [5, 19], "python": [15, 17], "question": 31, "queue": [5, 19], "refer": 35, "rel": [11, 25], "remov": 0, "report": 2, "respons": 1, "scope": 1, "semi": [14, 28, 36], "separ": 32, "should": 31, "simul": 36, "smooth": [11, 25], "spatial": [5, 19], "specif": 29, "standard": 1, "start": 32, "static": 33, "stencil": [6, 20], "stiff": [4, 18, 32], "style": 29, "submit": 2, "sweep": [5, 19], "tangent": [11, 25], "technic": 30, "temporari": 1, "test": [3, 15], "thick": 32, "thread": [28, 33], "tight": 21, "tiniest": [5, 19], "tip": 3, "toolkit": 31, "trajectori": 34, "triangl": [10, 11, 24, 25], "type": [2, 10, 24], "unit": [3, 15], "usag": [3, 15], "util": [14, 28], "v1": 0, "veloc": [11, 25], "vertex": [6, 9, 11, 20, 23, 25], "vertic": 36, "volumetr": 36, "warn": [1, 3, 24, 36], "what": 31, "which": 31, "write": 2}})